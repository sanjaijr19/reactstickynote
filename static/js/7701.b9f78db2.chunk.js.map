{"version":3,"file":"static/js/7701.b9f78db2.chunk.js","mappings":"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","sources":["components/PageTitle.js","pages/uikit/Tabs.js","../node_modules/@restart/hooks/esm/useForceUpdate.js","../node_modules/@restart/ui/esm/DataKey.js","../node_modules/@restart/ui/esm/NavContext.js","../node_modules/@restart/ui/esm/NoopTransition.js","../node_modules/@restart/ui/esm/SelectableContext.js","../node_modules/@restart/ui/node_modules/uncontrollable/lib/esm/index.js","../node_modules/dom-helpers/esm/querySelectorAll.js","../node_modules/react-bootstrap/esm/Fade.js","../node_modules/react-bootstrap/esm/NavbarContext.js","../node_modules/@react-aria/ssr/dist/packages/@react-aria/ssr/src/SSRProvider.tsx"],"sourcesContent":["// @flow\nimport React from 'react';\nimport { Row, Col, Breadcrumb } from 'react-bootstrap';\n\ntype BreadcrumbItems = {\n    label: string,\n    path: string,\n    active?: boolean,\n};\n\ntype PageTitleProps = {\n    breadCrumbItems: Array<BreadcrumbItems>,\n    title: string,\n};\n\n/**\n * PageTitle\n */\nconst PageTitle = (props: PageTitleProps): React$Element<any> => {\n    return (\n        <Row>\n            <Col>\n                <div className=\"page-title-box\">\n                    <div className=\"page-title-right\">\n                        <Breadcrumb listProps={{ className: 'm-0' }}>\n                            <Breadcrumb.Item href=\"/\">Stickynote</Breadcrumb.Item>\n\n                            {props.breadCrumbItems.map((item, index) => {\n                                return item.active ? (\n                                    <Breadcrumb.Item active key={index}>\n                                        {item.label}\n                                    </Breadcrumb.Item>\n                                ) : (\n                                    <Breadcrumb.Item key={index} href={item.path}>\n                                        {item.label}\n                                    </Breadcrumb.Item>\n                                );\n                            })}\n                        </Breadcrumb>\n                    </div>\n                    <h4 className=\"page-title\">{props.title}</h4>\n                </div>\n            </Col>\n        </Row>\n    );\n};\n\nexport default PageTitle;\n","// @flow\nimport React from 'react';\nimport { Row, Col, Card, Tab, Nav } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport classnames from 'classnames';\n\n// components\nimport PageTitle from '../../components/PageTitle';\n\nconst TabsExample = (): React$Element<React$FragmentType> => {\n    const tabContents = [\n        {\n            id: '1',\n            title: 'Home',\n            icon: 'mdi mdi-home-variant',\n            text: 'Home - Food truck quinoa dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Donec quam felis, ultricies nec, pellentesque eu, pretium quis, sem. Nulla consequat massa quis enim.',\n        },\n        {\n            id: '2',\n            title: 'Profile',\n            icon: 'mdi mdi-account-circle',\n            text: 'Profile - Food truck quinoa dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Donec quam felis, ultricies nec, pellentesque eu, pretium quis, sem. Nulla consequat massa quis enim.',\n        },\n        {\n            id: '3',\n            title: 'Settings',\n            icon: 'mdi mdi-cog-outline',\n            text: 'Settings - Food truck quinoa dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Donec quam felis, ultricies nec, pellentesque eu, pretium quis, sem. Nulla consequat massa quis enim.',\n        },\n    ];\n\n    return (\n        <>\n            <PageTitle\n                breadCrumbItems={[\n                    { label: 'Base UI', path: '/ui/tabs' },\n                    { label: 'Tabs', path: '/ui/tabs', active: true },\n                ]}\n                title={'Tabs'}\n            />\n\n            <Row>\n                <Col lg={6}>\n                    <Card>\n                        <Card.Body>\n                            <h4 className=\"header-title mb-3\">Default Tabs</h4>\n                            <p className=\"text-muted font-14 mb-3\">Simple widget of tabbable panes of local content.</p>\n\n                            <Tab.Container defaultActiveKey=\"Profile\">\n                                <Nav variant=\"tabs\">\n                                    {tabContents.map((tab, index) => {\n                                        return (\n                                            <Nav.Item key={index}>\n                                                <Nav.Link as={Link} to=\"#\" eventKey={tab.title}>\n                                                    <i\n                                                        className={classnames(\n                                                            tab.icon,\n                                                            'd-md-none',\n                                                            'd-block',\n                                                            'me-1'\n                                                        )}></i>\n                                                    <span className=\"d-none d-md-block\">{tab.title}</span>\n                                                </Nav.Link>\n                                            </Nav.Item>\n                                        );\n                                    })}\n                                </Nav>\n\n                                <Tab.Content>\n                                    {tabContents.map((tab, index) => {\n                                        return (\n                                            <Tab.Pane eventKey={tab.title} id={tab.id} key={index}>\n                                                <Row>\n                                                    <Col sm=\"12\">\n                                                        <p className=\"mt-3\">{tab.text}</p>\n                                                    </Col>\n                                                </Row>\n                                            </Tab.Pane>\n                                        );\n                                    })}\n                                </Tab.Content>\n                            </Tab.Container>\n                        </Card.Body>\n                    </Card>\n                </Col>\n\n                {/* tab justified */}\n                <Col lg={6}>\n                    <Card>\n                        <Card.Body>\n                            <h4 className=\"header-title mb-3\">Tabs Justified</h4>\n                            <p className=\"text-muted font-14 mb-3\">\n                                If you want each NavItem to be the same size use <code>justify</code>.\n                            </p>\n\n                            <Tab.Container defaultActiveKey=\"Profile\">\n                                <Nav variant=\"pills\" justify className=\"bg-nav-pills\">\n                                    {tabContents.map((tab, index) => {\n                                        return (\n                                            <Nav.Item key={index}>\n                                                <Nav.Link as={Link} to=\"#\" eventKey={tab.title}>\n                                                    <i\n                                                        className={classnames(\n                                                            tab.icon,\n                                                            'd-md-none',\n                                                            'd-block',\n                                                            'me-1'\n                                                        )}></i>\n                                                    <span className=\"d-none d-md-block\">{tab.title}</span>\n                                                </Nav.Link>\n                                            </Nav.Item>\n                                        );\n                                    })}\n                                </Nav>\n\n                                <Tab.Content>\n                                    {tabContents.map((tab, index) => {\n                                        return (\n                                            <Tab.Pane eventKey={tab.title} id={tab.id} key={index}>\n                                                <Row>\n                                                    <Col sm=\"12\">\n                                                        <p className=\"mt-3\">{tab.text}</p>\n                                                    </Col>\n                                                </Row>\n                                            </Tab.Pane>\n                                        );\n                                    })}\n                                </Tab.Content>\n                            </Tab.Container>\n                        </Card.Body>\n                    </Card>\n                </Col>\n            </Row>\n\n            {/* vertical tab */}\n            <Row>\n                <Col lg={6}>\n                    <Card>\n                        <Card.Body>\n                            <h4 className=\"header-title mb-3\">Tabs Vertical Left</h4>\n                            <p className=\"text-muted font-14 mb-3\">\n                                You can stack your navigation by changing the flex item direction with the{' '}\n                                <code>.flex-column</code> utility.\n                            </p>\n\n                            <Row>\n                                <Tab.Container defaultActiveKey=\"Profile\">\n                                    <Col sm={3} className=\"mb-2 mb-sm-0\">\n                                        <Nav variant=\"pills\" className=\"flex-column\">\n                                            {tabContents.map((tab, index) => {\n                                                return (\n                                                    <Nav.Item key={index}>\n                                                        <Nav.Link as={Link} to=\"#\" eventKey={tab.title}>\n                                                            <i\n                                                                className={classnames(\n                                                                    tab.icon,\n                                                                    'd-md-none',\n                                                                    'd-block',\n                                                                    'me-1'\n                                                                )}></i>\n                                                            <span className=\"d-none d-md-block\">{tab.title}</span>\n                                                        </Nav.Link>\n                                                    </Nav.Item>\n                                                );\n                                            })}\n                                        </Nav>\n                                    </Col>\n\n                                    <Col sm={9}>\n                                        <Tab.Content>\n                                            {tabContents.map((tab, index) => {\n                                                return (\n                                                    <Tab.Pane eventKey={tab.title} id={tab.id} key={index}>\n                                                        <Row>\n                                                            <Col sm=\"12\">\n                                                                <p className=\"mt-3\">{tab.text}</p>\n                                                            </Col>\n                                                        </Row>\n                                                    </Tab.Pane>\n                                                );\n                                            })}\n                                        </Tab.Content>\n                                    </Col>\n                                </Tab.Container>\n                            </Row>\n                        </Card.Body>\n                    </Card>\n                </Col>\n\n                <Col lg={6}>\n                    <Card>\n                        <Card.Body>\n                            <h4 className=\"header-title mb-3\">Tabs Vertical Right</h4>\n                            <p className=\"text-muted font-14 mb-3\">\n                                You can stack your navigation by changing the flex item direction with the{' '}\n                                <code>.flex-column</code> utility.\n                            </p>\n\n                            <Row>\n                                <Tab.Container defaultActiveKey=\"Profile\">\n                                    <Col sm={9}>\n                                        <Tab.Content>\n                                            {tabContents.map((tab, index) => {\n                                                return (\n                                                    <Tab.Pane eventKey={tab.title} id={tab.id} key={index}>\n                                                        <Row>\n                                                            <Col sm=\"12\">\n                                                                <p className=\"mt-3\">{tab.text}</p>\n                                                            </Col>\n                                                        </Row>\n                                                    </Tab.Pane>\n                                                );\n                                            })}\n                                        </Tab.Content>\n                                    </Col>\n                                    <Col sm={3} className=\"mb-2 mb-sm-0\">\n                                        <Nav variant=\"pills\" className=\"flex-column\">\n                                            {tabContents.map((tab, index) => {\n                                                return (\n                                                    <Nav.Item key={index}>\n                                                        <Nav.Link as={Link} to=\"#\" eventKey={tab.title}>\n                                                            <i\n                                                                className={classnames(\n                                                                    tab.icon,\n                                                                    'd-md-none',\n                                                                    'd-block',\n                                                                    'me-1'\n                                                                )}></i>\n                                                            <span className=\"d-none d-md-block\">{tab.title}</span>\n                                                        </Nav.Link>\n                                                    </Nav.Item>\n                                                );\n                                            })}\n                                        </Nav>\n                                    </Col>\n                                </Tab.Container>\n                            </Row>\n                        </Card.Body>\n                    </Card>\n                </Col>\n            </Row>\n\n            {/* Bordered Tabs */}\n            <Row>\n                <Col lg={6}>\n                    <Card>\n                        <Card.Body>\n                            <h4 className=\"header-title mb-3\">Tabs Bordered</h4>\n                            <p className=\"text-muted font-14 mb-3\">\n                                The navigation item can have a simple bottom border as well. Just specify the class{' '}\n                                <code>.nav-bordered</code>.\n                            </p>\n\n                            <Tab.Container defaultActiveKey=\"Profile\">\n                                <Nav variant=\"tabs\" className=\"nav-bordered\" as=\"ul\">\n                                    {tabContents.map((tab, index) => {\n                                        return (\n                                            <Nav.Item key={index} as=\"li\">\n                                                <Nav.Link as={Link} to=\"#\" eventKey={tab.title}>\n                                                    <i\n                                                        className={classnames(\n                                                            tab.icon,\n                                                            'd-md-none',\n                                                            'd-block',\n                                                            'me-1'\n                                                        )}></i>\n                                                    <span className=\"d-none d-md-block\">{tab.title}</span>\n                                                </Nav.Link>\n                                            </Nav.Item>\n                                        );\n                                    })}\n                                </Nav>\n\n                                <Tab.Content>\n                                    {tabContents.map((tab, index) => {\n                                        return (\n                                            <Tab.Pane eventKey={tab.title} id={tab.id} key={index}>\n                                                <Row>\n                                                    <Col sm=\"12\">\n                                                        <p className=\"mt-3\">{tab.text}</p>\n                                                    </Col>\n                                                </Row>\n                                            </Tab.Pane>\n                                        );\n                                    })}\n                                </Tab.Content>\n                            </Tab.Container>\n                        </Card.Body>\n                    </Card>\n                </Col>\n\n                {/* tab justified */}\n                <Col lg={6}>\n                    <Card>\n                        <Card.Body>\n                            <h4 className=\"header-title mb-3\">Tabs Bordered Justified</h4>\n                            <p className=\"text-muted font-14 mb-3\">\n                                The navigation item with a simple bottom border and justified.\n                            </p>\n\n                            <Tab.Container defaultActiveKey=\"Profile\">\n                                <Nav variant=\"tabs\" justify className=\"nav-bordered\" as=\"ul\">\n                                    {tabContents.map((tab, index) => {\n                                        return (\n                                            <Nav.Item key={index} as=\"li\">\n                                                <Nav.Link as={Link} to=\"#\" eventKey={tab.title}>\n                                                    <i\n                                                        className={classnames(\n                                                            tab.icon,\n                                                            'd-md-none',\n                                                            'd-block',\n                                                            'me-1'\n                                                        )}></i>\n                                                    <span className=\"d-none d-md-block\">{tab.title}</span>\n                                                </Nav.Link>\n                                            </Nav.Item>\n                                        );\n                                    })}\n                                </Nav>\n\n                                <Tab.Content>\n                                    {tabContents.map((tab, index) => {\n                                        return (\n                                            <Tab.Pane eventKey={tab.title} id={tab.id} key={index}>\n                                                <Row>\n                                                    <Col sm=\"12\">\n                                                        <p className=\"mt-3\">{tab.text}</p>\n                                                    </Col>\n                                                </Row>\n                                            </Tab.Pane>\n                                        );\n                                    })}\n                                </Tab.Content>\n                            </Tab.Container>\n                        </Card.Body>\n                    </Card>\n                </Col>\n            </Row>\n        </>\n    );\n};\n\nexport default TabsExample;\n","import { useReducer } from 'react';\n/**\n * Returns a function that triggers a component update. the hook equivalent to\n * `this.forceUpdate()` in a class component. In most cases using a state value directly\n * is preferable but may be required in some advanced usages of refs for interop or\n * when direct DOM manipulation is required.\n *\n * ```ts\n * const forceUpdate = useForceUpdate();\n *\n * const updateOnClick = useCallback(() => {\n *  forceUpdate()\n * }, [forceUpdate])\n *\n * return <button type=\"button\" onClick={updateOnClick}>Hi there</button>\n * ```\n */\n\nexport default function useForceUpdate() {\n  // The toggling state value is designed to defeat React optimizations for skipping\n  // updates when they are stricting equal to the last state value\n  var _useReducer = useReducer(function (state) {\n    return !state;\n  }, false),\n      dispatch = _useReducer[1];\n\n  return dispatch;\n}","export const ATTRIBUTE_PREFIX = `data-rr-ui-`;\nexport const PROPERTY_PREFIX = `rrUi`;\nexport function dataAttr(property) {\n  return `${ATTRIBUTE_PREFIX}${property}`;\n}\nexport function dataProp(property) {\n  return `${PROPERTY_PREFIX}${property}`;\n}","import * as React from 'react';\nconst NavContext = /*#__PURE__*/React.createContext(null);\nNavContext.displayName = 'NavContext';\nexport default NavContext;","import useEventCallback from '@restart/hooks/useEventCallback';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport { cloneElement, useEffect, useRef } from 'react';\nfunction NoopTransition({\n  children,\n  in: inProp,\n  onExited,\n  mountOnEnter,\n  unmountOnExit\n}) {\n  const ref = useRef(null);\n  const hasEnteredRef = useRef(inProp);\n  const handleExited = useEventCallback(onExited);\n  useEffect(() => {\n    if (inProp) hasEnteredRef.current = true;else {\n      handleExited(ref.current);\n    }\n  }, [inProp, handleExited]);\n  const combinedRef = useMergedRefs(ref, children.ref);\n  const child = /*#__PURE__*/cloneElement(children, {\n    ref: combinedRef\n  });\n  if (inProp) return child;\n  if (unmountOnExit) {\n    return null;\n  }\n  if (!hasEnteredRef.current && mountOnEnter) {\n    return null;\n  }\n  return child;\n}\nexport default NoopTransition;","import * as React from 'react';\nconst SelectableContext = /*#__PURE__*/React.createContext(null);\nexport const makeEventKey = (eventKey, href = null) => {\n  if (eventKey != null) return String(eventKey);\n  return href || null;\n};\nexport default SelectableContext;","function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nimport { useCallback, useRef, useState } from 'react';\nexport function defaultKey(key) {\n  return 'default' + key.charAt(0).toUpperCase() + key.substr(1);\n}\nfunction useUncontrolledProp(propValue, defaultValue, handler) {\n  const wasPropRef = useRef(propValue !== undefined);\n  const [stateValue, setState] = useState(defaultValue);\n  const isProp = propValue !== undefined;\n  const wasProp = wasPropRef.current;\n  wasPropRef.current = isProp;\n\n  /**\n   * If a prop switches from controlled to Uncontrolled\n   * reset its value to the defaultValue\n   */\n  if (!isProp && wasProp && stateValue !== defaultValue) {\n    setState(defaultValue);\n  }\n  return [isProp ? propValue : stateValue, useCallback((value, ...args) => {\n    if (handler) handler(value, ...args);\n    setState(value);\n  }, [handler])];\n}\nexport { useUncontrolledProp };\nexport function useUncontrolled(props, config) {\n  return Object.keys(config).reduce((result, fieldName) => {\n    const _ref = result,\n      _defaultKey = defaultKey(fieldName),\n      {\n        [_defaultKey]: defaultValue,\n        [fieldName]: propsValue\n      } = _ref,\n      rest = _objectWithoutPropertiesLoose(_ref, [_defaultKey, fieldName].map(_toPropertyKey));\n    const handlerName = config[fieldName];\n    const [value, handler] = useUncontrolledProp(propsValue, defaultValue, props[handlerName]);\n    return Object.assign({}, rest, {\n      [fieldName]: value,\n      [handlerName]: handler\n    });\n  }, props);\n}","var toArray = Function.prototype.bind.call(Function.prototype.call, [].slice);\n/**\n * Runs `querySelectorAll` on a given element.\n * \n * @param element the element\n * @param selector the selector\n */\n\nexport default function qsa(element, selector) {\n  return toArray(element.querySelectorAll(selector));\n}","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useCallback } from 'react';\nimport { ENTERED, ENTERING } from 'react-transition-group/Transition';\nimport transitionEndListener from './transitionEndListener';\nimport triggerBrowserReflow from './triggerBrowserReflow';\nimport TransitionWrapper from './TransitionWrapper';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst fadeStyles = {\n  [ENTERING]: 'show',\n  [ENTERED]: 'show'\n};\nconst Fade = /*#__PURE__*/React.forwardRef(({\n  className,\n  children,\n  transitionClasses = {},\n  onEnter,\n  ...rest\n}, ref) => {\n  const props = {\n    in: false,\n    timeout: 300,\n    mountOnEnter: false,\n    unmountOnExit: false,\n    appear: false,\n    ...rest\n  };\n  const handleEnter = useCallback((node, isAppearing) => {\n    triggerBrowserReflow(node);\n    onEnter == null ? void 0 : onEnter(node, isAppearing);\n  }, [onEnter]);\n  return /*#__PURE__*/_jsx(TransitionWrapper, {\n    ref: ref,\n    addEndListener: transitionEndListener,\n    ...props,\n    onEnter: handleEnter,\n    childRef: children.ref,\n    children: (status, innerProps) => /*#__PURE__*/React.cloneElement(children, {\n      ...innerProps,\n      className: classNames('fade', className, children.props.className, fadeStyles[status], transitionClasses[status])\n    })\n  });\n});\nFade.displayName = 'Fade';\nexport default Fade;","import * as React from 'react';\n\n// TODO: check\n\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'NavbarContext';\nexport default context;","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// We must avoid a circular dependency with @react-aria/utils, and this useLayoutEffect is\n// guarded by a check that it only runs on the client side.\n// eslint-disable-next-line rulesdir/useLayoutEffectRule\nimport React, {ReactNode, useContext, useLayoutEffect, useMemo, useRef, useState} from 'react';\n\n// To support SSR, the auto incrementing id counter is stored in a context. This allows\n// it to be reset on every request to ensure the client and server are consistent.\n// There is also a prefix string that is used to support async loading components\n// Each async boundary must be wrapped in an SSR provider, which appends to the prefix\n// and resets the current id counter. This ensures that async loaded components have\n// consistent ids regardless of the loading order.\ninterface SSRContextValue {\n  prefix: string,\n  current: number,\n  isSSR: boolean\n}\n\n// Default context value to use in case there is no SSRProvider. This is fine for\n// client-only apps. In order to support multiple copies of React Aria potentially\n// being on the page at once, the prefix is set to a random number. SSRProvider\n// will reset this to zero for consistency between server and client, so in the\n// SSR case multiple copies of React Aria is not supported.\nconst defaultContext: SSRContextValue = {\n  prefix: String(Math.round(Math.random() * 10000000000)),\n  current: 0,\n  isSSR: false\n};\n\nconst SSRContext = React.createContext<SSRContextValue>(defaultContext);\n\nexport interface SSRProviderProps {\n  /** Your application here. */\n  children: ReactNode\n}\n\n/**\n * When using SSR with React Aria, applications must be wrapped in an SSRProvider.\n * This ensures that auto generated ids are consistent between the client and server.\n */\nexport function SSRProvider(props: SSRProviderProps): JSX.Element {\n  let cur = useContext(SSRContext);\n  let counter = useCounter(cur === defaultContext);\n  let [isSSR, setIsSSR] = useState(true);\n  let value: SSRContextValue = useMemo(() => ({\n    // If this is the first SSRProvider, start with an empty string prefix, otherwise\n    // append and increment the counter.\n    prefix: cur === defaultContext ? '' : `${cur.prefix}-${counter}`,\n    current: 0,\n    isSSR\n  }), [cur, counter, isSSR]);\n\n  // If on the client, and the component was initially server rendered,\n  // then schedule a layout effect to update the component after hydration.\n  if (typeof window !== 'undefined') {\n    // This if statement technically breaks the rules of hooks, but is safe\n    // because the condition never changes after mounting.\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useLayoutEffect(() => {\n      setIsSSR(false);\n    }, []);\n  }\n\n  return (\n    <SSRContext.Provider value={value}>\n      {props.children}\n    </SSRContext.Provider>\n  );\n}\n\nlet canUseDOM = Boolean(\n  typeof window !== 'undefined' &&\n  window.document &&\n  window.document.createElement\n);\n\nlet componentIds = new WeakMap();\n\nfunction useCounter(isDisabled = false) {\n  let ctx = useContext(SSRContext);\n  let ref = useRef<number | null>(null);\n  if (ref.current === null && !isDisabled) {\n    // In strict mode, React renders components twice, and the ref will be reset to null on the second render.\n    // This means our id counter will be incremented twice instead of once. This is a problem because on the\n    // server, components are only rendered once and so ids generated on the server won't match the client.\n    // In React 18, useId was introduced to solve this, but it is not available in older versions. So to solve this\n    // we need to use some React internals to access the underlying Fiber instance, which is stable between renders.\n    // This is exposed as ReactCurrentOwner in development, which is all we need since StrictMode only runs in development.\n    // To ensure that we only increment the global counter once, we store the starting id for this component in\n    // a weak map associated with the Fiber. On the second render, we reset the global counter to this value.\n    // Since React runs the second render immediately after the first, this is safe.\n    // @ts-ignore\n    let currentOwner = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED?.ReactCurrentOwner?.current;\n    if (currentOwner) {\n      let prevComponentValue = componentIds.get(currentOwner);\n      if (prevComponentValue == null) {\n        // On the first render, and first call to useId, store the id and state in our weak map.\n        componentIds.set(currentOwner, {\n          id: ctx.current,\n          state: currentOwner.memoizedState\n        });\n      } else if (currentOwner.memoizedState !== prevComponentValue.state) {\n        // On the second render, the memoizedState gets reset by React.\n        // Reset the counter, and remove from the weak map so we don't\n        // do this for subsequent useId calls.\n        ctx.current = prevComponentValue.id;\n        componentIds.delete(currentOwner);\n      }\n    }\n\n    ref.current = ++ctx.current;\n  }\n\n  return ref.current;\n}\n\n/** @private */\nexport function useSSRSafeId(defaultId?: string): string {\n  let ctx = useContext(SSRContext);\n\n  // If we are rendering in a non-DOM environment, and there's no SSRProvider,\n  // provide a warning to hint to the developer to add one.\n  if (ctx === defaultContext && !canUseDOM) {\n    console.warn('When server rendering, you must wrap your application in an <SSRProvider> to ensure consistent ids are generated between the client and server.');\n  }\n\n  let counter = useCounter(!!defaultId);\n  return defaultId || `react-aria${ctx.prefix}-${counter}`;\n}\n\n/**\n * Returns whether the component is currently being server side rendered or\n * hydrated on the client. Can be used to delay browser-specific rendering\n * until after hydration.\n */\nexport function useIsSSR(): boolean {\n  let cur = useContext(SSRContext);\n  return cur.isSSR;\n}\n"],"names":["props","_jsx","Row","children","Col","_jsxs","className","Breadcrumb","listProps","Item","href","breadCrumbItems","map","item","index","active","label","path","title","tabContents","id","icon","text","_Fragment","PageTitle","lg","Card","Body","Tab","Container","defaultActiveKey","Nav","variant","tab","Link","as","to","eventKey","classnames","Content","Pane","sm","justify","useForceUpdate","useReducer","state","ATTRIBUTE_PREFIX","PROPERTY_PREFIX","dataAttr","property","concat","dataProp","NavContext","React","displayName","_ref","inProp","in","onExited","mountOnEnter","unmountOnExit","ref","useRef","hasEnteredRef","handleExited","useEventCallback","useEffect","current","combinedRef","useMergedRefs","child","cloneElement","SelectableContext","makeEventKey","arguments","length","undefined","String","useUncontrolledProp","propValue","defaultValue","handler","wasPropRef","_useState","useState","_useState2","_slicedToArray","stateValue","setState","isProp","wasProp","useCallback","value","_len","args","Array","_key","apply","toArray","Function","prototype","bind","call","slice","qsa","element","selector","querySelectorAll","fadeStyles","_fadeStyles","_defineProperty","ENTERING","ENTERED","Fade","_ref$transitionClasse","transitionClasses","onEnter","rest","_objectWithoutProperties","_excluded","_objectSpread","timeout","appear","handleEnter","node","isAppearing","triggerBrowserReflow","TransitionWrapper","addEndListener","transitionEndListener","childRef","status","innerProps","classNames","context","$704cf1d3b684cc5c$var$defaultContext","prefix","Math","round","random","isSSR","$704cf1d3b684cc5c$var$SSRContext","$89yE2$react","createContext","$704cf1d3b684cc5c$var$canUseDOM","Boolean","window","document","createElement","$704cf1d3b684cc5c$var$componentIds","WeakMap","$704cf1d3b684cc5c$var$useCounter","isDisabled","ctx","$89yE2$useContext","$89yE2$useRef","_React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","_React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED_ReactCurrentOwner","currentOwner","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentOwner","prevComponentValue","get","set","memoizedState","delete","$704cf1d3b684cc5c$export$619500959fc48b26","defaultId","console","warn","counter"],"sourceRoot":""}