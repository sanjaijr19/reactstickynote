{"version":3,"file":"static/js/3436.9b0b8dba.chunk.js","mappings":"6LA8EA,UA9DqB,SAAfA,EAAgBC,GAClB,IAAMC,GAAWC,EAAAA,EAAAA,MAEXC,GAAuBC,EAAAA,EAAAA,QAAO,MAEpCL,EAAaM,aAAe,CACxBC,MAAO,YAGX,IAAMA,EAAQN,EAAMM,MACdC,EAAYP,EAAMQ,UAAY,KAE5BC,GAAqBC,EAAAA,EAAAA,KAAY,SAACC,GAAK,MAAM,CACjDF,iBAAkBE,EAAMC,OAAOH,iBAClC,IAFOA,iBAeFI,EAAmB,SAACC,GACtB,GAAIL,EAAkB,CAClB,GAAIN,GAAmBA,EAAgBY,SAAWZ,EAAgBY,QAAQC,SAASF,EAAEG,QAAS,OAEzFhB,GAASiB,EAAAA,EAAAA,MAClB,CACJ,EASA,OAPAC,EAAAA,EAAAA,YAAU,WAEN,OADAC,SAASC,iBAAiB,YAAaR,GAAkB,GAClD,WACHO,SAASE,oBAAoB,YAAaT,GAAkB,EAChE,CACJ,KAGIU,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAhB,SAAA,EACIe,EAAAA,EAAAA,MAAA,OAAKE,UAAU,UAAUC,IAAKvB,EAAgBK,SAAA,EAC1Ce,EAAAA,EAAAA,MAAA,OAAKE,UAAU,iBAAgBjB,SAAA,EAC3BmB,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACC,GAAG,IAAIJ,UAAU,2BAA2BK,QA3B9C,SAAChB,GACjBA,EAAEiB,iBACF9B,GAASiB,EAAAA,EAAAA,MACb,EAwBuFV,UACnEmB,EAAAA,EAAAA,KAAA,KAAGF,UAAU,iCAEjBE,EAAAA,EAAAA,KAAA,MAAIF,UAAU,MAAKjB,SAAEF,QAGzBqB,EAAAA,EAAAA,KAACK,EAAAA,EAAS,CAACC,MAAO,CAAEC,UAAW,OAAQC,OAAQ,KAASC,QAAS,IAAKC,iBAAkB,IAAI7B,UACxFmB,EAAAA,EAAAA,KAAA,OAAKF,UAAU,yBAAwBjB,SAAED,UAIjDoB,EAAAA,EAAAA,KAAA,OAAKF,UAAU,uBAG3B,C","sources":["layouts/RightSidebar.js"],"sourcesContent":["// @flow\nimport React, { useEffect, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nimport SimpleBar from 'simplebar-react';\n\n// actions\nimport { hideRightSidebar } from '../redux/actions';\n\ntype RightSideBarProps = {\n    hideRightSidebar?: () => void,\n    title?: string,\n    children?: any,\n};\n\nconst RightSideBar = (props: RightSideBarProps): React$Element<React$FragmentType> => {\n    const dispatch = useDispatch();\n\n    const rightBarNodeRef: any = useRef(null);\n\n    RightSideBar.defaultProps = {\n        title: 'Settings',\n    };\n\n    const title = props.title;\n    const component = props.children || null;\n\n    const { showRightSidebar } = useSelector((state) => ({\n        showRightSidebar: state.Layout.showRightSidebar,\n    }));\n\n    /**\n     * Handles the close\n     */\n    const handleClose = (e: any) => {\n        e.preventDefault();\n        dispatch(hideRightSidebar());\n    };\n\n    /**\n     * Handle the click anywhere in doc\n     */\n    const handleOtherClick = (e: any) => {\n        if (showRightSidebar) {\n            if (rightBarNodeRef && rightBarNodeRef.current && rightBarNodeRef.current.contains(e.target)) return;\n            // else hide the right sidebar\n            else dispatch(hideRightSidebar());\n        }\n    };\n\n    useEffect(() => {\n        document.addEventListener('mousedown', handleOtherClick, false);\n        return () => {\n            document.removeEventListener('mousedown', handleOtherClick, false);\n        };\n    });\n\n    return (\n        <>\n            <div className=\"end-bar\" ref={rightBarNodeRef}>\n                <div className=\"rightbar-title\">\n                    <Link to=\"#\" className=\"end-bar-toggle float-end\" onClick={handleClose}>\n                        <i className=\"dripicons-cross noti-icon\"></i>\n                    </Link>\n                    <h5 className=\"m-0\">{title}</h5>\n                </div>\n\n                <SimpleBar style={{ maxHeight: '100%', zIndex: 10000 }} timeout={500} scrollbarMaxSize={320}>\n                    <div className=\"rightbar-content h-100\">{component}</div>\n                </SimpleBar>\n            </div>\n\n            <div className=\"rightbar-overlay\"></div>\n        </>\n    );\n};\n\nexport default RightSideBar;\n"],"names":["RightSideBar","props","dispatch","useDispatch","rightBarNodeRef","useRef","defaultProps","title","component","children","showRightSidebar","useSelector","state","Layout","handleOtherClick","e","current","contains","target","hideRightSidebar","useEffect","document","addEventListener","removeEventListener","_jsxs","_Fragment","className","ref","_jsx","Link","to","onClick","preventDefault","SimpleBar","style","maxHeight","zIndex","timeout","scrollbarMaxSize"],"sourceRoot":""}