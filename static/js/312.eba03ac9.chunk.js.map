{"version":3,"file":"static/js/312.eba03ac9.chunk.js","mappings":"+OA2FMA,EAAU,CACZ,CACIC,OAAQ,SACRC,SAAU,OACVC,MAAM,EACNC,KAlFW,SAAHC,GAAiB,IAAXC,EAAGD,EAAHC,IAClB,OACIC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACIC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAYF,SAAA,EACvBF,EAAAA,EAAAA,KAAA,OAAKK,IAAKN,EAAIO,SAASC,MAAOC,IAAI,GAAGJ,UAAU,yBAC/CJ,EAAAA,EAAAA,KAACS,EAAAA,GAAI,CAACC,GAAG,IAAIN,UAAU,wBAAuBF,SACzCH,EAAIO,SAASK,WAKlC,EAwEQC,QAAS,cAEb,CACIlB,OAAQ,aACRC,SAAU,QACVC,MAAM,GAEV,CACIF,OAAQ,WACRC,SAAU,WACVC,MAAM,GAEV,CACIF,OAAQ,iBACRC,SAAU,UACVC,MAAM,GAEV,CACIF,OAAQ,eACRC,SAAU,aACVC,MAAM,GAEV,CACIF,OAAQ,UACRC,SAAU,UACVE,KA9Fc,SAAHgB,GAASA,EAAHd,IAuCrB,OACIC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACIF,EAAAA,EAAAA,KAACc,EAAAA,EAAK,CAACC,QAxCC,CACZC,MAAO,CACHC,KAAM,OACNC,UAAW,CACPC,SAAS,IAGjBC,OAAQ,GACRC,OAAQ,CACJC,MAAO,EACPC,MAAO,UAEXC,QAAS,CACLC,KAAM,GAEVC,OAAQ,CAAC,WACTC,QAAS,CACLC,MAAO,CACHT,SAAS,GAEbU,EAAG,CACCC,MAAM,GAEVC,EAAG,CACCC,MAAO,CACHC,UAAW,SAAUC,GACjB,MAAO,EACX,IAGRC,OAAQ,CACJL,MAAM,KASeV,OAJlB,CAAC,CAAET,KAAM,OAAQyB,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MAI9BC,OAAQ,GAAIf,MAAO,MAGxE,EAmDQ1B,MAAM,GAEV,CACIF,OAAQ,SACRC,SAAU,SACVC,MAAM,EACNgB,QAAS,eACTf,KAvDa,SAAHyC,GAASA,EAAHvC,IACpB,OACII,EAAAA,EAAAA,MAAAF,EAAAA,SAAA,CAAAC,SAAA,EACIC,EAAAA,EAAAA,MAACM,EAAAA,GAAI,CAACC,GAAG,IAAIN,UAAU,cAAaF,SAAA,CAC/B,KACDF,EAAAA,EAAAA,KAAA,KAAGI,UAAU,oCAEjBD,EAAAA,EAAAA,MAACM,EAAAA,GAAI,CAACC,GAAG,IAAIN,UAAU,cAAaF,SAAA,CAC/B,KACDF,EAAAA,EAAAA,KAAA,KAAGI,UAAU,wBAI7B,IA+CMmC,EAAkB,CACpB,CACIC,KAAM,KACNC,MAAO,IAEX,CACID,KAAM,KACNC,MAAO,IAEX,CACID,KAAM,KACNC,MAAO,KAiEf,UA5DgB,WACZ,OACItC,EAAAA,EAAAA,MAAAF,EAAAA,SAAA,CAAAC,SAAA,EACIF,EAAAA,EAAAA,KAAC0C,EAAAA,EAAS,CACNC,gBAAiB,CACb,CAAEC,MAAO,YAAaC,KAAM,2BAC5B,CAAED,MAAO,UAAWC,KAAM,0BAA2BC,QAAQ,IAEjEd,MAAO,aAGXhC,EAAAA,EAAAA,KAAC+C,EAAAA,EAAG,CAAA7C,UACAF,EAAAA,EAAAA,KAACgD,EAAAA,EAAG,CAACC,GAAI,GAAG/C,UACRF,EAAAA,EAAAA,KAACkD,EAAAA,EAAI,CAAAhD,UACDC,EAAAA,EAAAA,MAAC+C,EAAAA,EAAKC,KAAI,CAAAjD,SAAA,EACNC,EAAAA,EAAAA,MAAC4C,EAAAA,EAAG,CAAC3C,UAAU,OAAMF,SAAA,EACjBF,EAAAA,EAAAA,KAACgD,EAAAA,EAAG,CAACI,GAAI,EAAElD,UACPC,EAAAA,EAAAA,MAACkD,EAAAA,EAAM,CAACC,QAAQ,SAASlD,UAAU,OAAMF,SAAA,EACrCF,EAAAA,EAAAA,KAAA,KAAGI,UAAU,6BAA+B,qBAIpDJ,EAAAA,EAAAA,KAACgD,EAAAA,EAAG,CAACI,GAAI,EAAElD,UACPC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,cAAaF,SAAA,EACxBF,EAAAA,EAAAA,KAACqD,EAAAA,EAAM,CAACC,QAAQ,UAAUlD,UAAU,YAAWF,UAC3CF,EAAAA,EAAAA,KAAA,KAAGI,UAAU,mBAGjBJ,EAAAA,EAAAA,KAACqD,EAAAA,EAAM,CAACC,QAAQ,QAAQlD,UAAU,YAAWF,SAAC,YAI9CF,EAAAA,EAAAA,KAACqD,EAAAA,EAAM,CAACC,QAAQ,QAAQlD,UAAU,YAAWF,SAAC,oBAO1DF,EAAAA,EAAAA,KAACuD,EAAAA,EAAK,CACF9D,QAASA,EACT2C,KAAMoB,EAAAA,GACNC,SAAU,GACVlB,gBAAiBA,EACjBmB,YAAY,EACZC,YAAY,EACZC,cAAc,EACdC,cAAc,EACdC,WAAW,gBACXC,WAAW,cACXC,eAAe,yBAQ/C,C","sources":["pages/apps/Ecommerce/Sellers.js"],"sourcesContent":["// @flow\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Row, Col, Card, Button } from 'react-bootstrap';\nimport Chart from 'react-apexcharts';\n\n// components\nimport PageTitle from '../../../components/PageTitle';\nimport Table from '../../../components/Table';\n\n// dummy data\nimport { sellers } from './Data';\n\n/* name column render */\nconst NameColumn = ({ row }) => {\n    return (\n        <>\n            <div className=\"table-user\">\n                <img src={row.original.image} alt=\"\" className=\"me-2 rounded-circle\" />\n                <Link to=\"#\" className=\"text-body fw-semibold\">\n                    {row.original.name}\n                </Link>\n            </div>\n        </>\n    );\n};\n\n/* revenue column render */\nconst RevenueColumn = ({ row }) => {\n    const options = {\n        chart: {\n            type: 'line',\n            sparkline: {\n                enabled: true,\n            },\n        },\n        series: [],\n        stroke: {\n            width: 2,\n            curve: 'smooth',\n        },\n        markers: {\n            size: 0,\n        },\n        colors: ['#727cf5'],\n        tooltip: {\n            fixed: {\n                enabled: false,\n            },\n            x: {\n                show: false,\n            },\n            y: {\n                title: {\n                    formatter: function (seriesName) {\n                        return '';\n                    },\n                },\n            },\n            marker: {\n                show: false,\n            },\n        },\n    };\n\n    const series = [{ name: 'data', data: [66, 95, 53, 66, 70, 41, 27, 62, 87, 69, 17] }];\n\n    return (\n        <>\n            <Chart options={options} series={series} height={35} width={80} />\n        </>\n    );\n};\n\n/* action column render */\nconst ActionColumn = ({ row }) => {\n    return (\n        <>\n            <Link to=\"#\" className=\"action-icon\">\n                {' '}\n                <i className=\"mdi mdi-square-edit-outline\"></i>\n            </Link>\n            <Link to=\"#\" className=\"action-icon\">\n                {' '}\n                <i className=\"mdi mdi-delete\"></i>\n            </Link>\n        </>\n    );\n};\n\n// get all columns\nconst columns = [\n    {\n        Header: 'Seller',\n        accessor: 'name',\n        sort: true,\n        Cell: NameColumn,\n        classes: 'table-user',\n    },\n    {\n        Header: 'Store Name',\n        accessor: 'store',\n        sort: true,\n    },\n    {\n        Header: 'Products',\n        accessor: 'products',\n        sort: true,\n    },\n    {\n        Header: 'Wallet Balance',\n        accessor: 'balance',\n        sort: true,\n    },\n    {\n        Header: 'Created Date',\n        accessor: 'created_on',\n        sort: true,\n    },\n    {\n        Header: 'Revenue',\n        accessor: 'revenue',\n        Cell: RevenueColumn,\n        sort: false,\n    },\n    {\n        Header: 'Action',\n        accessor: 'action',\n        sort: false,\n        classes: 'table-action',\n        Cell: ActionColumn,\n    },\n];\n\n// get pagelist to display\nconst sizePerPageList = [\n    {\n        text: '10',\n        value: 10,\n    },\n    {\n        text: '25',\n        value: 25,\n    },\n    {\n        text: '50',\n        value: 50,\n    },\n];\n\n// main component\nconst Sellers = (): React$Element<React$FragmentType> => {\n    return (\n        <>\n            <PageTitle\n                breadCrumbItems={[\n                    { label: 'eCommerce', path: '/apps/ecommerce/sellers' },\n                    { label: 'Sellers', path: '/apps/ecommerce/sellers', active: true },\n                ]}\n                title={'Sellers'}\n            />\n\n            <Row>\n                <Col xs={12}>\n                    <Card>\n                        <Card.Body>\n                            <Row className=\"mb-2\">\n                                <Col sm={5}>\n                                    <Button variant=\"danger\" className=\"mb-2\">\n                                        <i className=\"mdi mdi-plus-circle me-2\"></i> Add Sellers\n                                    </Button>\n                                </Col>\n\n                                <Col sm={7}>\n                                    <div className=\"text-sm-end\">\n                                        <Button variant=\"success\" className=\"mb-2 me-1\">\n                                            <i className=\"mdi mdi-cog\"></i>\n                                        </Button>\n\n                                        <Button variant=\"light\" className=\"mb-2 me-1\">\n                                            Import\n                                        </Button>\n\n                                        <Button variant=\"light\" className=\"mb-2 me-1\">\n                                            Export\n                                        </Button>\n                                    </div>\n                                </Col>\n                            </Row>\n\n                            <Table\n                                columns={columns}\n                                data={sellers}\n                                pageSize={10}\n                                sizePerPageList={sizePerPageList}\n                                isSortable={true}\n                                pagination={true}\n                                isSelectable={true}\n                                isSearchable={true}\n                                tableClass=\"table-striped\"\n                                theadClass=\"table-light\"\n                                searchBoxClass=\"mt-2 mb-3\"\n                            />\n                        </Card.Body>\n                    </Card>\n                </Col>\n            </Row>\n        </>\n    );\n};\n\nexport default Sellers;\n"],"names":["columns","Header","accessor","sort","Cell","_ref","row","_jsx","_Fragment","children","_jsxs","className","src","original","image","alt","Link","to","name","classes","_ref2","Chart","options","chart","type","sparkline","enabled","series","stroke","width","curve","markers","size","colors","tooltip","fixed","x","show","y","title","formatter","seriesName","marker","data","height","_ref3","sizePerPageList","text","value","PageTitle","breadCrumbItems","label","path","active","Row","Col","xs","Card","Body","sm","Button","variant","Table","sellers","pageSize","isSortable","pagination","isSelectable","isSearchable","tableClass","theadClass","searchBoxClass"],"sourceRoot":""}