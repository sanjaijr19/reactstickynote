{"version":3,"file":"static/js/3883.e5437deb.chunk.js","mappings":"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","sources":["components/PageTitle.js","pages/charts/Brite/BarChart.js","pages/charts/Brite/HorizontalBarChart.js","pages/charts/Brite/DonutChart.js","pages/charts/Brite/LineChart.js","pages/charts/Brite/index.js"],"sourcesContent":["// @flow\nimport React from 'react';\nimport { Row, Col, Breadcrumb } from 'react-bootstrap';\n\ntype BreadcrumbItems = {\n    label: string,\n    path: string,\n    active?: boolean,\n};\n\ntype PageTitleProps = {\n    breadCrumbItems: Array<BreadcrumbItems>,\n    title: string,\n};\n\n/**\n * PageTitle\n */\nconst PageTitle = (props: PageTitleProps): React$Element<any> => {\n    return (\n        <Row>\n            <Col>\n                <div className=\"page-title-box\">\n                    <div className=\"page-title-right\">\n                        <Breadcrumb listProps={{ className: 'm-0' }}>\n                            <Breadcrumb.Item href=\"/\">Stickynote</Breadcrumb.Item>\n\n                            {props.breadCrumbItems.map((item, index) => {\n                                return item.active ? (\n                                    <Breadcrumb.Item active key={index}>\n                                        {item.label}\n                                    </Breadcrumb.Item>\n                                ) : (\n                                    <Breadcrumb.Item key={index} href={item.path}>\n                                        {item.label}\n                                    </Breadcrumb.Item>\n                                );\n                            })}\n                        </Breadcrumb>\n                    </div>\n                    <h4 className=\"page-title\">{props.title}</h4>\n                </div>\n            </Col>\n        </Row>\n    );\n};\n\nexport default PageTitle;\n","// @flow\nimport React from 'react';\nimport { Card } from 'react-bootstrap';\nimport { Bar, withResponsiveness } from 'britecharts-react';\n\nconst ResponsiveBarChart = withResponsiveness(Bar);\n\n// simple bar chart\nconst BarChart = (): React$Element<any> => {\n    // container style\n    const chartContainerStyle = {\n        width: '100%',\n        height: '300px',\n    };\n\n    // chart data\n    const barChartData = [\n        { name: 'Mon', value: 2100 },\n        { name: 'Tue', value: 5000 },\n        { name: 'Wed', value: 4000 },\n        { name: 'Thu', value: 5500 },\n        { name: 'Fri', value: 6500 },\n        { name: 'Sat', value: 4500 },\n        { name: 'Sun', value: 3500 },\n    ];\n\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title mb-4\">Bar Chart</h4>\n                <div className=\"bar-container\" style={chartContainerStyle}>\n                    <ResponsiveBarChart\n                        isAnimated={false}\n                        data={barChartData}\n                        isHorizontal={false}\n                        height={300}\n                        betweenBarsPadding={0.5}\n                        colorSchema={['#39afd1']}\n                        margin={{ top: 10, left: 55, bottom: 20, right: 10 }}\n                    />\n                </div>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default BarChart;\n","// @flow\nimport React from 'react';\nimport { Card } from 'react-bootstrap';\nimport { Bar, withResponsiveness } from 'britecharts-react';\n\nconst ResponsiveBarChart = withResponsiveness(Bar);\n\n// simple horizontal bar chart\nconst HorizontalBarChart = (): React$Element<any> => {\n    // container style\n    const chartContainerStyle = {\n        width: '100%',\n        height: '300px',\n    };\n\n    // chart data\n    const barChartData = [\n        { name: 'Mon', value: 2100 },\n        { name: 'Tue', value: 5000 },\n        { name: 'Wed', value: 4000 },\n        { name: 'Thu', value: 5500 },\n        { name: 'Fri', value: 6500 },\n        { name: 'Sat', value: 4500 },\n        { name: 'Sun', value: 3500 },\n    ];\n\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title mb-4\">Horizontal Bar Chart</h4>\n                <div className=\"bar-container\" style={chartContainerStyle}>\n                    <ResponsiveBarChart\n                        data={barChartData}\n                        isHorizontal={true}\n                        height={300}\n                        enableLabels={true}\n                        percentageAxisToMaxRatio={1.3}\n                        labelsNumberFormat={1}\n                        colorSchema={['#727cf5', '#0acf97', '#6c757d', '#fa5c7c', '#ffbc00', '#39afd1', '#e3eaef']}\n                        margin={{ top: 10, left: 50, bottom: 20, right: 10 }}\n                    />\n                </div>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default HorizontalBarChart;\n","// @flow\nimport React from 'react';\nimport { Card, Row, Col } from 'react-bootstrap';\nimport { Donut, Legend, ResponsiveContainer } from 'britecharts-react';\n\n// donut chart\nconst DonutChart = (): React$Element<any> => {\n    // chart data\n    const donutData = [\n        { name: 'Shiny', id: 1, quantity: 86, percentage: 5 },\n        { name: 'Blazing', id: 2, quantity: 300, percentage: 18 },\n        { name: 'Dazzling', id: 3, quantity: 276, percentage: 16 },\n        { name: 'Radiant', id: 4, quantity: 195, percentage: 11 },\n        { name: 'Sparkling', id: 5, quantity: 36, percentage: 2 },\n        { name: 'Other', id: 0, quantity: 814, percentage: 48 },\n    ];\n\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title mb-4\">Donut Chart</h4>\n                <div className=\"donut-container\">\n                    <ResponsiveContainer\n                        render={() => (\n                            <Row>\n                                <Col>\n                                    <Donut\n                                        data={donutData}\n                                        height={300}\n                                        internalRadius={80}\n                                        colorSchema={['#727cf5', '#0acf97', '#6c757d', '#fa5c7c', '#ffbc00', '#39afd1']}\n                                        isAnimated={false}\n                                        hasFixedHighlightedSlice={true}\n                                    />\n                                </Col>\n                                <Col>\n                                    <Legend\n                                        data={donutData}\n                                        height={200}\n                                        width={250}\n                                        numberFormat={'s'}\n                                        colorSchema={['#727cf5', '#0acf97', '#6c757d', '#fa5c7c', '#ffbc00', '#39afd1']}\n                                        margin={{ top: 10, bottom: 10, left: 0, right: 30 }}\n                                    />\n                                </Col>\n                            </Row>\n                        )}\n                    />\n                </div>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default DonutChart;\n","// @flow\nimport React from 'react';\nimport { Card } from 'react-bootstrap';\nimport { Line, Tooltip, ResponsiveContainer } from 'britecharts-react';\n\n// simple line chart\nconst LineChart = (): React$Element<any> => {\n    // container style\n    const chartContainerStyle = {\n        width: '100%',\n    };\n\n    const renderLine = (props) => (\n        <ResponsiveContainer\n            render={({ width }) => (\n                <Line\n                    isAnimated={false}\n                    width={width}\n                    height={500}\n                    aspectRatio={0.7}\n                    tooltipThreshold={100}\n                    grid={'horizontal'}\n                    {...props}\n                />\n            )}\n        />\n    );\n\n    // chart data\n    const lineData = {\n        dataByTopic: [\n            {\n                topic: 103,\n                topicName: 'San Francisco',\n                dates: [\n                    {\n                        date: '2018-06-27T07:00:00.000Z',\n                        value: 1,\n                        fullDate: '2018-06-27T07:00:00.000Z',\n                    },\n                    {\n                        date: '2018-06-28T07:00:00.000Z',\n                        value: 1,\n                        fullDate: '2018-06-28T07:00:00.000Z',\n                    },\n                    {\n                        date: '2018-06-29T07:00:00.000Z',\n                        value: 4,\n                        fullDate: '2018-06-29T07:00:00.000Z',\n                    },\n                    {\n                        date: '2018-06-30T07:00:00.000Z',\n                        value: 2,\n                        fullDate: '2018-06-30T07:00:00.000Z',\n                    },\n                    {\n                        date: '2018-07-01T07:00:00.000Z',\n                        value: 3,\n                        fullDate: '2018-07-01T07:00:00.000Z',\n                    },\n                    {\n                        date: '2018-07-02T07:00:00.000Z',\n                        value: 3,\n                        fullDate: '2018-07-02T07:00:00.000Z',\n                    },\n                    {\n                        date: '2018-07-03T07:00:00.000Z',\n                        value: 0,\n                        fullDate: '2018-07-03T07:00:00.000Z',\n                    },\n                    {\n                        date: '2018-07-04T07:00:00.000Z',\n                        value: 3,\n                        fullDate: '2018-07-04T07:00:00.000Z',\n                    },\n                    {\n                        date: '2018-07-05T07:00:00.000',\n                        value: 1,\n                        fullDate: '2018-07-05T07:00:00.000Z',\n                    },\n                    {\n                        date: '2018-07-06T07:00:00.000Z',\n                        value: 2,\n                        fullDate: '2018-07-06T07:00:00.000Z',\n                    },\n                    {\n                        date: '2018-07-07T07:00:00.000Z',\n                        value: 0,\n                        fullDate: '2018-07-07T07:00:00.000Z',\n                    },\n                    {\n                        date: '2018-07-08T07:00:00.000Z',\n                        value: 2,\n                        fullDate: '2018-07-08T07:00:00.000Z',\n                    },\n                    {\n                        date: '2018-07-09T07:00:00.000Z',\n                        value: 1,\n                        fullDate: '2018-07-09T07:00:00.000Z',\n                    },\n                    {\n                        date: '2018-07-10T07:00:00.000Z',\n                        value: 4,\n                        fullDate: '2018-07-10T07:00:00.000Z',\n                    },\n                    {\n                        date: '2018-07-11T07:00:00.000Z',\n                        value: 2,\n                        fullDate: '2018-07-11T07:00:00.000Z',\n                    },\n                    {\n                        date: '2018-07-12T07:00:00.000Z',\n                        value: 1,\n                        fullDate: '2018-07-12T07:00:00.000Z',\n                    },\n                    {\n                        date: '2018-07-13T07:00:00.000Z',\n                        value: 6,\n                        fullDate: '2018-07-13T07:00:00.000Z',\n                    },\n                    {\n                        date: '2018-07-14T07:00:00.000Z',\n                        value: 5,\n                        fullDate: '2018-07-14T07:00:00.000Z',\n                    },\n                    {\n                        date: '2018-07-15T07:00:00.000Z',\n                        value: 2,\n                        fullDate: '2018-07-15T07:00:00.000Z',\n                    },\n                ],\n            },\n        ],\n    };\n\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title mb-4\">Line Chart</h4>\n                <div className=\"line-container\" style={chartContainerStyle}>\n                    <Tooltip\n                        data={lineData}\n                        render={renderLine}\n                        topicLabel=\"topics\"\n                        title=\"Sample Data\"\n                        dateLabel={'date'}\n                        valueLabel={'value'}\n                    />\n                </div>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default LineChart;\n","// @flow\nimport React from 'react';\nimport { Row, Col } from 'react-bootstrap';\n\n// components\nimport PageTitle from '../../../components/PageTitle';\n\nimport BarChart from './BarChart';\nimport HorizontalBarChart from './HorizontalBarChart';\nimport DonutChart from './DonutChart';\nimport LineChart from './LineChart';\n\nconst BriteChart = (): React$Element<React$FragmentType> => {\n    return (\n        <>\n            <PageTitle\n                breadCrumbItems={[\n                    { label: 'Charts', path: '/features/charts/brite' },\n                    { label: 'Brite', path: '/features/charts/brite', active: true },\n                ]}\n                title={'Brite Charts'}\n            />\n\n            <Row>\n                <Col xl={6}>\n                    <BarChart />\n                </Col>\n\n                <Col xl={6}>\n                    <HorizontalBarChart />\n                </Col>\n            </Row>\n\n            <Row>\n                <Col xl={6}>\n                    <LineChart />\n                </Col>\n\n                <Col xl={6}>\n                    <DonutChart />\n                </Col>\n            </Row>\n        </>\n    );\n};\n\nexport default BriteChart;\n"],"names":["props","_jsx","Row","children","Col","_jsxs","className","Breadcrumb","listProps","Item","href","breadCrumbItems","map","item","index","active","label","path","title","ResponsiveBarChart","withResponsiveness","Bar","Card","Body","style","width","height","isAnimated","data","name","value","isHorizontal","betweenBarsPadding","colorSchema","margin","top","left","bottom","right","enableLabels","percentageAxisToMaxRatio","labelsNumberFormat","donutData","id","quantity","percentage","ResponsiveContainer","render","Donut","internalRadius","hasFixedHighlightedSlice","Legend","numberFormat","Tooltip","dataByTopic","topic","topicName","dates","date","fullDate","_ref","Line","_objectSpread","aspectRatio","tooltipThreshold","grid","topicLabel","dateLabel","valueLabel","_Fragment","PageTitle","xl","BarChart","HorizontalBarChart","LineChart","DonutChart"],"sourceRoot":""}