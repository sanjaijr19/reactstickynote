{"version":3,"file":"static/js/2200.1cf624d0.chunk.js","mappings":"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","sources":["components/Datepicker.js","components/VectorMap/BaseVectorMap.js","components/VectorMap/WorldMap.js","components/VectorMap/CanadaMap.js","components/VectorMap/RussiaMap.js","components/VectorMap/SpainMap.js","components/VectorMap/UsaVectorMap.js","components/VectorMap/ItalyVectorMap.js","components/VectorMap/IraqVectorMap.js","pages/dashboard/Analytics/Statistics.js","pages/dashboard/Analytics/SessionsChart.js","pages/dashboard/Analytics/CountrySessionsChart.js","pages/dashboard/Analytics/ViewsChart.js","pages/dashboard/Analytics/BrowsersChart.js","pages/dashboard/Analytics/OsChart.js","pages/dashboard/Analytics/Channels.js","pages/dashboard/Analytics/Social.js","pages/dashboard/Analytics/Engagement.js","pages/dashboard/Analytics/index.js"],"sourcesContent":["// @flow\nimport React, { forwardRef } from 'react';\nimport DatePicker from 'react-datepicker';\nimport classNames from 'classnames';\n\ntype DatepickerInputProps = {\n    onClick?: () => void,\n    value?: string,\n};\n\n/* Datepicker with Input */\nconst DatepickerInput = forwardRef((props: DatepickerInputProps, ref) => {\n    const onDateValueChange = () => {\n        console.log('date value changed');\n    };\n    return (\n        <input\n            type=\"text\"\n            className=\"form-control date\"\n            onClick={props.onClick}\n            value={props.value}\n            onChange={onDateValueChange}\n            ref={ref}\n        />\n    );\n});\n\ntype DatepickerInputWithAddonProps = {\n    onClick?: () => void,\n    value?: string,\n};\n/* Datepicker with Addon Input */\nconst DatepickerInputWithAddon = forwardRef((props: DatepickerInputWithAddonProps, ref) => (\n    <div className=\"input-group\" ref={ref}>\n        <input\n            type=\"text\"\n            className=\"form-control form-control-light\"\n            onClick={props.onClick}\n            value={props.value}\n            readOnly\n        />\n        <div className=\"input-group-append\">\n            <span className=\"input-group-text bg-primary border-primary text-white\">\n                <i className=\"mdi mdi-calendar-range font-13\"></i>\n            </span>\n        </div>\n    </div>\n));\n\ntype HyperDatepickerProps = {\n    value: Date,\n    onChange: (date: any) => void,\n    hideAddon?: boolean,\n    inputClass?: string,\n    dateFormat?: string,\n    minDate?: Date,\n    maxDate?: Date,\n    showTimeSelect?: boolean,\n    tI?: number,\n    timeCaption?: string,\n    showTimeSelectOnly?: boolean,\n    monthsShown?: number,\n    inline?: boolean,\n};\n\nconst HyperDatepicker = (props: HyperDatepickerProps): React$Element<any> => {\n    // handle custom input\n    const input = (props.hideAddon || false) === true ? <DatepickerInput /> : <DatepickerInputWithAddon />;\n\n    return (\n        <>\n            {/* date picker control */}\n            <DatePicker\n                customInput={input}\n                timeIntervals={props.tI}\n                className={classNames('form-control', props.inputClass)}\n                selected={props.value}\n                onChange={(date) => props.onChange(date)}\n                showTimeSelect={props.showTimeSelect}\n                timeFormat=\"hh:mm a\"\n                timeCaption={props.timeCaption}\n                dateFormat={props.dateFormat || 'MM/dd/yyyy'}\n                minDate={props.minDate}\n                maxDate={props.maxDate}\n                monthsShown={props.monthsShown}\n                showTimeSelectOnly={props.showTimeSelectOnly}\n                inline={props.inline}\n                autoComplete=\"off\"\n            />\n        </>\n    );\n};\n\nexport default HyperDatepicker;\n","// @flow\nimport React, { useEffect, useState } from 'react';\n\ntype BaseVectorMapProps = {\n    width?: string,\n    height?: string,\n    options?: any,\n    type: string,\n};\n\nconst BaseVectorMap = ({ width, height, options, type }: BaseVectorMapProps): React$Element<React$FragmentType> => {\n    const selectorId = type + new Date().getTime();\n    const [map, setMap] = useState();\n\n    useEffect(() => {\n        if (!map) {\n            // create jsvectormap\n            const map = new window['jsVectorMap']({\n                selector: '#' + selectorId,\n                map: type,\n                ...options,\n            });\n\n            setMap(map);\n        }\n    }, [selectorId, map, options, type]);\n    return (\n        <>\n            <div id={selectorId} style={{ width: width, height: height }}></div>\n        </>\n    );\n};\n\nexport default BaseVectorMap;\n","// @flow\nimport React from 'react';\nimport 'jsvectormap';\nimport 'jsvectormap/dist/maps/world.js';\n\n//components\nimport BaseVectorMap from './BaseVectorMap';\n\ntype WorldVectorMapProps = {\n    width?: string,\n    height?: string,\n    options?: any,\n};\n\nconst WorldVectorMap = ({ width, height, options }: WorldVectorMapProps): React$Element<React$FragmentType> => {\n    return (\n        <>\n            <BaseVectorMap width={width} height={height} options={options} type=\"world\" />\n        </>\n    );\n};\n\nexport default WorldVectorMap;\n","// @flow\nimport React from 'react';\nimport 'jsvectormap';\nimport 'jsvectormap/dist/maps/canada.js';\n\n//components\nimport BaseVectorMap from './BaseVectorMap';\n\ntype CanadaVectorMapProps = {\n    width?: string,\n    height?: string,\n    options?: any,\n};\n\nconst CanadaVectorMap = ({ width, height, options }: CanadaVectorMapProps): React$Element<React$FragmentType> => {\n    return (\n        <>\n            <BaseVectorMap width={width} height={height} options={options} type=\"canada\" />\n        </>\n    );\n};\n\nexport default CanadaVectorMap;\n","// @flow\nimport React from 'react';\nimport 'jsvectormap';\nimport 'jsvectormap/dist/maps/russia.js';\n\n//components\nimport BaseVectorMap from './BaseVectorMap';\n\ntype RussiaVectorMapProps = {\n    width?: string,\n    height?: string,\n    options?: any,\n};\n\nconst RussiaVectorMap = ({ width, height, options }: RussiaVectorMapProps): React$Element<React$FragmentType> => {\n    return (\n        <>\n            <BaseVectorMap width={width} height={height} options={options} type=\"russia\" />\n        </>\n    );\n};\n\nexport default RussiaVectorMap;\n","// @flow\nimport React from 'react';\nimport 'jsvectormap';\nimport 'jsvectormap/dist/maps/spain.js';\n\n//components\nimport BaseVectorMap from './BaseVectorMap';\n\ntype SpainVectorMapProps = {\n    width?: string,\n    height?: string,\n    options?: any,\n};\n\nconst SpainVectorMap = ({ width, height, options }: SpainVectorMapProps): React$Element<React$FragmentType> => {\n    return (\n        <>\n            <BaseVectorMap width={width} height={height} options={options} type=\"spain\" />\n        </>\n    );\n};\n\nexport default SpainVectorMap;\n","// @flow\nimport React from 'react';\nimport 'jsvectormap';\nimport 'jsvectormap/dist/maps/us-merc-en.js';\n\n//components\nimport BaseVectorMap from './BaseVectorMap';\n\ntype UsaVectorMapProps = {\n    width?: string,\n    height?: string,\n    options?: any,\n};\n\nconst UsaVectorMap = ({ width, height, options }: UsaVectorMapProps): React$Element<React$FragmentType> => {\n    return (\n        <>\n            <BaseVectorMap width={width} height={height} options={options} type=\"us_merc_en\" />\n        </>\n    );\n};\n\nexport default UsaVectorMap;\n","// @flow\nimport React from 'react';\nimport 'jsvectormap';\nimport 'jsvectormap/dist/maps/italy.js';\n\n//components\nimport BaseVectorMap from './BaseVectorMap';\n\ntype ItalyVectorMapProps = {\n    width?: string,\n    height?: string,\n    options?: any,\n};\n\nconst ItalyVectorMap = ({ width, height, options }: ItalyVectorMapProps): React$Element<React$FragmentType> => {\n    return (\n        <>\n            <BaseVectorMap width={width} height={height} options={options} type=\"italy\" />\n        </>\n    );\n};\n\nexport default ItalyVectorMap;\n","// @flow\nimport React from 'react';\nimport 'jsvectormap';\nimport 'jsvectormap/dist/maps/iraq.js';\n\n//components\nimport BaseVectorMap from './BaseVectorMap';\n\ntype IraqVectorMapProps = {\n    width?: string,\n    height?: string,\n    options?: any,\n};\n\nconst IraqVectorMap = ({ width, height, options }: IraqVectorMapProps): React$Element<React$FragmentType> => {\n    return (\n        <>\n            <BaseVectorMap width={width} height={height} options={options} type=\"iraq\" />\n        </>\n    );\n};\n\nexport default IraqVectorMap;\n","// @flow\nimport React from 'react';\nimport { Card } from 'react-bootstrap';\n\n// images\nimport statsImg from '../../../assets/images/email-campaign.svg';\n\nconst Statistics = (): React$Element<React$FragmentType> => {\n    return (\n        <>\n            <Card className=\"tilebox-one\">\n                <Card.Body>\n                    <i className=\"uil uil-users-alt float-end\"></i>\n                    <h6 className=\"text-uppercase mt-0\">Active Users</h6>\n                    <h2 className=\"my-2\" id=\"active-users-count\">\n                        121\n                    </h2>\n                    <p className=\"mb-0 text-muted\">\n                        <span className=\"text-success me-2\">\n                            <span className=\"mdi mdi-arrow-up-bold\"></span> 5.27%\n                        </span>\n                        <span className=\"text-nowrap\">Since last month</span>\n                    </p>\n                </Card.Body>\n            </Card>\n\n            <Card className=\"tilebox-one\">\n                <Card.Body>\n                    <i className=\"uil uil-window-restore float-end\"></i>\n                    <h6 className=\"text-uppercase mt-0\">Views per minute</h6>\n                    <h2 className=\"my-2\" id=\"active-users-count\">\n                        560\n                    </h2>\n                    <p className=\"mb-0 text-muted\">\n                        <span className=\"text-danger me-2\">\n                            <span className=\"mdi mdi-arrow-down-bold\"></span> 1.08%\n                        </span>\n                        <span className=\"text-nowrap\">Since previous week</span>\n                    </p>\n                </Card.Body>\n            </Card>\n\n            <Card className=\"cta-box overflow-hidden\">\n                <Card.Body>\n                    <div className=\"d-flex align-items-center\">\n                        <div>\n                            <h3 className=\"m-0 fw-normal cta-box-title\">\n                                Enhance your <b>Campaign</b> for better outreach <i className=\"mdi mdi-arrow-right\"></i>\n                            </h3>\n                        </div>\n                        <img className=\"ms-3\" src={statsImg} width=\"92\" alt=\"Generic placeholder\" />\n                    </div>\n                </Card.Body>\n            </Card>\n        </>\n    );\n};\n\nexport default Statistics;\n","// @flow\nimport React, { useState } from 'react';\nimport Chart from 'react-apexcharts';\nimport { Link } from 'react-router-dom';\nimport { Card, Alert } from 'react-bootstrap';\n\nconst SessionsChart = (): React$Element<any> => {\n    const colors = ['#0acf97'];\n    const [show, setShow] = useState(true);\n\n    const getDaysInMonth = (month, year) => {\n        var date = new Date(year, month, 1);\n        var days = [];\n        var idx = 0;\n        while (date.getMonth() === month && idx < 15) {\n            var d = new Date(date);\n            days.push(d.getDate() + ' ' + d.toLocaleString('en-us', { month: 'short' }));\n            date.setDate(date.getDate() + 1);\n            idx += 1;\n        }\n        return days;\n    };\n\n    const now = new Date();\n    const labels = getDaysInMonth(now.getMonth() + 1, now.getFullYear());\n\n    const apexBarChartOpts = {\n        grid: {\n            padding: {\n                left: 0,\n                right: 0,\n            },\n        },\n        chart: {\n            height: 309,\n            type: 'area',\n            parentHeightOffset: 0,\n            toolbar: {\n                show: false,\n            },\n        },\n        dataLabels: {\n            enabled: false,\n        },\n        stroke: {\n            curve: 'smooth',\n            width: 4,\n        },\n        zoom: {\n            enabled: false,\n        },\n        legend: {\n            show: false,\n        },\n        colors: colors,\n        xaxis: {\n            type: 'string',\n            categories: labels,\n            tooltip: {\n                enabled: false,\n            },\n            axisBorder: {\n                show: false,\n            },\n            labels: {},\n        },\n        yaxis: {\n            labels: {\n                formatter: function (val) {\n                    return val + 'k';\n                },\n                offsetX: -15,\n            },\n        },\n        fill: {\n            type: 'gradient',\n            gradient: {\n                type: 'vertical',\n                shadeIntensity: 1,\n                inverseColors: false,\n                opacityFrom: 0.45,\n                opacityTo: 0.1,\n                stops: [45, 100],\n            },\n        },\n    };\n\n    const apexBarChartData = [\n        {\n            name: 'Sessions',\n            data: [10, 20, 5, 15, 10, 20, 15, 25, 20, 30, 25, 40, 30, 50, 35],\n        },\n    ];\n\n    return (\n        <Card className=\"card-h-100\">\n            <Card.Body>\n                {show ? (\n                    <Alert variant=\"warning\" onClose={() => setShow(false)} dismissible className=\"mb-3\">\n                        Property HY1xx is not receiving hits. Either your site is not receiving any sessions or it is\n                        not tagged correctly.\n                    </Alert>\n                ) : null}\n                <ul className=\"nav float-end d-none d-lg-flex\">\n                    <li className=\"nav-item\">\n                        <Link to=\"#\" className=\"nav-link text-muted\">\n                            Today\n                        </Link>\n                    </li>\n                    <li className=\"nav-item\">\n                        <Link to=\"#\" className=\"nav-link text-muted\">\n                            7d\n                        </Link>\n                    </li>\n                    <li className=\"nav-item\">\n                        <Link to=\"#\" className=\"nav-link active\">\n                            15d\n                        </Link>\n                    </li>\n                    <li className=\"nav-item\">\n                        <Link to=\"#\" className=\"nav-link text-muted\">\n                            1m\n                        </Link>\n                    </li>\n                    <li className=\"nav-item\">\n                        <Link to=\"#\" className=\"nav-link text-muted\">\n                            1y\n                        </Link>\n                    </li>\n                </ul>\n\n                <h4 className=\"header-title mb-3\">Sessions Overview</h4>\n\n                <Chart\n                    options={apexBarChartOpts}\n                    series={apexBarChartData}\n                    type=\"area\"\n                    className=\"apex-charts mt-3\"\n                    height={308}\n                />\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default SessionsChart;\n","// @flow\nimport React from 'react';\nimport Chart from 'react-apexcharts';\nimport { Card, Row, Col } from 'react-bootstrap';\n\n// components\nimport { WorldVectorMap } from '../../../components/VectorMap/';\nimport CardTitle from '../../../components/CardTitle';\n\nconst CountrySessionsChart = (): React$Element<any> => {\n    const colors = ['rgba(114, 124, 245, 0.85)'];\n\n    // apex chart config\n    const apexBarChartOpts = {\n        grid: {\n            padding: {\n                left: 0,\n                right: 15,\n            },\n        },\n        chart: {\n            type: 'bar',\n            height: 350,\n            parentHeightOffset: 0,\n            toolbar: {\n                show: false,\n            },\n        },\n        plotOptions: {\n            bar: {\n                horizontal: true,\n            },\n        },\n        colors: colors,\n        dataLabels: {\n            enabled: false,\n        },\n        xaxis: {\n            categories: [\n                'India',\n                'China',\n                'United States',\n                'Japan',\n                'France',\n                'Italy',\n                'Netherlands',\n                'United Kingdom',\n                'Canada',\n                'South Korea',\n            ],\n            labels: {\n                formatter: function (val) {\n                    return val + '%';\n                },\n            },\n        },\n    };\n    const apexBarChartData = [\n        {\n            name: 'Sessions',\n            data: [90, 75, 60, 50, 45, 36, 28, 20, 15, 12],\n        },\n    ];\n\n    // vector map config\n    const options = {\n        series: {\n            regions: [\n                {\n                    attribute: 'fill',\n                    scale: {\n                        ScaleKR: '#e6ebff',\n                        ScaleCA: '#b3c3ff',\n                        ScaleGB: '#809bfe',\n                        ScaleNL: '#4d73fe',\n                        ScaleIT: '#1b4cfe',\n                        ScaleFR: '#727cf5',\n                        ScaleJP: '#e7fef7',\n                        ScaleUS: '#e7e9fd',\n                        ScaleCN: '#8890f7',\n                        ScaleIN: '#727cf5',\n                    },\n                    values: {\n                        KR: 'ScaleKR',\n                        CA: 'ScaleCA',\n                        GB: 'ScaleGB',\n                        NL: 'ScaleNL',\n                        IT: 'ScaleIT',\n                        FR: 'ScaleFR',\n                        JP: 'ScaleJP',\n                        US: 'ScaleUS',\n                        CN: 'ScaleCN',\n                        IN: 'ScaleIN',\n                    },\n                },\n            ],\n        },\n    };\n\n    return (\n        <Card>\n            <Card.Body>\n                <CardTitle\n                    containerClass=\"d-flex align-items-center justify-content-between mb-3\"\n                    title=\"Sessions By Country\"\n                    menuItems={[{ label: 'Refresh Report' }, { label: 'Export Report' }]}\n                />\n\n                <Row>\n                    <Col lg={8}>\n                        <div className=\"mt-3 mb-3\" style={{ height: '300px' }}>\n                            <WorldVectorMap height=\"100%\" width=\"100%\" options={options} />\n                        </div>\n                    </Col>\n                    <Col lg={4}>\n                        <Chart options={apexBarChartOpts} series={apexBarChartData} type=\"bar\" height={320} />\n                    </Col>\n                </Row>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default CountrySessionsChart;\n","// @flow\nimport React from 'react';\nimport Chart from 'react-apexcharts';\nimport { Card } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\n// component\nimport CardTitle from '../../../components/CardTitle';\n\nconst ViewsChart = (): React$Element<any> => {\n    // generate random data\n    function getRandomData(length) {\n        var d = [];\n        for (var idx = 0; idx < length; idx++) {\n            d.push(Math.floor(Math.random() * 90) + 10);\n        }\n        return d;\n    }\n\n    var categories = [];\n    for (var i = 10; i >= 1; i--) {\n        categories.push(i + ' min ago');\n    }\n\n    const apexOpts = {\n        grid: {\n            padding: {\n                left: 0,\n                right: 0,\n            },\n        },\n        chart: {\n            height: 150,\n            type: 'bar',\n            stacked: true,\n            parentHeightOffset: 0,\n            toolbar: {\n                show: false,\n            },\n        },\n        plotOptions: {\n            bar: {\n                horizontal: false,\n                endingShape: 'rounded',\n                columnWidth: '22%',\n                dataLabels: {\n                    position: 'top', // top, center, bottom\n                },\n            },\n        },\n        dataLabels: {\n            enabled: true,\n            offsetY: -24,\n            style: {\n                fontSize: '12px',\n                colors: ['#98a6ad'],\n            },\n        },\n        zoom: {\n            enabled: false,\n        },\n        legend: {\n            show: false,\n        },\n        colors: ['#0acf97'],\n        xaxis: {\n            categories: categories,\n            labels: {\n                show: false,\n            },\n            axisTicks: {\n                show: false,\n            },\n            axisBorder: {\n                show: false,\n            },\n        },\n        yaxis: {\n            labels: {\n                show: false,\n            },\n        },\n        fill: {\n            type: 'gradient',\n            gradient: {\n                inverseColors: !0,\n                shade: 'light',\n                type: 'horizontal',\n                shadeIntensity: 0.25,\n                gradientToColors: void 0,\n                opacityFrom: 1,\n                opacityTo: 1,\n                stops: [0, 100, 100, 100],\n            },\n        },\n        tooltip: {\n            y: {\n                formatter: function (val) {\n                    return val;\n                },\n            },\n        },\n    };\n\n    const apexData = [\n        {\n            name: 'Views',\n            data: getRandomData(10),\n        },\n    ];\n\n    return (\n        <Card>\n            <Card.Body>\n                <CardTitle\n                    containerClass=\"d-flex align-items-center justify-content-between mb-3\"\n                    title=\"Views Per Minute\"\n                    menuItems={[{ label: 'Refresh Report' }, { label: 'Export Report' }]}\n                />\n\n                <Chart options={apexOpts} series={apexData} type=\"bar\" height={160} className=\"apex-charts mt-2\" />\n\n                <div className=\"table-responsive mt-3\">\n                    <table className=\"table table-sm mb-0 font-13\">\n                        <thead>\n                            <tr>\n                                <th>Page</th>\n                                <th>Views</th>\n                                <th>Bounce Rate</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                <td>\n                                    <Link to=\"#\" className=\"text-muted\">\n                                        /hyper/dashboard-analytics\n                                    </Link>\n                                </td>\n                                <td>25</td>\n                                <td>87.5%</td>\n                            </tr>\n                            <tr>\n                                <td>\n                                    <Link to=\"#\" className=\"text-muted\">\n                                        /hyper/dashboard-crm\n                                    </Link>\n                                </td>\n                                <td>15</td>\n                                <td>21.48%</td>\n                            </tr>\n                            <tr>\n                                <td>\n                                    <Link to=\"#\" className=\"text-muted\">\n                                        /ubold/dashboard\n                                    </Link>\n                                </td>\n                                <td>10</td>\n                                <td>63.59%</td>\n                            </tr>\n                            <tr>\n                                <td>\n                                    <Link to=\"#\" className=\"text-muted\">\n                                        /minton/home\n                                    </Link>\n                                </td>\n                                <td>7</td>\n                                <td>56.12%</td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default ViewsChart;\n","// @flow\nimport React from 'react';\nimport Chart from 'react-apexcharts';\nimport { Card } from 'react-bootstrap';\n\n// component\nimport CardTitle from '../../../components/CardTitle';\n\nconst BrowsersChart = (): React$Element<any> => {\n    const apexOpts = {\n        grid: {\n            padding: {\n                left: 0,\n                right: 0,\n            },\n        },\n        chart: {\n            height: 343,\n            type: 'radar',\n            parentHeightOffset: 0,\n            toolbar: {\n                show: false,\n            },\n        },\n        labels: ['Chrome', 'Firefox', 'Safari', 'Opera', 'Edge', 'Explorer'],\n        plotOptions: {\n            radar: {\n                size: 130,\n                polygons: {\n                    strokeColor: '#e9e9e9',\n                    fill: {\n                        colors: ['#f8f8f8', '#fff'],\n                    },\n                },\n            },\n        },\n        colors: ['#727cf5'],\n        yaxis: {\n            labels: {\n                formatter: function (val) {\n                    return val + '%';\n                },\n            },\n        },\n        dataLabels: {\n            enabled: true,\n        },\n        markers: {\n            size: 4,\n            colors: ['#fff'],\n            strokeColor: ['#727cf5'],\n            strokeWidth: 2,\n        },\n    };\n\n    const apexData = [\n        {\n            name: 'Usage',\n            data: [80, 50, 30, 40, 60, 20],\n        },\n    ];\n\n    return (\n        <Card>\n            <Card.Body>\n                <CardTitle\n                    containerClass=\"d-flex align-items-center justify-content-between mb-3\"\n                    title=\"Session By Browser\"\n                    menuItems={[{ label: 'Refresh Report' }, { label: 'Export Report' }]}\n                />\n\n                <Chart options={apexOpts} series={apexData} type=\"radar\" height={368} className=\"apex-charts mt-3\" />\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default BrowsersChart;\n","// @flow\nimport React from 'react';\nimport Chart from 'react-apexcharts';\nimport { Card } from 'react-bootstrap';\n\n// component\nimport CardTitle from '../../../components/CardTitle';\n\nconst OsChart = (): React$Element<any> => {\n    const apexOpts = {\n        grid: {\n            padding: {\n                left: 0,\n                right: 0,\n            },\n        },\n        chart: {\n            height: 278,\n            type: 'radialBar',\n            parentHeightOffset: 0,\n            toolbar: {\n                show: false,\n            },\n        },\n        plotOptions: {\n            radialBar: {\n                dataLabels: {\n                    name: {\n                        fontSize: '22px',\n                    },\n                    value: {\n                        fontSize: '16px',\n                    },\n                    total: {\n                        show: true,\n                        label: 'OS',\n                        formatter: function (w) {\n                            // By default this function returns the average of all series. The below is just an example to show the use of custom formatter function\n                            return 8541;\n                        },\n                    },\n                },\n            },\n        },\n        colors: ['#727cf5', '#0acf97', '#fa5c7c', '#ffbc00'],\n        labels: ['Windows', 'Macintosh', 'Linux', 'Android'],\n    };\n\n    const apexData = [44, 55, 67, 83];\n\n    return (\n        <Card>\n            <Card.Body>\n                <CardTitle\n                    containerClass=\"d-flex align-items-center justify-content-between mb-3\"\n                    title=\"Sessions by Operating System\"\n                    menuItems={[{ label: 'Refresh Report' }, { label: 'Export Report' }]}\n                />\n\n                <Chart\n                    options={apexOpts}\n                    series={apexData}\n                    type=\"radialBar\"\n                    height={290}\n                    className=\"apex-charts mt-3\"\n                />\n\n                <div className=\"row text-center mt-2\">\n                    <div className=\"col-6\">\n                        <h4 className=\"font-weight-normal\">\n                            <span>6,510</span>\n                        </h4>\n                        <p className=\"text-muted mb-0\">Online System</p>\n                    </div>\n                    <div className=\"col-6\">\n                        <h4 className=\"font-weight-normal\">\n                            <span>2,031</span>\n                        </h4>\n                        <p className=\"text-muted mb-0\">Offline System</p>\n                    </div>\n                </div>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default OsChart;\n","// @flow\nimport React from 'react';\nimport { Card, Table, ProgressBar } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\nconst Channels = (): React$Element<any> => {\n    return (\n        <Card>\n            <Card.Body>\n                <Link to=\"#\" className=\"p-0 float-end\">\n                    Export <i className=\"mdi mdi-download ms-1\"></i>\n                </Link>\n                <h4 className=\"header-title  mt-1 mb-3\">Channels</h4>\n\n                <Table responsive className=\"table table-sm table-centered mb-0 font-14\">\n                    <thead className=\"table-light\">\n                        <tr>\n                            <th>Channel</th>\n                            <th>Visits</th>\n                            <th style={{ width: '40%' }}>&nbsp;</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <td>Direct</td>\n                            <td>2,050</td>\n                            <td>\n                                <ProgressBar now={65} style={{ height: '3px' }} />\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>Organic Search</td>\n                            <td>1,405</td>\n                            <td>\n                                <ProgressBar now={45} style={{ height: '3px' }} variant=\"info\" />\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>Refferal</td>\n                            <td>750</td>\n                            <td>\n                                <ProgressBar now={30} style={{ height: '3px' }} variant=\"warning\" />\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>Social</td>\n                            <td>540</td>\n                            <td>\n                                <ProgressBar now={25} style={{ height: '3px' }} variant=\"danger\" />\n                            </td>\n                        </tr>\n                    </tbody>\n                </Table>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default Channels;\n","// @flow\nimport React from 'react';\nimport { Card, Table, ProgressBar } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\nconst Social = (): React$Element<any> => {\n    return (\n        <Card>\n            <Card.Body>\n                <Link to=\"#\" className=\"p-0 float-end\">\n                    Export <i className=\"mdi mdi-download ms-1\"></i>\n                </Link>\n                <h4 className=\"header-title mt-1 mb-3\">Social Media Traffic</h4>\n\n                <Table responsive className=\"table table-sm table-centered mb-0 font-14\">\n                    <thead className=\"table-light\">\n                        <tr>\n                            <th>Network</th>\n                            <th>Visits</th>\n                            <th style={{ width: '40%' }}>&nbsp;</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <td>Facebook</td>\n                            <td>2,250</td>\n                            <td>\n                                <ProgressBar now={65} style={{ height: '3px' }} />\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>Instagram</td>\n                            <td>1,501</td>\n                            <td>\n                                <ProgressBar now={45} style={{ height: '3px' }} />\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>Twitter</td>\n                            <td>750</td>\n                            <td>\n                                <ProgressBar now={30} style={{ height: '3px' }} />\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>LinkedIn</td>\n                            <td>540</td>\n                            <td>\n                                <ProgressBar now={25} style={{ height: '3px' }} />\n                            </td>\n                        </tr>\n                    </tbody>\n                </Table>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default Social;\n","// @flow\nimport React from 'react';\nimport { Card, Table } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\nconst Engagement = (): React$Element<any> => {\n    return (\n        <Card>\n            <Card.Body>\n                <Link to=\"#\" className=\"p-0 float-end\">\n                    Export <i className=\"mdi mdi-download ms-1\"></i>\n                </Link>\n                <h4 className=\"header-title mt-1 mb-3\">Engagement Overview</h4>\n\n                <Table responsive className=\"table table-sm table-centered mb-0 font-14\">\n                    <thead className=\"table-light\">\n                        <tr>\n                            <th>Duration (Secs)</th>\n                            <th style={{ width: '30%' }}>Sessions</th>\n                            <th style={{ width: '3    0%' }}>Views</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <td>0-30</td>\n                            <td>2,250</td>\n                            <td>4,250</td>\n                        </tr>\n                        <tr>\n                            <td>31-60</td>\n                            <td>1,501</td>\n                            <td>2,050</td>\n                        </tr>\n                        <tr>\n                            <td>61-120</td>\n                            <td>750</td>\n                            <td>1,600</td>\n                        </tr>\n                        <tr>\n                            <td>121-240</td>\n                            <td>540</td>\n                            <td>1,040</td>\n                        </tr>\n                    </tbody>\n                </Table>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default Engagement;\n","// @flow\nimport React, { useState } from 'react';\nimport { Row, Col } from 'react-bootstrap';\n\n// components\nimport HyperDatepicker from '../../../components/Datepicker';\n\nimport Statistics from './Statistics';\nimport SessionsChart from './SessionsChart';\nimport CountrySessionsChart from './CountrySessionsChart';\nimport ViewsChart from './ViewsChart';\nimport BrowsersChart from './BrowsersChart';\nimport OsChart from './OsChart';\nimport Channels from './Channels';\nimport Social from './Social';\nimport Engagement from './Engagement';\n\nconst AnalyticsDashboardPage = (): React$Element<React$FragmentType> => {\n    const [selectedDate, setSelectedDate] = useState(new Date());\n\n    /*\n     * handle date change\n     */\n    const onDateChange = (date) => {\n        if (date) {\n            setSelectedDate(date);\n        }\n    };\n    return (\n        <>\n            <Row>\n                <Col>\n                    <div className=\"page-title-box\">\n                        <div className=\"page-title-right\">\n                            <form className=\"d-flex\">\n                                <div className=\"input-group\">\n                                    <HyperDatepicker\n                                        value={selectedDate}\n                                        inputClass=\"form-control-light\"\n                                        onChange={(date) => {\n                                            onDateChange(date);\n                                        }}\n                                    />\n                                </div>\n                                <button className=\"btn btn-primary ms-2\">\n                                    <i className=\"mdi mdi-autorenew\"></i>\n                                </button>\n                            </form>\n                        </div>\n                        <h4 className=\"page-title\">Analytics</h4>\n                    </div>\n                </Col>\n            </Row>\n\n            <Row>\n                <Col xl={3} lg={4}>\n                    <Statistics />\n                </Col>\n\n                <Col xl={9} lg={8}>\n                    <SessionsChart />\n                </Col>\n            </Row>\n\n            <Row>\n                <Col>\n                    <CountrySessionsChart />\n                </Col>\n            </Row>\n\n            <Row>\n                <Col xl={4} lg={12}>\n                    <ViewsChart />\n                </Col>\n                <Col xl={4} lg={6}>\n                    <BrowsersChart />\n                </Col>\n                <Col xl={4} lg={6}>\n                    <OsChart />\n                </Col>\n            </Row>\n\n            <Row>\n                <Col xl={4} lg={6}>\n                    <Channels />\n                </Col>\n                <Col xl={4} lg={6}>\n                    <Social />\n                </Col>\n                <Col xl={4} lg={6}>\n                    <Engagement />\n                </Col>\n            </Row>\n        </>\n    );\n};\n\nexport default AnalyticsDashboardPage;\n"],"names":["DatepickerInput","forwardRef","props","ref","_jsx","type","className","onClick","value","onChange","console","log","DatepickerInputWithAddon","_jsxs","children","readOnly","input","hideAddon","_Fragment","DatePicker","customInput","timeIntervals","tI","classNames","inputClass","selected","date","showTimeSelect","timeFormat","timeCaption","dateFormat","minDate","maxDate","monthsShown","showTimeSelectOnly","inline","autoComplete","_ref","width","height","options","selectorId","Date","getTime","_useState","useState","_useState2","_slicedToArray","map","setMap","useEffect","window","_objectSpread","selector","id","style","BaseVectorMap","Card","Body","src","statsImg","alt","show","setShow","now","apexBarChartOpts","grid","padding","left","right","chart","parentHeightOffset","toolbar","dataLabels","enabled","stroke","curve","zoom","legend","colors","xaxis","categories","month","year","days","idx","getMonth","d","push","getDate","toLocaleString","setDate","getDaysInMonth","getFullYear","tooltip","axisBorder","labels","yaxis","formatter","val","offsetX","fill","gradient","shadeIntensity","inverseColors","opacityFrom","opacityTo","stops","Alert","variant","onClose","dismissible","Link","to","Chart","series","name","data","plotOptions","bar","horizontal","CardTitle","containerClass","title","menuItems","label","Row","Col","lg","WorldVectorMap","regions","attribute","scale","ScaleKR","ScaleCA","ScaleGB","ScaleNL","ScaleIT","ScaleFR","ScaleJP","ScaleUS","ScaleCN","ScaleIN","values","KR","CA","GB","NL","IT","FR","JP","US","CN","IN","i","apexOpts","stacked","endingShape","columnWidth","position","offsetY","fontSize","axisTicks","shade","gradientToColors","y","apexData","length","Math","floor","random","getRandomData","radar","size","polygons","strokeColor","markers","strokeWidth","radialBar","total","w","Table","responsive","ProgressBar","selectedDate","setSelectedDate","HyperDatepicker","onDateChange","xl","Statistics","SessionsChart","CountrySessionsChart","ViewsChart","BrowsersChart","OsChart","Channels","Social","Engagement"],"sourceRoot":""}