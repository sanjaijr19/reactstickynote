{"version":3,"file":"static/js/5501.8a7e3d85.chunk.js","mappings":"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","sources":["components/CardTitle.js","components/PageTitle.js","components/VerticalForm.js","components/FormInput.js","pages/apps/CRM/Projects/ProjectList.js","pages/apps/CRM/Projects/ProjectSummary.js","pages/apps/CRM/Projects/Statistics.js","pages/apps/CRM/Projects/MonthlyTarget.js","pages/apps/CRM/Projects/ProjectStatistics.js","pages/apps/CRM/Projects/ProjectOverview.js","pages/apps/CRM/Projects/DailyTask.js","pages/apps/CRM/Projects/TeamMembers.js","pages/apps/CRM/Projects/data.js","pages/apps/CRM/Projects/index.js"],"sourcesContent":["// @flow\nimport React from 'react';\nimport { Dropdown } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\n\ntype MenuItem = {\n    label: string,\n    icon?: string,\n    variant?: string,\n    hasDivider?: boolean,\n};\n\ntype CardTitleProps = {\n    menuItems: Array<MenuItem>,\n    title: string | React$Node,\n    containerClass: string,\n    icon?: string,\n};\n\nconst CardTitle = ({ title, containerClass, icon, menuItems }: CardTitleProps): React$Element<any> => {\n    return (\n        <div className={classNames(containerClass)}>\n            {typeof title === 'string' ? <h4 className=\"header-title\">{title}</h4> : title}\n            <Dropdown>\n                <Dropdown.Toggle as={Link} to=\"#\" className=\"arrow-none card-drop\">\n                    <i className={classNames(icon ? icon : 'mdi mdi-dots-vertical')} />\n                </Dropdown.Toggle>\n                <Dropdown.Menu align=\"end\">\n                    {(menuItems || []).map((item, index) => {\n                        return (\n                            <React.Fragment key={index}>\n                                {item.hasDivider && <Dropdown.Divider as=\"div\" />}\n                                <Dropdown.Item className={classNames(item.variant ? item.variant : '')}>\n                                    {item.icon && <i className={classNames(item.icon, 'me-1')}></i>}\n                                    {item.label}\n                                </Dropdown.Item>\n                            </React.Fragment>\n                        );\n                    })}\n                </Dropdown.Menu>\n            </Dropdown>\n        </div>\n    );\n};\n\nexport default CardTitle;\n","// @flow\nimport React from 'react';\nimport { Row, Col, Breadcrumb } from 'react-bootstrap';\n\ntype BreadcrumbItems = {\n    label: string,\n    path: string,\n    active?: boolean,\n};\n\ntype PageTitleProps = {\n    breadCrumbItems: Array<BreadcrumbItems>,\n    title: string,\n};\n\n/**\n * PageTitle\n */\nconst PageTitle = (props: PageTitleProps): React$Element<any> => {\n    return (\n        <Row>\n            <Col>\n                <div className=\"page-title-box\">\n                    <div className=\"page-title-right\">\n                        <Breadcrumb listProps={{ className: 'm-0' }}>\n                            <Breadcrumb.Item href=\"/\">Stickynote</Breadcrumb.Item>\n\n                            {props.breadCrumbItems.map((item, index) => {\n                                return item.active ? (\n                                    <Breadcrumb.Item active key={index}>\n                                        {item.label}\n                                    </Breadcrumb.Item>\n                                ) : (\n                                    <Breadcrumb.Item key={index} href={item.path}>\n                                        {item.label}\n                                    </Breadcrumb.Item>\n                                );\n                            })}\n                        </Breadcrumb>\n                    </div>\n                    <h4 className=\"page-title\">{props.title}</h4>\n                </div>\n            </Col>\n        </Row>\n    );\n};\n\nexport default PageTitle;\n","// @flow\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\n\ntype VerticalFromProps = {\n    defaultValues?: Object,\n    resolver?: any,\n    children?: any,\n    onSubmit?: (value: any) => void,\n    formClass?: string,\n};\n\nconst VerticalForm = ({\n    defaultValues,\n    resolver,\n    children,\n    onSubmit,\n    formClass,\n}: VerticalFromProps): React$Element<any> => {\n    /*\n     * form methods\n     */\n    const methods = useForm({ defaultValues, resolver });\n    const {\n        handleSubmit,\n        register,\n        control,\n        formState: { errors },\n    } = methods;\n\n    return (\n        <form onSubmit={handleSubmit(onSubmit)} className={formClass} noValidate>\n            {Array.isArray(children)\n                ? children.map((child) => {\n                      return child.props && child.props.name\n                          ? React.createElement(child.type, {\n                                ...{\n                                    ...child.props,\n                                    register,\n                                    key: child.props.name,\n                                    errors,\n                                    control,\n                                },\n                            })\n                          : child;\n                  })\n                : children}\n        </form>\n    );\n};\n\nexport default VerticalForm;\n","// @flow\nimport React, { useState } from 'react';\nimport { Form, InputGroup } from 'react-bootstrap';\nimport classNames from 'classnames';\n\n/* Password Input */\nconst PasswordInput = ({ name, placeholder, refCallback, errors, register, className }) => {\n    const [showPassword, setShowPassword] = useState(false);\n\n    return (\n        <>\n            <InputGroup className=\"mb-0\">\n                <Form.Control\n                    type={showPassword ? 'text' : 'password'}\n                    placeholder={placeholder}\n                    name={name}\n                    id={name}\n                    as=\"input\"\n                    ref={(r) => {\n                        if (refCallback) refCallback(r);\n                    }}\n                    className={className}\n                    isInvalid={errors && errors[name] ? true : false}\n                    {...(register ? register(name) : {})}\n                    autoComplete={name}\n                />\n                <div\n                    className={classNames('input-group-text', 'input-group-password', {\n                        'show-password': showPassword,\n                    })}\n                    data-password={showPassword ? 'true' : 'false'}>\n                    <span\n                        className=\"password-eye\"\n                        onClick={() => {\n                            setShowPassword(!showPassword);\n                        }}></span>\n                </div>\n            </InputGroup>\n        </>\n    );\n};\n\ntype FormInputProps = {\n    label?: string,\n    type?: string,\n    name?: string,\n    placeholder?: string,\n    register?: any,\n    errors?: any,\n    className?: string,\n    labelClassName?: string,\n    containerClass?: string,\n    refCallback?: any,\n    children?: any,\n};\n\nconst FormInput = ({\n    label,\n    type,\n    name,\n    placeholder,\n    register,\n    errors,\n    className,\n    labelClassName,\n    containerClass,\n    refCallback,\n    children,\n    ...otherProps\n}: FormInputProps): React$Element<React$FragmentType> => {\n    // handle input type\n    const comp = type === 'textarea' ? 'textarea' : type === 'select' ? 'select' : 'input';\n\n    return (\n        <>\n            {type === 'hidden' ? (\n                <input type={type} name={name} {...(register ? register(name) : {})} {...otherProps} />\n            ) : (\n                <>\n                    {type === 'password' ? (\n                        <>\n                            <Form.Group className={containerClass}>\n                                {label ? (\n                                    <>\n                                        {' '}\n                                        <Form.Label className={labelClassName}>{label}</Form.Label> {children}{' '}\n                                    </>\n                                ) : null}\n                                <PasswordInput\n                                    name={name}\n                                    placeholder={placeholder}\n                                    refCallback={refCallback}\n                                    errors={errors}\n                                    register={register}\n                                    className={className}\n                                />\n\n                                {errors && errors[name] ? (\n                                    <Form.Control.Feedback type=\"invalid\" className=\"d-block\">\n                                        {errors[name]['message']}\n                                    </Form.Control.Feedback>\n                                ) : null}\n                            </Form.Group>\n                        </>\n                    ) : (\n                        <>\n                            {type === 'select' ? (\n                                <>\n                                    <Form.Group className={containerClass}>\n                                        {label ? <Form.Label className={labelClassName}>{label}</Form.Label> : null}\n\n                                        <Form.Select\n                                            type={type}\n                                            label={label}\n                                            name={name}\n                                            id={name}\n                                            ref={(r) => {\n                                                if (refCallback) refCallback(r);\n                                            }}\n                                            comp={comp}\n                                            className={className}\n                                            isInvalid={errors && errors[name] ? true : false}\n                                            {...(register ? register(name) : {})}\n                                            {...otherProps}>\n                                            {children}\n                                        </Form.Select>\n\n                                        {errors && errors[name] ? (\n                                            <Form.Control.Feedback type=\"invalid\">\n                                                {errors[name]['message']}\n                                            </Form.Control.Feedback>\n                                        ) : null}\n                                    </Form.Group>\n                                </>\n                            ) : (\n                                <>\n                                    {type === 'checkbox' || type === 'radio' ? (\n                                        <>\n                                            <Form.Group className={containerClass}>\n                                                <Form.Check\n                                                    type={type}\n                                                    label={label}\n                                                    name={name}\n                                                    id={name}\n                                                    ref={(r) => {\n                                                        if (refCallback) refCallback(r);\n                                                    }}\n                                                    className={className}\n                                                    isInvalid={errors && errors[name] ? true : false}\n                                                    {...(register ? register(name) : {})}\n                                                    {...otherProps}\n                                                />\n\n                                                {errors && errors[name] ? (\n                                                    <Form.Control.Feedback type=\"invalid\">\n                                                        {errors[name]['message']}\n                                                    </Form.Control.Feedback>\n                                                ) : null}\n                                            </Form.Group>\n                                        </>\n                                    ) : (\n                                        <Form.Group className={containerClass}>\n                                            {label ? <Form.Label className={labelClassName}>{label}</Form.Label> : null}\n\n                                            <Form.Control\n                                                type={type}\n                                                placeholder={placeholder}\n                                                name={name}\n                                                id={name}\n                                                as={comp}\n                                                ref={(r) => {\n                                                    if (refCallback) refCallback(r);\n                                                }}\n                                                className={className}\n                                                isInvalid={errors && errors[name] ? true : false}\n                                                {...(register ? register(name) : {})}\n                                                {...otherProps}\n                                                autoComplete={name}>\n                                                {children ? children : null}\n                                            </Form.Control>\n\n                                            {errors && errors[name] ? (\n                                                <Form.Control.Feedback type=\"invalid\">\n                                                    {errors[name]['message']}\n                                                </Form.Control.Feedback>\n                                            ) : null}\n                                        </Form.Group>\n                                    )}\n                                </>\n                            )}\n                        </>\n                    )}\n                </>\n            )}\n        </>\n    );\n};\n\nexport default FormInput;\n","// @flow\nimport React, { useState } from 'react';\nimport { Row, Col, Card, Modal, Button } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport Select from 'react-select';\n\n// component\nimport CardTitle from '../../../../components/CardTitle';\nimport { VerticalForm, FormInput } from '../../../../components/';\n\ntype Project = {\n    title: string,\n    task: string,\n    created_on: string,\n    members: string[],\n};\n\ntype ProjectListProps = {\n    projectList: Project[],\n};\n\nconst AddNew = ({ show, handleClose }) => {\n    return (\n        <Modal show={show} onHide={handleClose}>\n            <Modal.Header closeButton>\n                <Modal.Title as=\"h5\">Add New Project</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <VerticalForm>\n                    <FormInput\n                        type=\"text\"\n                        label=\"Project Name\"\n                        name=\"projectName\"\n                        placeholder=\"Add project name...\"\n                        containerClass={'mb-3'}\n                    />\n                    <FormInput label=\"Add Task\" name=\"select\" type=\"select\" containerClass={'mb-3'}>\n                        <option>Add a task...</option>\n                        <option value=\"1\">Landing Page</option>\n                        <option value=\"2\">Admin Dashboards</option>\n                        <option value=\"3\">Admin Pages</option>\n                        <option value=\"4\">UX/UI Design</option>\n                        <option value=\"5\">Client Work</option>\n                        <option value=\"6\">Other Work</option>\n                    </FormInput>\n\n                    <div className=\"mb-3\">\n                        <label htmlFor=\"AssignTask\" className=\"form-label\">\n                            Assign Task\n                        </label>\n                        <Select\n                            placeholder=\"Choose...\"\n                            isMulti={true}\n                            options={[\n                                {\n                                    label: 'UX Designer',\n                                    options: [\n                                        { value: 'AD', label: 'Andrea' },\n                                        { value: 'DL', label: 'Danielle' },\n                                        { value: 'JH', label: 'John' },\n                                    ],\n                                },\n                                {\n                                    label: 'Developer',\n                                    options: [\n                                        { value: 'ST', label: 'Steven' },\n                                        { value: 'MC', label: 'Michael' },\n                                    ],\n                                },\n                                {\n                                    label: 'UX Designer',\n                                    options: [\n                                        { value: 'SR', label: 'Sharon' },\n                                        { value: 'TM', label: 'Timothy' },\n                                        { value: 'FD', label: 'Frederick' },\n                                        { value: 'HN', label: 'Henry' },\n                                    ],\n                                },\n                            ]}\n                            className=\"react-select\"\n                            classNamePrefix=\"react-select\"></Select>\n                    </div>\n\n                    <FormInput\n                        type=\"textarea\"\n                        label=\"Description\"\n                        name=\"description\"\n                        rows=\"4\"\n                        containerClass={'mb-3'}\n                    />\n                </VerticalForm>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"light\" onClick={handleClose}>\n                    Close\n                </Button>\n                <Button variant=\"primary\" onClick={handleClose}>\n                    Save Task\n                </Button>\n            </Modal.Footer>\n        </Modal>\n    );\n};\n\nconst ProjectList = ({ projectList }: ProjectListProps): React$Element<React$FragmentType> => {\n    const [show, setShow] = useState(false);\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    return (\n        <>\n            <Row>\n                {(projectList || []).map((project, index) => {\n                    return (\n                        <Col key={index.toString()} sm={6} xl={3} className=\"mb-3\">\n                            <Card className=\"mb-0 h-100\">\n                                <Card.Body>\n                                    <CardTitle\n                                        containerClass=\"d-flex align-items-center justify-content-between\"\n                                        title={\n                                            <div>\n                                                <h4 className=\"header-title\">{project.title}</h4>\n                                                <h5\n                                                    className=\"text-muted fw-normal mt-0 text-truncate\"\n                                                    title=\"Campaign Sent\">\n                                                    {project.task}\n                                                </h5>\n                                            </div>\n                                        }\n                                        icon=\"mdi mdi-dots-horizontal\"\n                                        menuItems={[\n                                            { label: 'Add Card', icon: 'mdi mdi-plus-circle' },\n                                            { label: 'Copy List', icon: 'mdi mdi-content-copy' },\n                                            { label: 'Edit', icon: 'mdi mdi-square-edit-outline' },\n                                            {\n                                                label: 'Delete',\n                                                icon: 'mdi mdi-trash-can-outline',\n                                                variant: 'text-danger',\n                                                hasDivider: true,\n                                            },\n                                        ]}\n                                    />\n\n                                    <div className=\"d-flex align-items-center mt-3\">\n                                        <div className=\"flex-shrink-0\">\n                                            <h5 className=\"font-13 text-muted my-0\">\n                                                <i className=\"mdi mdi-clock-outline\"></i> {project.created_on}\n                                            </h5>\n                                        </div>\n                                        <div className=\"flex-grow-1 ms-2\"></div>\n                                        <div className=\"text-end multi-user\">\n                                            {(project.members || []).map((member, index) => {\n                                                return (\n                                                    <Link key={index.toString()} to=\"#\" className=\"d-inline-block\">\n                                                        <img\n                                                            src={member}\n                                                            className=\"rounded-circle avatar-xs\"\n                                                            alt=\"friend\"\n                                                        />\n                                                    </Link>\n                                                );\n                                            })}\n                                        </div>\n                                    </div>\n                                </Card.Body>\n                            </Card>\n                        </Col>\n                    );\n                })}\n                <Col sm={6} xl={3} className=\"mb-3\">\n                    <Card className=\"mb-0 h-100\">\n                        <Card.Body>\n                            <div className=\"border-dashed border-2 border h-100 w-100 rounded d-flex align-items-center justify-content-center\">\n                                <Link\n                                    to=\"#\"\n                                    onClick={handleShow}\n                                    className=\"text-center text-muted p-2\"\n                                    data-bs-toggle=\"modal\"\n                                    data-bs-target=\"#exampleModal\">\n                                    <i className=\"mdi mdi-plus h3 my-0\"></i>{' '}\n                                    <h4 className=\"font-16 mt-1 mb-0 d-block\">Add New Project</h4>\n                                </Link>\n                            </div>\n                        </Card.Body>\n                    </Card>\n                </Col>\n            </Row>\n            <AddNew show={show} handleClose={handleClose} />\n        </>\n    );\n};\n\nexport default ProjectList;\n","// @flow\nimport React from 'react';\nimport { Alert, Badge, Card, OverlayTrigger, Tooltip, ProgressBar } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\n// components\nimport CardTitle from '../../../../components/CardTitle';\n\nconst ProjectSummary = (): React$Element<React$FragmentType> => {\n    return (\n        <>\n            <Card>\n                <Card.Body>\n                    <CardTitle\n                        containerClass=\"d-flex align-items-center justify-content-between\"\n                        title=\"Project Summary\"\n                        menuItems={[{ label: 'Refresh Report' }, { label: 'Export Report' }]}\n                    />\n                    <Alert variant=\"warning\" className=\"mt-2\">\n                        <i className=\"uil-folder-heart me-1 h4 align-middle\"></i> <b>38</b> Total Admin & Client\n                        Projects\n                    </Alert>\n\n                    <div className=\"d-flex align-items-center border border-light rounded p-2 mb-2\">\n                        <div className=\"flex-shrink-0 me-2\">\n                            <i className=\"mdi mdi-account-group widget-icon rounded-circle\"></i>\n                        </div>\n                        <div className=\"flex-grow-1\">\n                            <h5 className=\"fw-semibold my-0\">Project Discssion</h5>\n                            <p className=\"mb-0\">6 Person</p>\n                        </div>\n                        <OverlayTrigger placement=\"top\" overlay={<Tooltip>Info</Tooltip>}>\n                            <Link to=\"#\" className=\"text-muted\">\n                                <i className=\"mdi mdi-information-outline h4  my-0\"></i>\n                            </Link>\n                        </OverlayTrigger>\n                    </div>\n\n                    <div className=\"d-flex align-items-center border border-light rounded p-2 mb-2\">\n                        <div className=\"flex-shrink-0 me-2\">\n                            <i className=\"mdi mdi-progress-pencil widget-icon rounded-circle bg-warning-lighten text-warning\"></i>\n                        </div>\n                        <div className=\"flex-grow-1\">\n                            <h5 className=\"fw-semibold my-0\">In Progress</h5>\n                            <p className=\"mb-0\">16 Projects</p>\n                        </div>\n                        <OverlayTrigger placement=\"top\" overlay={<Tooltip>Info</Tooltip>}>\n                            <Link to=\"#\" className=\"text-muted\">\n                                <i className=\"mdi mdi-information-outline h4  my-0\"></i>\n                            </Link>\n                        </OverlayTrigger>\n                    </div>\n\n                    <div className=\"d-flex align-items-center border border-light rounded p-2 mb-2\">\n                        <div className=\"flex-shrink-0 me-2\">\n                            <i className=\"mdi mdi-checkbox-marked-circle-outline widget-icon rounded-circle bg-danger-lighten text-danger\"></i>\n                        </div>\n                        <div className=\"flex-grow-1\">\n                            <h5 className=\"fw-semibold my-0\">Completed Projects</h5>\n                            <p className=\"mb-0\">24</p>\n                        </div>\n                        <OverlayTrigger placement=\"top\" overlay={<Tooltip>Info</Tooltip>}>\n                            <Link to=\"#\" className=\"text-muted\">\n                                <i className=\"mdi mdi-information-outline h4  my-0\"></i>\n                            </Link>\n                        </OverlayTrigger>\n                    </div>\n\n                    <div className=\"d-flex align-items-center border border-light rounded p-2\">\n                        <div className=\"flex-shrink-0 me-2\">\n                            <i className=\"mdi mdi-send widget-icon rounded-circle bg-success-lighten text-success\"></i>\n                        </div>\n                        <div className=\"flex-grow-1\">\n                            <h5 className=\"fw-semibold my-0\">Delivery Projects</h5>\n                            <p className=\"mb-0\">20</p>\n                        </div>\n                        <OverlayTrigger placement=\"top\" overlay={<Tooltip>Info</Tooltip>}>\n                            <Link to=\"#\" className=\"text-muted\">\n                                <i className=\"mdi mdi-information-outline h4  my-0\"></i>\n                            </Link>\n                        </OverlayTrigger>\n                    </div>\n                </Card.Body>\n            </Card>\n\n            <Card>\n                <Card.Body>\n                    <h4 className=\"fw-semibold mt-0 mb-3\">\n                        On Time Completed Rate\n                        <Badge bg=\"primary-lighten\" className=\"text-primary fw ms-sm-1\">\n                            <i className=\"mdi mdi-trending-up me-1\"></i>59%\n                        </Badge>\n                    </h4>\n                    <h5 className=\"float-end mt-0\">65%</h5>\n                    <h5 className=\"fw-normal mt-0\">Completed Projects</h5>\n                    <ProgressBar now=\"65\" style={{ height: 3 }} />\n                </Card.Body>\n            </Card>\n        </>\n    );\n};\n\nexport default ProjectSummary;\n","// @flow\nimport classNames from 'classnames';\nimport React from 'react';\nimport { Card, Col } from 'react-bootstrap';\n\n// component\nimport CardTitle from '../../../../components/CardTitle';\n\ntype StatisticsItems = {\n    icon: string,\n    variant: string,\n    title: string,\n    noOfProject: number,\n};\n\ntype StatisticsProps = {\n    statisticsData: Array<StatisticsItems>,\n};\n\nconst Statistics = ({ statisticsData }: StatisticsProps): React$Element<React$FragmentType> => {\n    return (\n        <>\n            {(statisticsData || []).map((statistics, i) => {\n                return (\n                    <Col xl={3} sm={6} key={i}>\n                        <Card>\n                            <Card.Body>\n                                <CardTitle\n                                    containerClass=\"d-flex align-items-center justify-content-between\"\n                                    title={\n                                        <>\n                                            <div className=\"flex-shrink-0 me-3\">\n                                                <div className=\"avatar-sm\">\n                                                    <span\n                                                        className={classNames(\n                                                            'avatar-title',\n                                                            'bg-' + statistics.variant + '-lighten',\n                                                            'text-' + statistics.variant,\n                                                            'rounded'\n                                                        )}>\n                                                        <i className={classNames(statistics.icon, 'font-24')}></i>\n                                                    </span>\n                                                </div>\n                                            </div>\n                                            <div className=\"flex-grow-1\">\n                                                <h5 className=\"mt-0 mb-1\">{statistics.title}</h5>\n                                                <p className=\"mb-0\">{statistics.noOfProject}</p>\n                                            </div>\n                                        </>\n                                    }\n                                    menuItems={[\n                                        { label: 'Today' },\n                                        { label: 'Yesterday' },\n                                        { label: 'Last Week' },\n                                        { label: 'Last Month' },\n                                    ]}\n                                />\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                );\n            })}\n        </>\n    );\n};\n\nexport default Statistics;\n","// @flow\nimport React from 'react';\nimport { Card, Col, Row } from 'react-bootstrap';\nimport Chart from 'react-apexcharts';\n\nconst MonthlyTarget = (): React$Element<any> => {\n    const apexDonutOpts = {\n        chart: {\n            height: 220,\n            type: 'pie',\n        },\n        // labels: ['Done Projects', 'Pending Projects'],\n        colors: ['#727cf5', '#0acf97'],\n        legend: {\n            show: false,\n        },\n        responsive: [\n            {\n                breakpoint: 480,\n                options: {\n                    chart: {\n                        height: 200,\n                    },\n                    legend: {\n                        show: false,\n                    },\n                },\n            },\n        ],\n    };\n\n    // chart data\n    const apexDonutData = [40, 60];\n\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">Monthly Target</h4>\n                <Chart\n                    options={apexDonutOpts}\n                    series={apexDonutData}\n                    type=\"donut\"\n                    height={255}\n                    className=\"apex-charts my-4\"\n                />\n                <Row>\n                    <Col xs={6}>\n                        <div className=\"text-center\">\n                            <h5>Target</h5>\n                            <p className=\"fw-semibold text-muted mb-0\">\n                                <i className=\"mdi mdi-circle text-primary\"></i> Projects\n                            </p>\n                        </div>\n                    </Col>\n                    <Col xs={6}>\n                        <div className=\"text-center\">\n                            <h5>Done</h5>\n                            <p className=\"fw-semibold text-muted mb-0\">\n                                <i className=\"mdi mdi-circle text-success\"></i> Projects\n                            </p>\n                        </div>\n                    </Col>\n                </Row>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default MonthlyTarget;\n","// @flow\nimport React from 'react';\nimport { Card } from 'react-bootstrap';\nimport Chart from 'react-apexcharts';\n\n// component\nimport CardTitle from '../../../../components/CardTitle';\n\nconst ProjectStatistics = (): React$Element<any> => {\n    const apexOpts = {\n        chart: {\n            height: 327,\n            type: 'bar',\n            toolbar: {\n                show: false,\n            },\n        },\n        plotOptions: {\n            bar: {\n                horizontal: false,\n                endingShape: 'rounded',\n                columnWidth: '25%',\n            },\n        },\n        dataLabels: {\n            enabled: false,\n        },\n        stroke: {\n            show: true,\n            width: 3,\n            colors: ['transparent'],\n        },\n        colors: ['#ced1ff', '#727cf5'],\n        xaxis: {\n            categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct'],\n        },\n        legend: {\n            offsetY: 7,\n        },\n        yaxis: {\n            title: {\n                text: '$ (thousands)',\n            },\n        },\n        fill: {\n            opacity: 1,\n        },\n        grid: {\n            row: {\n                colors: ['transparent', 'transparent'], // takes an array which will be repeated on columns\n                opacity: 0.2,\n            },\n            borderColor: '#f1f3fa',\n            padding: {\n                bottom: 5,\n            },\n        },\n        tooltip: {\n            y: {\n                formatter: function (val) {\n                    return '$ ' + val + 'K';\n                },\n            },\n        },\n    };\n\n    // chart data\n    const apexData = [\n        {\n            name: 'Previous Week Sale',\n            data: [44, 55, 57, 56, 61, 58, 63, 60, 66],\n        },\n        {\n            name: 'This Week Sale',\n            data: [76, 85, 101, 98, 87, 105, 91, 114, 94],\n        },\n    ];\n\n    return (\n        <Card>\n            <Card.Body>\n                <CardTitle\n                    containerClass=\"d-flex align-items-center justify-content-between\"\n                    title=\"Project Statistics\"\n                    menuItems={[{ label: 'Refresh Report' }, { label: 'Export Report' }]}\n                />\n                <div style={{ height: '327px' }} className=\"mt-3 chartjs-chart\">\n                    <Chart options={apexOpts} series={apexData} type=\"bar\" height={327} className=\"apex-charts\" />\n                </div>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default ProjectStatistics;\n","// @flow\nimport React from 'react';\nimport { Card, Col, Row } from 'react-bootstrap';\nimport Chart from 'react-apexcharts';\n\n// component\nimport CardTitle from '../../../../components/CardTitle';\n\nconst ProjectOverview = (): React$Element<any> => {\n    const apexDonutOpts = {\n        grid: {\n            padding: {\n                left: 0,\n                right: 0,\n                top: 15,\n                bottom: 15,\n            },\n        },\n        chart: {\n            height: 278,\n            type: 'radialBar',\n            parentHeightOffset: 0,\n            toolbar: {\n                show: false,\n            },\n        },\n        plotOptions: {\n            radialBar: {\n                dataLabels: {\n                    name: {\n                        fontSize: '22px',\n                    },\n                    value: {\n                        fontSize: '16px',\n                    },\n                    total: {\n                        show: true,\n                        label: 'OS',\n                        formatter: function (w) {\n                            // By default this function returns the average of all series. The below is just an example to show the use of custom formatter function\n                            return 8541;\n                        },\n                    },\n                },\n            },\n        },\n        colors: ['#727cf5', '#0acf97', '#fa5c7c', '#ffbc00'],\n        labels: ['Product Design', 'Web Development', 'Illustration Design', 'UI/UX Design'],\n    };\n\n    // chart data\n    const apexDonutData = [85, 70, 80, 65];\n\n    return (\n        <Card>\n            <Card.Body>\n                <CardTitle\n                    containerClass=\"d-flex align-items-center justify-content-between\"\n                    title=\"Project Overview\"\n                    menuItems={[\n                        { label: 'Today' },\n                        { label: 'Yesterday' },\n                        { label: 'Last Week' },\n                        { label: 'Last Month' },\n                    ]}\n                />\n                <Row className=\"align-items-center mt-2\">\n                    <Col md={6} className=\"order-2 order-md-1\">\n                        <div className=\"d-flex align-items-center mb-3\">\n                            <div className=\"flex-shrink-0\">\n                                <i className=\"mdi mdi-checkbox-blank-circle widget-icon rounded-circle bg-primary-lighten text-primary\"></i>\n                            </div>\n                            <div className=\"flex-grow-1 ms-3\">\n                                <h5 className=\"fw-semibold mt-0 mb-1\">Product Design</h5>\n                                <ul className=\"list-inline mb-0 text-muted\">\n                                    <li className=\"list-inline-item\">\n                                        <b>26</b> Total Projects\n                                    </li>\n                                    <li className=\"list-inline-item\">\n                                        <i className=\"mdi mdi-circle-small\"></i>\n                                    </li>\n                                    <li className=\"list-inline-item\">\n                                        <b>4</b> Employees\n                                    </li>\n                                </ul>\n                            </div>\n                        </div>\n                        <div className=\"d-flex align-items-center mb-3\">\n                            <div className=\"flex-shrink-0\">\n                                <i className=\"mdi mdi-checkbox-blank-circle widget-icon rounded-circle bg-danger-lighten text-danger\"></i>\n                            </div>\n                            <div className=\"flex-grow-1 ms-3\">\n                                <h5 className=\"fw-semibold mt-0 mb-1\">Web Development</h5>\n                                <ul className=\"list-inline mb-0 text-muted\">\n                                    <li className=\"list-inline-item\">\n                                        <b>30</b> Total Projects\n                                    </li>\n                                    <li className=\"list-inline-item\">\n                                        <i className=\"mdi mdi-circle-small\"></i>\n                                    </li>\n                                    <li className=\"list-inline-item\">\n                                        <b>5</b> Employees\n                                    </li>\n                                </ul>\n                            </div>\n                        </div>\n                        <div className=\"d-flex align-items-center mb-3\">\n                            <div className=\"flex-shrink-0\">\n                                <i className=\"mdi mdi-checkbox-blank-circle widget-icon rounded-circle bg-success-lighten text-success\"></i>\n                            </div>\n                            <div className=\"flex-grow-1 ms-3\">\n                                <h5 className=\"fw-semibold mt-0 mb-1\">Illustration Design</h5>\n                                <ul className=\"list-inline mb-0 text-muted\">\n                                    <li className=\"list-inline-item\">\n                                        <b>12</b> Total Projects\n                                    </li>\n                                    <li className=\"list-inline-item\">\n                                        <i className=\"mdi mdi-circle-small\"></i>\n                                    </li>\n                                    <li className=\"list-inline-item\">\n                                        <b>3</b> Employees\n                                    </li>\n                                </ul>\n                            </div>\n                        </div>\n                        <div className=\"d-flex align-items-center\">\n                            <div className=\"flex-shrink-0\">\n                                <i className=\"mdi mdi-checkbox-blank-circle widget-icon rounded-circle bg-warning-lighten text-warning\"></i>\n                            </div>\n                            <div className=\"flex-grow-1 ms-3\">\n                                <h5 className=\"fw-semibold mt-0 mb-1\">UI/UX Design</h5>\n                                <ul className=\"list-inline mb-0 text-muted\">\n                                    <li className=\"list-inline-item\">\n                                        <b>8</b> Total Projects\n                                    </li>\n                                    <li className=\"list-inline-item\">\n                                        <i className=\"mdi mdi-circle-small\"></i>\n                                    </li>\n                                    <li className=\"list-inline-item\">\n                                        <b>4</b> Employees\n                                    </li>\n                                </ul>\n                            </div>\n                        </div>\n                    </Col>\n                    <Col md={6} className=\"order-1 order-md-2\">\n                        <Chart\n                            options={apexDonutOpts}\n                            series={apexDonutData}\n                            type=\"radialBar\"\n                            height={327}\n                            className=\"apex-charts\"\n                        />\n                    </Col>\n                </Row>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default ProjectOverview;\n","// @flow\nimport React from 'react';\nimport { Card } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport SimpleBar from 'simplebar-react';\n\n// component\nimport { FormInput } from '../../../../components';\n\ntype DailyTaskItems = {\n    title: string,\n    shortDesc: string,\n    time: string,\n    assignPeople: string,\n};\n\ntype DailyTaskProps = {\n    taskData: Array<DailyTaskItems>,\n};\n\nconst DailyTask = ({ taskData }: DailyTaskProps): React$Element<React$FragmentType> => {\n    return (\n        <Card>\n            <Card.Body className=\"pb-0\">\n                <div className=\"d-flex justify-content-between align-items-center mb-3\">\n                    <h4 className=\"header-title\">Daily Task</h4>\n                    <FormInput name=\"select\" type=\"select\" className=\"form-select form-select-sm\" key=\"select\">\n                        <option>Today</option>\n                        <option>Yesterday</option>\n                        <option>Tomorrow</option>\n                    </FormInput>\n                </div>\n            </Card.Body>\n            <SimpleBar className=\"card-body py-0\" style={{ maxHeight: '319px' }}>\n                {(taskData || []).map((task, i) => {\n                    return (\n                        <div className=\"border rounded p-2 mb-2\" key={i}>\n                            <ul className=\"list-inline mb-2\">\n                                <li className=\"list-inline-item font-16 fw-semibold\">\n                                    <Link to=\"#\" className=\"text-secondary\">\n                                        {task.title}\n                                    </Link>\n                                </li>\n                                <li className=\"list-inline-item text-muted\">\n                                    <i className=\"mdi mdi-circle-small\"></i>\n                                </li>\n                                <li className=\"list-inline-item font-13 fw-semibold text-muted\">{task.time}</li>\n                            </ul>\n                            <p className=\"text-muted mb-0\">{task.shortDesc}</p>\n                            <p className=\"text-muted mb-0\">\n                                <i className=\"mdi mdi-account-group me-1\"></i>\n                                <b>{task.assignPeople}</b>People\n                            </p>\n                        </div>\n                    );\n                })}\n                <div className=\"text-center\">\n                    <i className=\"mdi mdi-dots-circle mdi-spin font-20 text-muted\"></i>\n                </div>\n            </SimpleBar>\n        </Card>\n    );\n};\n\nexport default DailyTask;\n","// @flow\nimport classNames from 'classnames';\nimport React from 'react';\nimport { Card } from 'react-bootstrap';\nimport SimpleBar from 'simplebar-react';\n\n// component\nimport { FormInput } from '../../../../components';\n\ntype TeamMembersItems = {\n    avatar: string,\n    name: string,\n    designation: string,\n    experience: string,\n};\n\ntype TeamMembersProps = {\n    members: Array<TeamMembersItems>,\n};\n\nconst TeamMembers = ({ members }: TeamMembersProps): React$Element<React$FragmentType> => {\n    return (\n        <Card>\n            <Card.Body>\n                <div className=\"d-flex justify-content-between align-items-center mb-2\">\n                    <h4 className=\"header-title\">Team Members</h4>\n                    <FormInput name=\"select\" type=\"select\" className=\"form-select form-select-sm\" key=\"select\">\n                        <option>Active</option>\n                        <option>Offline</option>\n                    </FormInput>\n                </div>\n            </Card.Body>\n            <SimpleBar className=\"card-body py-0\" style={{ maxHeight: '308px' }}>\n                {(members || []).map((member, i) => {\n                    return (\n                        <div className={classNames('d-flex', 'align-items-start', i === 0 ? 'mt-0' : 'mt-3')} key={i}>\n                            <img className=\"me-3 rounded-circle\" src={member.avatar} width=\"40\" alt=\"\" />\n                            <div className=\"w-100 overflow-hidden\">\n                                <h5 className=\"mt-0 mb-1 fw-semibold\">{member.name}</h5>\n                                <ul className=\"list-inline mb-0 font-13\">\n                                    <li className=\"list-inline-item\">{member.designation}</li>\n                                    <li className=\"list-inline-item text-muted\">\n                                        <i className=\"mdi mdi-circle-small\"></i>\n                                    </li>\n                                    <li className=\"list-inline-item text-muted\">{member.experience} Experience</li>\n                                </ul>\n                            </div>\n                        </div>\n                    );\n                })}\n            </SimpleBar>\n        </Card>\n    );\n};\n\nexport default TeamMembers;\n","// images\nimport avatar1 from '../../../../assets/images/users/avatar-1.jpg';\nimport avatar2 from '../../../../assets/images/users/avatar-2.jpg';\nimport avatar3 from '../../../../assets/images/users/avatar-4.jpg';\nimport avatar4 from '../../../../assets/images/users/avatar-5.jpg';\nimport avatar5 from '../../../../assets/images/users/avatar-6.jpg';\nimport avatar6 from '../../../../assets/images/users/avatar-7.jpg';\n\nconst projectList = [\n    {\n        title: 'Project Dashboard',\n        task: 'New Task Assign',\n        created_on: '4 Hrs ago',\n        members: [avatar1, avatar2],\n    },\n    {\n        title: 'Admin Template',\n        task: 'New Task Assign',\n        created_on: '7 Hrs ago',\n        members: [avatar3, avatar4],\n    },\n    {\n        title: 'Client Project',\n        task: 'New Task Assign',\n        created_on: '1 Day ago',\n        members: [avatar5, avatar6],\n    },\n];\n\nconst statisticsData = [\n    {\n        icon: 'mdi mdi-file-document-edit',\n        variant: 'primary',\n        title: 'Active Project',\n        noOfProject: 85,\n    },\n    {\n        icon: 'mdi mdi-account-group',\n        variant: 'success',\n        title: 'Total Employees',\n        noOfProject: 32,\n    },\n    {\n        icon: 'mdi mdi-account-star',\n        variant: 'info',\n        title: 'Project Review',\n        noOfProject: 40,\n    },\n    {\n        icon: 'mdi mdi-folder-plus',\n        variant: 'warning',\n        title: 'New Project',\n        noOfProject: 25,\n    },\n];\n\nconst tasksData = [\n    {\n        title: 'Landing Page Design',\n        shortDesc: 'Create a new landing page (Saas Product)',\n        time: '2 Hrs ago',\n        assignPeople: 5,\n    },\n    {\n        title: 'Admin Dashboard',\n        shortDesc: 'Create a new Admin dashboard',\n        time: '3 Hrs ago',\n        assignPeople: 2,\n    },\n    {\n        title: 'Client Work',\n        shortDesc: 'Create a new Power Project (Sktech design)',\n        time: '5 Hrs ago',\n        assignPeople: 2,\n    },\n    {\n        title: 'UI/UX Design',\n        shortDesc: 'Create a new UI Kit in figma',\n        time: '6 Hrs ago',\n        assignPeople: 3,\n    },\n];\n\nconst members = [\n    {\n        avatar: avatar1,\n        name: 'Risa Pearson',\n        designation: 'UI/UX Designer',\n        experience: '2.5 Year',\n    },\n    {\n        avatar: avatar2,\n        name: 'Margaret D. Evans',\n        designation: 'PHP Developer',\n        experience: '2 Year',\n    },\n    {\n        avatar: avatar3,\n        name: 'Bryan J. Luellen',\n        designation: 'Front end Developer',\n        experience: '1 Year',\n    },\n    {\n        avatar: avatar4,\n        name: 'Kathryn S. Collier',\n        designation: 'UI/UX Designer',\n        experience: '3 Year',\n    },\n    {\n        avatar: avatar5,\n        name: 'Timothy Kauper',\n        designation: 'Backend Developer',\n        experience: '2 Year',\n    },\n    {\n        avatar: avatar6,\n        name: 'Zara Raws',\n        designation: 'Python Developer',\n        experience: '1 Year',\n    },\n];\nexport { projectList, statisticsData, tasksData, members };\n","// @flow\nimport React from 'react';\nimport { Row, Col } from 'react-bootstrap';\n\n// components\nimport PageTitle from '../../../../components/PageTitle';\n\nimport ProjectList from './ProjectList';\nimport ProjectSummary from './ProjectSummary';\nimport Statistics from './Statistics';\nimport MonthlyTarget from './MonthlyTarget';\nimport ProjectStatistics from './ProjectStatistics';\nimport ProjectOverview from './ProjectOverview';\nimport DailyTask from './DailyTask';\nimport TeamMembers from './TeamMembers';\n\n// data\nimport { members, projectList, statisticsData, tasksData } from './data';\n\nconst Projects = (): React$Element<React$FragmentType> => {\n    return (\n        <>\n            <PageTitle\n                breadCrumbItems={[\n                    { label: 'CRM', path: '/apps/crm/projects' },\n                    { label: 'Projects', path: '/apps/crm/projects', active: true },\n                ]}\n                title={'Projects'}\n            />\n\n            <Row>\n                <Col xxl={9}>\n                    <ProjectList projectList={projectList} />\n                    <Row>\n                        <Col xxl={3} md={4}>\n                            <MonthlyTarget />\n                        </Col>\n                        <Col xxl={9} md={8}>\n                            <ProjectStatistics />\n                        </Col>\n                    </Row>\n                </Col>\n\n                <Col xxl={3}>\n                    <ProjectSummary />\n                </Col>\n            </Row>\n\n            <Row>\n                <Statistics statisticsData={statisticsData} />\n            </Row>\n\n            <Row>\n                <Col xxl={6}>\n                    <ProjectOverview />\n                </Col>\n                <Col xxl={3} md={6}>\n                    <DailyTask taskData={tasksData} />\n                </Col>\n                <Col xxl={3} md={6}>\n                    <TeamMembers members={members} />\n                </Col>\n            </Row>\n        </>\n    );\n};\n\nexport default Projects;\n"],"names":["_ref","title","containerClass","icon","menuItems","_jsxs","className","classNames","children","_jsx","Dropdown","Toggle","as","Link","to","Menu","align","map","item","index","React","hasDivider","Divider","Item","variant","label","props","Row","Col","Breadcrumb","listProps","href","breadCrumbItems","active","path","defaultValues","resolver","onSubmit","formClass","methods","useForm","handleSubmit","register","control","errors","formState","noValidate","Array","isArray","child","name","type","_objectSpread","key","PasswordInput","placeholder","refCallback","_useState","useState","_useState2","_slicedToArray","showPassword","setShowPassword","_Fragment","InputGroup","Form","Control","id","ref","r","isInvalid","autoComplete","onClick","_ref2","labelClassName","otherProps","_objectWithoutProperties","_excluded","comp","Group","Label","Feedback","Select","Check","AddNew","show","handleClose","Modal","onHide","Header","closeButton","Title","Body","VerticalForm","FormInput","value","htmlFor","isMulti","options","classNamePrefix","rows","Footer","Button","projectList","setShow","project","sm","xl","Card","CardTitle","task","created_on","members","member","src","alt","toString","Alert","OverlayTrigger","placement","overlay","Tooltip","Badge","bg","ProgressBar","now","style","height","statisticsData","statistics","i","noOfProject","Chart","chart","colors","legend","responsive","breakpoint","series","xs","toolbar","plotOptions","bar","horizontal","endingShape","columnWidth","dataLabels","enabled","stroke","width","xaxis","categories","offsetY","yaxis","text","fill","opacity","grid","row","borderColor","padding","bottom","tooltip","y","formatter","val","data","md","left","right","top","parentHeightOffset","radialBar","fontSize","total","w","labels","taskData","SimpleBar","maxHeight","time","shortDesc","assignPeople","avatar","designation","experience","avatar1","avatar2","avatar3","avatar4","avatar5","avatar6","tasksData","PageTitle","xxl","ProjectList","MonthlyTarget","ProjectStatistics","ProjectSummary","Statistics","ProjectOverview","DailyTask","TeamMembers"],"sourceRoot":""}