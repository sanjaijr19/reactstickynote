{"version":3,"file":"static/js/2913.deea3fb4.chunk.js","mappings":"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","sources":["components/PageTitle.js","pages/apps/Projects/Gantt/data.js","pages/apps/Projects/Gantt/index.js"],"sourcesContent":["// @flow\nimport React from 'react';\nimport { Row, Col, Breadcrumb } from 'react-bootstrap';\n\ntype BreadcrumbItems = {\n    label: string,\n    path: string,\n    active?: boolean,\n};\n\ntype PageTitleProps = {\n    breadCrumbItems: Array<BreadcrumbItems>,\n    title: string,\n};\n\n/**\n * PageTitle\n */\nconst PageTitle = (props: PageTitleProps): React$Element<any> => {\n    return (\n        <Row>\n            <Col>\n                <div className=\"page-title-box\">\n                    <div className=\"page-title-right\">\n                        <Breadcrumb listProps={{ className: 'm-0' }}>\n                            <Breadcrumb.Item href=\"/\">Stickynote</Breadcrumb.Item>\n\n                            {props.breadCrumbItems.map((item, index) => {\n                                return item.active ? (\n                                    <Breadcrumb.Item active key={index}>\n                                        {item.label}\n                                    </Breadcrumb.Item>\n                                ) : (\n                                    <Breadcrumb.Item key={index} href={item.path}>\n                                        {item.label}\n                                    </Breadcrumb.Item>\n                                );\n                            })}\n                        </Breadcrumb>\n                    </div>\n                    <h4 className=\"page-title\">{props.title}</h4>\n                </div>\n            </Col>\n        </Row>\n    );\n};\n\nexport default PageTitle;\n","const tasks = [\n    {\n        id: '1',\n        name: 'Draft the new contract document for sales team',\n        start: '2019-07-16',\n        end: '2019-07-20',\n        progress: 55,\n    },\n    {\n        id: '2',\n        name: 'Find out the old contract documents',\n        start: '2019-07-19',\n        end: '2019-07-21',\n        progress: 85,\n        dependencies: '1',\n    },\n    {\n        id: '3',\n        name: 'Organize meeting with sales associates to understand need in detail',\n        start: '2019-07-21',\n        end: '2019-07-22',\n        progress: 80,\n        dependencies: '2',\n    },\n    {\n        id: '4',\n        name: 'iOS App home page',\n        start: '2019-07-15',\n        end: '2019-07-17',\n        progress: 80,\n    },\n    {\n        id: '5',\n        name: 'Write a release note',\n        start: '2019-07-18',\n        end: '2019-07-22',\n        progress: 65,\n        dependencies: '4',\n    },\n    {\n        id: '6',\n        name: 'Setup new sales project',\n        start: '2019-07-20',\n        end: '2019-07-31',\n        progress: 15,\n    },\n    {\n        id: '7',\n        name: 'Invite user to a project',\n        start: '2019-07-25',\n        end: '2019-07-26',\n        progress: 99,\n        dependencies: '6',\n    },\n    {\n        id: '8',\n        name: 'Coordinate with business development',\n        start: '2019-07-28',\n        end: '2019-07-30',\n        progress: 35,\n        dependencies: '7',\n    },\n    {\n        id: '9',\n        name: 'Kanban board design',\n        start: '2019-08-01',\n        end: '2019-08-03',\n        progress: 25,\n        dependencies: '8',\n    },\n    {\n        id: '10',\n        name: 'Enable analytics tracking',\n        start: '2019-08-05',\n        end: '2019-08-07',\n        progress: 60,\n        dependencies: '9',\n    },\n];\n\nconst projects = [\n    {\n        id: 'proj101',\n        name: 'Lunar',\n        status: 'On-Track',\n        icon: 'uil uil-moonset',\n    },\n    {\n        id: 'proj102',\n        name: 'Dark Moon',\n        status: 'On-Track',\n        icon: 'uil uil-moon-eclipse',\n    },\n    {\n        id: 'proj103',\n        name: 'Aurora',\n        status: 'Locked',\n        icon: 'uil uil-mountains',\n    },\n    {\n        id: 'proj104',\n        name: 'Blue Moon',\n        status: 'Locked',\n        icon: 'uil uil-moon',\n    },\n    {\n        id: 'proj105',\n        name: 'Casanova',\n        status: 'Delayed',\n        icon: 'uil uil-ship',\n    },\n    {\n        id: 'proj106',\n        name: 'Darwin',\n        status: 'On-Track',\n        icon: 'uil uil-subway-alt',\n    },\n    {\n        id: 'proj107',\n        name: 'Eagle',\n        status: 'Delayed',\n        icon: 'uil uil-gold',\n    },\n];\n\nexport { projects, tasks };\n","// @flow\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Row, Col, Card, Button, ButtonGroup } from 'react-bootstrap';\nimport classNames from 'classnames';\nimport SimpleBar from 'simplebar-react';\nimport Gantt from 'frappe-gantt/src/';\n\n// components\nimport PageTitle from '../../../../components/PageTitle';\n\n// dummy data\nimport { projects as projectsData, tasks as tasksData } from './data';\n\nconst Project = ({ project, onSelectProject, selectedProject }) => {\n    return (\n        <Link to=\"#\" className=\"text-body\" onClick={(e) => onSelectProject(project)}>\n            <div\n                className={classNames('d-flex', 'p-2', {\n                    'bg-light': selectedProject && selectedProject.id === project.id,\n                })}>\n                <div className=\"avatar-sm\">\n                    {project.status === 'On-Track' && (\n                        <span className=\"avatar-title bg-success-lighten rounded-circle text-success\">\n                            <i className={classNames(project.icon, 'font-24')}></i>\n                        </span>\n                    )}\n\n                    {project.status === 'Locked' && (\n                        <span className=\"avatar-title bg-warning-lighten rounded-circle text-warning\">\n                            <i className={classNames(project.icon, 'font-24')}></i>\n                        </span>\n                    )}\n\n                    {project.status === 'Delayed' && (\n                        <span className=\"avatar-title bg-danger-lighten rounded-circle text-danger\">\n                            <i className={classNames(project.icon, 'font-24')}></i>\n                        </span>\n                    )}\n                </div>\n                <div className=\"ms-2\">\n                    <h5 className=\"mt-0 mb-0\">\n                        {project.name}\n                        <span\n                            className={classNames('badge', 'ms-1', {\n                                'badge-success-lighten': project.status === 'On-Track',\n                                'badge-warning-lighten': project.status === 'Locked',\n                                'badge-danger-lighten': project.status === 'Delayed',\n                            })}>\n                            {project.status}\n                        </span>\n                    </h5>\n                    <p className=\"mt-1 mb-0 text-muted\">ID: {project.id}</p>\n                </div>\n            </div>\n        </Link>\n    );\n};\n\nconst ProjectGannt = (): React$Element<React$FragmentType> => {\n    const [projects] = useState([...projectsData]);\n    const [selectedProject, setSelectedProject] = useState(projectsData[1]);\n    const [mode, setMode] = useState('Week');\n    const [gantt, setGantt] = useState(null);\n\n    const modes = ['Quarter Day', 'Half Day', 'Day', 'Week', 'Month'];\n\n    useEffect(() => {\n        // create gantt\n        const gantt = new Gantt('#tasks-gantt', [...tasksData], {\n            view_modes: ['Quarter Day', 'Half Day', 'Day', 'Week', 'Month'],\n            bar_height: 20,\n            padding: 18,\n            view_mode: 'Week',\n            custom_popup_html(task) {\n                return (\n                    '<div class=\"popover fade show bs-popover-right gantt-task-details\" role=\"tooltip\">' +\n                    '<div class=\"arrow\"></div><div class=\"popover-body\">' +\n                    `<h5>${task.name}</h5><p class=\"mb-2\">Expected to finish by ${task.end}</p>` +\n                    '<div class=\"progress mb-2\" style=\"height: 10px;\">' +\n                    `<div class=\"progress-bar\" role=\"progressbar\" style=\"width: ${task.progress}%;\" aria-valuenow=\"${task.progress}\"` +\n                    ` aria-valuemin=\"0\" aria-valuemax=\"100\">${task.progress}%</div>` +\n                    '</div></div></div>'\n                );\n            },\n        });\n        setGantt(gantt);\n    }, []);\n\n    /**\n     * On mode change\n     * @param {*} mode\n     */\n    const changeMode = (mode) => {\n        setMode(mode);\n        if (gantt) {\n            gantt.change_view_mode(mode);\n        }\n    };\n\n    return (\n        <>\n            <PageTitle\n                breadCrumbItems={[\n                    { label: 'Projects', path: '/apps/projects' },\n                    { label: 'Gantt', path: '/apps/projects/gantt', active: true },\n                ]}\n                title={'Project Calendar'}\n            />\n\n            <Card>\n                <Card.Body>\n                    <Row>\n                        <Col xxl={3} lg={4}>\n                            <div className=\"pe-xl-3\">\n                                <h5 className=\"mt-0 mb-3\">Projects</h5>\n                                <div className=\"app-search\">\n                                    <form>\n                                        <div className=\"mb-2 position-relative\">\n                                            <input\n                                                type=\"text\"\n                                                className=\"form-control\"\n                                                placeholder=\"search by name...\"\n                                            />\n                                            <span className=\"mdi mdi-magnify search-icon\"></span>\n                                        </div>\n                                    </form>\n                                </div>\n\n                                <Row>\n                                    <Col>\n                                        <SimpleBar style={{ maxHeight: '535px', width: '100%' }}>\n                                            {projects.map((project, idx) => {\n                                                return (\n                                                    <Project\n                                                        project={project}\n                                                        key={idx}\n                                                        selectedProject={selectedProject}\n                                                        onSelectProject={(p) => setSelectedProject(p)}></Project>\n                                                );\n                                            })}\n                                        </SimpleBar>\n                                    </Col>\n                                </Row>\n                            </div>\n                        </Col>\n\n                        <Col xxl={9} lg={8} className=\"mt-4 mt-xl-0\">\n                            <div className=\"ps-xl-3\">\n                                <Row>\n                                    <Col className=\"col-auto\">\n                                        <Link to=\"#\" className=\"btn btn-success btn-sm mb-2\">\n                                            Add New Task\n                                        </Link>\n                                    </Col>\n                                    <Col className=\"text-sm-end\">\n                                        <ButtonGroup>\n                                            {modes.map((m, idx) => {\n                                                return (\n                                                    <Button\n                                                        variant=\"primary\"\n                                                        size={'sm'}\n                                                        key={idx}\n                                                        onClick={() => changeMode(m)}\n                                                        active={mode === m}>\n                                                        {m}\n                                                    </Button>\n                                                );\n                                            })}\n                                        </ButtonGroup>\n                                    </Col>\n                                </Row>\n                                <Row>\n                                    <Col className=\"mt-3\">\n                                        <svg id=\"tasks-gantt\"></svg>\n                                    </Col>\n                                </Row>\n                            </div>\n                        </Col>\n                    </Row>\n                </Card.Body>\n            </Card>\n        </>\n    );\n};\n\nexport default ProjectGannt;\n"],"names":["props","_jsx","Row","children","Col","_jsxs","className","Breadcrumb","listProps","Item","href","breadCrumbItems","map","item","index","active","label","path","title","tasks","id","name","start","end","progress","dependencies","projects","status","icon","Project","_ref","project","onSelectProject","selectedProject","Link","to","onClick","e","classNames","_useState","useState","_toConsumableArray","projectsData","_slicedToArray","_useState3","_useState4","setSelectedProject","_useState5","_useState6","mode","setMode","_useState7","_useState8","gantt","setGantt","useEffect","Gantt","tasksData","view_modes","bar_height","padding","view_mode","custom_popup_html","task","concat","_Fragment","PageTitle","Card","Body","xxl","lg","type","placeholder","SimpleBar","style","maxHeight","width","idx","p","ButtonGroup","m","Button","variant","size","change_view_mode","changeMode"],"sourceRoot":""}