{"version":3,"file":"static/js/3652.8c64574e.chunk.js","mappings":"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","sources":["pages/apps/Ecommerce/Orders.js"],"sourcesContent":["// @flow\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Row, Col, Card, Button } from 'react-bootstrap';\nimport classNames from 'classnames';\n\n// components\nimport PageTitle from '../../../components/PageTitle';\nimport Table from '../../../components/Table';\n\n// dummy data\nimport { orders } from './Data';\n\n/* order column render */\nconst OrderColumn = ({ row }) => {\n    return (\n        <>\n            <Link to=\"#\" className=\"text-body fw-bold\">\n                #BM{row.original.order_id}\n            </Link>\n        </>\n    );\n};\n\n/* orderdate column render */\nconst OrderDateColumn = ({ row }) => {\n    return (\n        <>\n            {row.original.order_date} <small className=\"text-muted\">{row.original.order_time}</small>\n        </>\n    );\n};\n\n/* payment column render */\nconst PaymentStatusColumn = ({ row }) => {\n    return (\n        <>\n            <h5>\n                <span\n                    className={classNames('badge', {\n                        'badge-success-lighten': row.original.payment_status === 'Paid',\n                        'badge-danger-lighten': row.original.payment_status === 'Payment Failed',\n                        'badge-info-lighten': row.original.payment_status === 'Unpaid',\n                        'badge-warning-lighten': row.original.payment_status === 'Awaiting Authorization',\n                    })}>\n                    {row.original.payment_status === 'Paid' && <i className=\"mdi mdi-coin me-1\"></i>}\n                    {row.original.payment_status === 'Payment Failed' && <i className=\"mdi mdi-cancel me-1\"></i>}\n                    {row.original.payment_status === 'Unpaid' && <i className=\"mdi mdi-cash me-1\"></i>}\n                    {row.original.payment_status === 'Awaiting Authorization' && (\n                        <i className=\"mdi mdi-timer-sand me-1\"></i>\n                    )}\n                    {row.original.payment_status}\n                </span>\n            </h5>\n        </>\n    );\n};\n\n/* status column render */\nconst StatusColumn = ({ row }) => {\n    return (\n        <>\n            <h5>\n                <span\n                    className={classNames('badge', {\n                        'badge-success-lighten': row.original.order_status === 'Delivered',\n                        'badge-danger-lighten': row.original.order_status === 'Cancelled',\n                        'badge-info-lighten': row.original.order_status === 'Shipped',\n                        'badge-warning-lighten': row.original.order_status === 'Processing',\n                    })}>\n                    {row.original.order_status}\n                </span>\n            </h5>\n        </>\n    );\n};\n\n/* action column render */\nconst ActionColumn = ({ row }) => {\n    return (\n        <>\n            <Link to=\"#\" className=\"action-icon\">\n                {' '}\n                <i className=\"mdi mdi-eye\"></i>\n            </Link>\n            <Link to=\"#\" className=\"action-icon\">\n                {' '}\n                <i className=\"mdi mdi-square-edit-outline\"></i>\n            </Link>\n            <Link to=\"#\" className=\"action-icon\">\n                {' '}\n                <i className=\"mdi mdi-delete\"></i>\n            </Link>\n        </>\n    );\n};\n\n// get all columns\nconst columns = [\n    {\n        Header: 'Order ID',\n        accessor: 'order_id',\n        sort: true,\n        Cell: OrderColumn,\n    },\n    {\n        Header: 'Date',\n        accessor: 'order_date',\n        sort: false,\n        Cell: OrderDateColumn,\n    },\n    {\n        Header: 'Payment Status',\n        accessor: 'payment_status',\n        sort: false,\n        Cell: PaymentStatusColumn,\n    },\n    {\n        Header: 'Total',\n        accessor: 'total',\n        sort: false,\n    },\n    {\n        Header: 'Payment Method',\n        accessor: 'payment_method',\n        sort: false,\n    },\n    {\n        Header: 'Status',\n        accessor: 'order_status',\n        sort: false,\n        Cell: StatusColumn,\n    },\n    {\n        Header: 'Action',\n        accessor: 'action',\n        sort: false,\n        classes: 'table-action',\n        Cell: ActionColumn,\n    },\n];\n\n// get pagelist to display\nconst sizePerPageList = [\n    {\n        text: '10',\n        value: 10,\n    },\n    {\n        text: '20',\n        value: 20,\n    },\n    {\n        text: '50',\n        value: 50,\n    },\n];\n\n// main component\nconst Orders = (): React$Element<React$FragmentType> => {\n    const [orderList, setOrderList] = useState(orders);\n\n    // change order status group\n    const changeOrderStatusGroup = (OrderStatusGroup) => {\n        let updatedData = orders;\n        //  filter\n        updatedData =\n            OrderStatusGroup === 'All'\n                ? orders\n                : [...orders].filter((o) => o.payment_status?.includes(OrderStatusGroup));\n        setOrderList(updatedData);\n    };\n\n    return (\n        <>\n            <PageTitle\n                breadCrumbItems={[\n                    { label: 'eCommerce', path: '/apps/ecommerce/orders' },\n                    { label: 'Orders', path: '/apps/ecommerce/orders', active: true },\n                ]}\n                title={'Orders'}\n            />\n\n            <Row>\n                <Col xs={12}>\n                    <Card>\n                        <Card.Body>\n                            <Row className=\"mb-2\">\n                                <Col xl={8}>\n                                    <form className=\"row gy-2 gx-2 align-items-center justify-content-xl-start justify-content-between\">\n                                        <div className=\"col-auto\">\n                                            <div className=\"d-flex align-items-center w-auto\">\n                                                <label htmlFor=\"status-select\" className=\"me-2\">\n                                                    Status\n                                                </label>\n                                                <select\n                                                    className=\"form-select\"\n                                                    id=\"status-select\"\n                                                    onChange={(e) => changeOrderStatusGroup(e.target.value)}>\n                                                    <option value=\"All\">All</option>\n                                                    <option value=\"Paid\">Paid</option>\n                                                    <option value=\"Authorization\">Awaiting Authorization</option>\n                                                    <option value=\"Failed\">Payment failed</option>\n                                                    <option value=\"Unpaid\">Unpaid</option>\n                                                </select>\n                                            </div>\n                                        </div>\n                                    </form>\n                                </Col>\n\n                                <Col xl={4}>\n                                    <div className=\"text-lg-end mt-xl-0 mt-2\">\n                                        <Button variant=\"danger\" className=\"mb-2 me-2\">\n                                            <i className=\"mdi mdi-basket me-1\"></i> Add New Order\n                                        </Button>\n                                        <Button variant=\"light\" className=\"mb-2\">\n                                            Export\n                                        </Button>\n                                    </div>\n                                </Col>\n                            </Row>\n\n                            <Table\n                                columns={columns}\n                                data={orderList}\n                                pageSize={10}\n                                sizePerPageList={sizePerPageList}\n                                isSortable={true}\n                                pagination={true}\n                                isSelectable={true}\n                                isSearchable={true}\n                                theadClass=\"table-light\"\n                                searchBoxClass=\"mb-2\"\n                            />\n                        </Card.Body>\n                    </Card>\n                </Col>\n            </Row>\n        </>\n    );\n};\n\nexport default Orders;\n"],"names":["columns","Header","accessor","sort","Cell","_ref","row","_jsx","_Fragment","children","_jsxs","Link","to","className","original","order_id","_ref2","order_date","order_time","_ref3","classNames","payment_status","_ref4","order_status","classes","_ref5","sizePerPageList","text","value","_useState","useState","orders","_useState2","_slicedToArray","orderList","setOrderList","PageTitle","breadCrumbItems","label","path","active","title","Row","Col","xs","Card","Body","xl","htmlFor","id","onChange","e","OrderStatusGroup","updatedData","_toConsumableArray","filter","o","_o$payment_status","includes","changeOrderStatusGroup","target","Button","variant","Table","data","pageSize","isSortable","pagination","isSelectable","isSearchable","theadClass","searchBoxClass"],"sourceRoot":""}