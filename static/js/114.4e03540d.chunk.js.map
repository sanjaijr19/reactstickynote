{"version":3,"file":"static/js/114.4e03540d.chunk.js","mappings":"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","sources":["components/CardTitle.js","pages/apps/Tasks/List/Section.js","pages/apps/Tasks/List/Task.js","pages/apps/Tasks/List/Data.js","pages/apps/Tasks/List/index.js"],"sourcesContent":["// @flow\nimport React from 'react';\nimport { Dropdown } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\n\ntype MenuItem = {\n    label: string,\n    icon?: string,\n    variant?: string,\n    hasDivider?: boolean,\n};\n\ntype CardTitleProps = {\n    menuItems: Array<MenuItem>,\n    title: string | React$Node,\n    containerClass: string,\n    icon?: string,\n};\n\nconst CardTitle = ({ title, containerClass, icon, menuItems }: CardTitleProps): React$Element<any> => {\n    return (\n        <div className={classNames(containerClass)}>\n            {typeof title === 'string' ? <h4 className=\"header-title\">{title}</h4> : title}\n            <Dropdown>\n                <Dropdown.Toggle as={Link} to=\"#\" className=\"arrow-none card-drop\">\n                    <i className={classNames(icon ? icon : 'mdi mdi-dots-vertical')} />\n                </Dropdown.Toggle>\n                <Dropdown.Menu align=\"end\">\n                    {(menuItems || []).map((item, index) => {\n                        return (\n                            <React.Fragment key={index}>\n                                {item.hasDivider && <Dropdown.Divider as=\"div\" />}\n                                <Dropdown.Item className={classNames(item.variant ? item.variant : '')}>\n                                    {item.icon && <i className={classNames(item.icon, 'me-1')}></i>}\n                                    {item.label}\n                                </Dropdown.Item>\n                            </React.Fragment>\n                        );\n                    })}\n                </Dropdown.Menu>\n            </Dropdown>\n        </div>\n    );\n};\n\nexport default CardTitle;\n","// @flow\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Row, Col, Card, Collapse, OverlayTrigger, Tooltip } from 'react-bootstrap';\nimport classNames from 'classnames';\n\nconst Task = (props) => {\n    const { task, selectTask }: any = props;\n\n    const [completed, setCompleted] = useState(task.stage === 'Done');\n\n    /*\n     * mark completd on selected task\n     */\n    const markCompleted = (e) => {\n        setCompleted(e.target.checked);\n        selectTask(task);\n    };\n\n    return (\n        <Row className=\"justify-content-sm-between mt-2\">\n            <Col sm={6} className=\"mb-2 mb-sm-0\">\n                <div className=\"form-check\">\n                    <input\n                        type=\"checkbox\"\n                        className=\"form-check-input\"\n                        id={`task-${task.id}`}\n                        checked={completed}\n                        onChange={markCompleted}\n                    />\n                    <label className=\"form-check-label\" htmlFor={`task-${task.id}`} onClick={() => selectTask(task)}>\n                        {task.title}\n                    </label>\n                </div>\n            </Col>\n            <Col sm={6}>\n                <div className=\"d-flex justify-content-between\">\n                    <div>\n                        <OverlayTrigger placement=\"right\" overlay={<Tooltip>Assigned to {task.assigned_to}</Tooltip>}>\n                            <img\n                                src={task.assignee_avatar}\n                                alt=\"\"\n                                className=\"avatar-xs rounded-circle me-1\"\n                                id={`task-avatar-${task.id}`}\n                            />\n                        </OverlayTrigger>\n                    </div>\n                    <div>\n                        <ul className=\"list-inline font-13 text-end\">\n                            <li className=\"list-inline-item\">\n                                <i className=\"uil uil-schedule font-16 me-1\"></i> {task.due_date}\n                            </li>\n                            <li className=\"list-inline-item ms-1\">\n                                <i className=\"uil uil-align-alt font-16 me-1\"></i>{' '}\n                                {task.checklists.filter((t) => t.completed).length} / {task.checklists.length}\n                            </li>\n                            <li className=\"list-inline-item ms-1\">\n                                <i className=\"uil uil-comment-message font-16 me-1\"></i> {task.comments.length}\n                            </li>\n                            <li className=\"list-inline-item ms-2\">\n                                <span\n                                    className={classNames(\n                                        'badge',\n                                        {\n                                            'badge-danger-lighten': task.priority === 'High',\n                                            'badge-info-lighten': task.priority === 'Medium',\n                                            'badge-success-lighten': task.priority === 'Low',\n                                        },\n                                        'p-1'\n                                    )}>\n                                    {task.priority}\n                                </span>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            </Col>\n        </Row>\n    );\n};\n\ntype ChecklistsItems = {\n    id: number,\n    title: string,\n    completed: boolean,\n};\n\ntype AttachmentsItems = {\n    id: number,\n    filename: string,\n    size: string,\n};\n\ntype CommentsItems = {\n    id: number,\n    author: string,\n    text: string,\n    posted_on: string,\n    author_avatar: string,\n};\n\ntype TaskItems = {\n    id: number,\n    title: string,\n    assigned_to: string,\n    assignee_avatar: string,\n    due_date: string,\n    completed: boolean,\n    priority: string,\n    stage: string,\n    checklists: Array<ChecklistsItems>,\n    description: string,\n    attachments: Array<AttachmentsItems>,\n    comments: Array<CommentsItems>,\n};\n\ntype TaskSectionState = {\n    title: string,\n    tasks: Array<TaskItems>,\n    selectTask: any,\n};\n\nconst TaskSection = ({ title, tasks, selectTask }: TaskSectionState): React$Element<React$FragmentType> => {\n    const [collapse, setCollapse] = useState(true);\n    const [taskList] = useState(tasks);\n\n    /*\n     * toggle task-dropdown\n     */\n    const toggleTask = () => setCollapse(!collapse);\n\n    return (\n        <>\n            <h5 className=\"m-0 pb-2\">\n                <Link className=\"text-dark\" to=\"#\" onClick={toggleTask}>\n                    <i\n                        className={classNames(\n                            'uil',\n                            { 'uil-angle-down': collapse, 'uil-angle-right': !collapse },\n                            'font-18'\n                        )}></i>\n                    {title} <span className=\"text-muted\">({taskList.length})</span>\n                </Link>\n            </h5>\n            <Collapse in={collapse}>\n                <Card className=\"mb-0\">\n                    <Card.Body className=\"pb-1 pt-2\">\n                        {taskList.map((task, idx) => (\n                            <Task selectTask={selectTask} task={task} key={idx} />\n                        ))}\n                    </Card.Body>\n                </Card>\n            </Collapse>\n        </>\n    );\n};\n\nexport default TaskSection;\n","// @flow\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Row, Col, Card, OverlayTrigger, Tooltip } from 'react-bootstrap';\nimport classNames from 'classnames';\n\n// component\nimport CardTitle from '../../../../components/CardTitle';\n\n// Form Editor\nimport { EditorState, ContentState } from 'draft-js';\nimport htmlToDraft from 'html-to-draftjs';\nimport { Editor } from 'react-draft-wysiwyg';\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\n\ntype ChecklistsItems = {\n    id: number,\n    title: string,\n    completed: boolean,\n};\n\ntype AttachmentsItems = {\n    id: number,\n    filename: string,\n    size: string,\n};\n\ntype CommentsItems = {\n    id: number,\n    author: string,\n    text: string,\n    posted_on: string,\n    author_avatar: string,\n};\n\ntype TaskProps = {\n    id: number,\n    title: string,\n    assigned_to: string,\n    assignee_avatar: string,\n    due_date: string,\n    completed: boolean,\n    priority: string,\n    stage: string,\n    checklists: Array<ChecklistsItems>,\n    description: string,\n    attachments: Array<AttachmentsItems>,\n    comments: Array<CommentsItems>,\n};\n\nconst Task = (task: TaskProps): React$Element<React$FragmentType> => {\n    const [completed, setCompleted] = useState(task.stage === 'Done');\n\n    const [editorState, setEditorState] = useState();\n\n    useEffect(() => {\n        const html = `<p class=\"m-0\">This is a task description with markup support</p> <ul> <li>Select a text to reveal the toolbar.</li> <li>Edit rich document on-the-fly, so elastic!</li> </ul> <p>End of air-mode area</p>`;\n        const contentBlock = htmlToDraft(html);\n        if (contentBlock) {\n            const contentState = ContentState.createFromBlockArray(contentBlock.contentBlocks);\n            setEditorState(EditorState.createWithContent(contentState));\n        }\n    }, []);\n\n    /**\n     * On editor body change\n     */\n    const onEditorStateChange = (editorStates) => {\n        setEditorState(editorStates);\n    };\n\n    /*\n     * mark completd on selected task\n     */\n    const markCompleted = (e) => setCompleted(e.target.checked);\n\n    return (\n        <React.Fragment>\n            <Card>\n                <Card.Body>\n                    <CardTitle\n                        containerClass=\"d-flex align-items-center justify-content-between\"\n                        title={\n                            <div className=\"form-check float-start\">\n                                <input\n                                    type=\"checkbox\"\n                                    className=\"form-check-input\"\n                                    id=\"completedCheck\"\n                                    checked={completed}\n                                    onChange={markCompleted}\n                                />\n                                <label className=\"form-check-label\" htmlFor=\"completedCheck\">\n                                    Mark as completed\n                                </label>\n                            </div>\n                        }\n                        icon=\"mdi mdi-dots-horizontal\"\n                        menuItems={[\n                            { label: 'Attachment', icon: 'uil uil-file-upload' },\n                            { label: 'Edit', icon: 'uil uil-edit' },\n                            { label: 'Mark as Duplicate', icon: 'uil uil-file-copy-alt' },\n                            {\n                                label: 'Delete',\n                                icon: 'uil uil-trash-alt',\n                                variant: 'text-danger',\n                                hasDivider: true,\n                            },\n                        ]}\n                    />\n\n                    <hr className=\"mt-1 mb-2\" />\n\n                    <Row>\n                        <Col>\n                            <h4>{task.title}</h4>\n\n                            <Row>\n                                <Col>\n                                    <p className=\"mt-2 mb-1 text-muted\">Assigned To</p>\n                                    <div className=\"d-flex\">\n                                        <img\n                                            src={task.assignee_avatar}\n                                            alt={task.assigned_to}\n                                            className=\"rounded-circle me-2\"\n                                            height=\"24\"\n                                        />\n                                        <div>\n                                            <h5 className=\"mt-1 font-14\">{task.assigned_to}</h5>\n                                        </div>\n                                    </div>\n                                </Col>\n\n                                <Col>\n                                    <p className=\"mt-2 mb-1 text-muted\">Due Date</p>\n                                    <div className=\"d-flex\">\n                                        <i className=\"uil uil-schedule font-18 text-success me-1\"></i>\n                                        <div>\n                                            <h5 className=\"mt-1 font-14\">{task.due_date}</h5>\n                                        </div>\n                                    </div>\n                                </Col>\n                            </Row>\n\n                            <Row className=\"mt-3\">\n                                <Col>\n                                    <Editor\n                                        toolbarHidden\n                                        toolbarClassName=\"draft-toolbar\"\n                                        wrapperClassName=\"react-draft-wrapper border px-2\"\n                                        editorStyle={{ minHeight: '150px' }}\n                                        editorState={editorState}\n                                        onEditorStateChange={onEditorStateChange}\n                                    />\n                                </Col>\n                            </Row>\n\n                            <h5 className=\"mt-4 mb-2 font-16\">Checklists/Sub-tasks</h5>\n\n                            {/* checklists */}\n                            {task.checklists.map((checklist, index) => (\n                                <div className=\"form-check mt-1\" key={index}>\n                                    <input\n                                        type=\"checkbox\"\n                                        className=\"form-check-input\"\n                                        id={`checklist-${checklist.id}`}\n                                        defaultChecked={checklist.completed}\n                                    />\n                                    <label\n                                        className={classNames('form-check-label', {\n                                            strikethrough: checklist.completed,\n                                        })}\n                                        htmlFor={`checklist-${checklist.id}`}>\n                                        {checklist.title}\n                                    </label>\n                                </div>\n                            ))}\n\n                            <h5 className=\"mt-4 mb-2 font-16\">Attachments</h5>\n\n                            {/* attachments */}\n                            {task.attachments.map((f, index) => {\n                                const ext = f.filename.substr(f.filename.lastIndexOf('.') + 1);\n                                return (\n                                    <Card key={index} className=\"mb-2 shadow-none border\">\n                                        <div className=\"p-1\">\n                                            <Row className=\"align-items-center\">\n                                                <Col className=\"col-auto\">\n                                                    <div className=\"avatar-sm\">\n                                                        <span className=\"avatar-title rounded\">.{ext}</span>\n                                                    </div>\n                                                </Col>\n                                                <Col className=\"ps-0\">\n                                                    <Link to=\"#\" className=\"text-muted fw-bold\">\n                                                        {f.filename}\n                                                    </Link>\n                                                    <p className=\"mb-0\">{f.size}</p>\n                                                </Col>\n                                                <Col className=\"col-auto\">\n                                                    <OverlayTrigger\n                                                        placement=\"left\"\n                                                        overlay={<Tooltip>Download</Tooltip>}>\n                                                        <Link\n                                                            to=\"#\"\n                                                            id=\"btn-download\"\n                                                            className=\"btn btn-link text-muted btn-lg p-0 me-1\">\n                                                            <i className=\"uil uil-cloud-download\"></i>\n                                                        </Link>\n                                                    </OverlayTrigger>\n                                                    <OverlayTrigger\n                                                        placement=\"left\"\n                                                        overlay={<Tooltip>Delete</Tooltip>}>\n                                                        <Link\n                                                            to=\"#\"\n                                                            id=\"btn-Delete\"\n                                                            className=\"btn btn-link text-danger btn-lg p-0\">\n                                                            <i className=\"uil uil-multiply\"></i>\n                                                        </Link>\n                                                    </OverlayTrigger>\n                                                </Col>\n                                            </Row>\n                                        </div>\n                                    </Card>\n                                );\n                            })}\n\n                            <div className=\"row mt-3\">\n                                <div className=\"col\">\n                                    <h5 className=\"mb-2 font-16\">Comments</h5>\n\n                                    {/* comments */}\n                                    {task.comments.map((comment, idx) => (\n                                        <React.Fragment key={idx}>\n                                            <div key={idx} className=\"d-flex mt-3 p-1\">\n                                                <img\n                                                    src={comment.author_avatar}\n                                                    className=\"me-2 rounded-circle\"\n                                                    height=\"36\"\n                                                    alt={comment.author}\n                                                />\n                                                <div className=\"w-100\">\n                                                    <h5 className=\"mt-0 mb-0\">\n                                                        <span className=\"float-end text-muted font-12\">\n                                                            {comment.posted_on}\n                                                        </span>\n                                                        {comment.author}\n                                                    </h5>\n                                                    <p className=\"mt-1 mb-0 text-muted\">{comment.text}</p>\n                                                </div>\n                                            </div>\n                                            <hr />\n                                        </React.Fragment>\n                                    ))}\n                                </div>\n                            </div>\n\n                            {/* add comments */}\n                            <Row className=\"mt-2\">\n                                <Col>\n                                    <div className=\"border rounded\">\n                                        <form action=\"#\" className=\"comment-area-box\">\n                                            <textarea\n                                                rows=\"3\"\n                                                className=\"form-control border-0 resize-none\"\n                                                placeholder=\"Your comment...\"></textarea>\n                                            <div className=\"p-2 bg-light\">\n                                                <div className=\"float-end\">\n                                                    <button type=\"submit\" className=\"btn btn-sm btn-success\">\n                                                        <i className=\"uil uil-message me-1\"></i>Submit\n                                                    </button>\n                                                </div>\n                                                <div>\n                                                    <Link to=\"#\" className=\"btn btn-sm px-1 btn-light\">\n                                                        <i className=\"uil uil-cloud-upload\"></i>\n                                                    </Link>\n                                                    <Link to=\"#\" className=\"btn btn-sm px-1 btn-light\">\n                                                        <i className=\"uil uil-at\"></i>\n                                                    </Link>\n                                                </div>\n                                            </div>\n                                        </form>\n                                    </div>\n                                </Col>\n                            </Row>\n                        </Col>\n                    </Row>\n                </Card.Body>\n            </Card>\n        </React.Fragment>\n    );\n};\n\nexport default Task;\n","// images\nimport avatarImg2 from '../../../../assets/images/users/avatar-9.jpg';\nimport avatarImg3 from '../../../../assets/images/users/avatar-3.jpg';\nimport avatarImg4 from '../../../../assets/images/users/avatar-4.jpg';\nimport avatarImg5 from '../../../../assets/images/users/avatar-5.jpg';\nimport avatarImg6 from '../../../../assets/images/users/avatar-6.jpg';\n\nconst todayTasks = [\n    {\n        id: 1,\n        title: 'Draft the new contract document for sales team',\n        assigned_to: 'Arya Stark',\n        assignee_avatar: avatarImg2,\n        due_date: 'Today 10am',\n        completed: false,\n        priority: 'High',\n        stage: 'Todo',\n        checklists: [\n            { id: 1, title: 'Find out the old contract documents', completed: true },\n            {\n                id: 2,\n                title: 'Organize meeting sales associates to understand need in detail',\n                completed: false,\n            },\n            {\n                id: 3,\n                title: 'Make sure to cover every small details',\n                completed: false,\n            },\n        ],\n        description:\n            // tslint:disable-next-line: max-line-length\n            '<p>This is a task description with markup support</p><ul><li>Select a text to reveal the toolbar.</li><li>Edit rich document on-the-fly, so elastic!</li></ul><p>End of air-mode area</p>',\n        attachments: [\n            { id: 1, filename: 'sales-assets.zip', size: '2.3 MB' },\n            { id: 2, filename: 'new-contarcts.docx', size: '1.3 MB' },\n        ],\n        comments: [\n            {\n                id: 1,\n                author: 'Arya Stark',\n                text: 'Should I review the last 3 years legal documents as well?',\n                posted_on: '4:30am',\n                author_avatar: avatarImg2,\n            },\n            {\n                id: 2,\n                author: 'Gary Somya',\n                text: '@Arya FYI..I have created some general guidelines last year.',\n                posted_on: '3:30am',\n                author_avatar: avatarImg3,\n            },\n        ],\n    },\n    {\n        id: 2,\n        title: 'iOS App home page',\n        assigned_to: 'James B',\n        assignee_avatar: avatarImg3,\n        due_date: 'Today 4pm',\n        completed: false,\n        stage: 'In-progress',\n        priority: 'High',\n        checklists: [\n            { id: 1, title: 'Find out the old contract documents', completed: false },\n            {\n                id: 2,\n                title: 'Organize meeting sales associates to understand need in detail',\n                completed: false,\n            },\n            {\n                id: 3,\n                title: 'Make sure to cover every small details',\n                completed: false,\n            },\n        ],\n        description:\n            // tslint:disable-next-line: max-line-length\n            '<p>This is a task description with markup support</p><ul><li>Select a text to reveal the toolbar.</li><li>Edit rich document on-the-fly, so elastic!</li></ul><p>End of air-mode area</p>',\n        attachments: [\n            { id: 1, filename: 'sales-assets.zip', size: '2.3 MB' },\n            { id: 2, filename: 'new-contarcts.docx', size: '1.3 MB' },\n        ],\n        comments: [\n            {\n                id: 1,\n                author: 'Arya Stark',\n                text: 'Should I review the last 3 years legal documents as well?',\n                posted_on: '4:30am',\n                author_avatar: avatarImg2,\n            },\n            {\n                id: 2,\n                author: 'Gary Somya',\n                text: '@Arya FYI..I have created some general guidelines last year.',\n                posted_on: '3:30am',\n                author_avatar: avatarImg3,\n            },\n        ],\n    },\n    {\n        id: 3,\n        title: 'Write a release note',\n        assigned_to: 'Kevin C',\n        assignee_avatar: avatarImg4,\n        due_date: 'Today 4pm',\n        completed: false,\n        stage: 'In-progress',\n        priority: 'Medium',\n        checklists: [\n            { id: 1, title: 'Find out the old contract documents', completed: false },\n            {\n                id: 2,\n                title: 'Organize meeting sales associates to understand need in detail',\n                completed: false,\n            },\n            {\n                id: 3,\n                title: 'Make sure to cover every small details',\n                completed: false,\n            },\n        ],\n        description:\n            // tslint:disable-next-line: max-line-length\n            '<p>This is a task description with markup support</p><ul><li>Select a text to reveal the toolbar.</li><li>Edit rich document on-the-fly, so elastic!</li></ul><p>End of air-mode area</p>',\n        attachments: [\n            { id: 1, filename: 'sales-assets.zip', size: '2.3 MB' },\n            { id: 2, filename: 'new-contarcts.docx', size: '1.3 MB' },\n        ],\n        comments: [\n            {\n                id: 1,\n                author: 'Arya Stark',\n                text: 'Should I review the last 3 years legal documents as well?',\n                posted_on: '4:30am',\n                author_avatar: avatarImg2,\n            },\n            {\n                id: 2,\n                author: 'Gary Somya',\n                text: '@Arya FYI..I have created some general guidelines last year.',\n                posted_on: '3:30am',\n                author_avatar: avatarImg3,\n            },\n        ],\n    },\n];\n\nconst upcomingTasks = [\n    {\n        id: 4,\n        title: 'Invite user to a project',\n        assigned_to: 'Arya Stark',\n        assignee_avatar: avatarImg2,\n        due_date: 'Tomorrow 10am',\n        stage: 'Todo',\n        completed: false,\n        priority: 'Low',\n        checklists: [\n            { id: 1, title: 'Find out the old contract documents', completed: false },\n            {\n                id: 2,\n                title: 'Organize meeting sales associates to understand need in detail',\n                completed: false,\n            },\n            {\n                id: 3,\n                title: 'Make sure to cover every small details',\n                completed: false,\n            },\n        ],\n        description:\n            // tslint:disable-next-line: max-line-length\n            '<p>This is a task description with markup support</p><ul><li>Select a text to reveal the toolbar.</li><li>Edit rich document on-the-fly, so elastic!</li></ul><p>End of air-mode area</p>',\n        attachments: [\n            { id: 1, filename: 'sales-assets.zip', size: '2.3 MB' },\n            { id: 2, filename: 'new-contarcts.docx', size: '1.3 MB' },\n        ],\n        comments: [\n            {\n                id: 1,\n                author: 'Arya Stark',\n                text: 'Should I review the last 3 years legal documents as well?',\n                posted_on: '4:30am',\n                author_avatar: avatarImg2,\n            },\n            {\n                id: 2,\n                author: 'Gary Somya',\n                text: '@Arya FYI..I have created some general guidelines last year.',\n                posted_on: '3:30am',\n                author_avatar: avatarImg3,\n            },\n        ],\n    },\n    {\n        id: 5,\n        title: 'Enable analytics tracking',\n        assigned_to: 'James B',\n        assignee_avatar: avatarImg5,\n        due_date: '27 Aug 10am',\n        completed: false,\n        stage: 'Review',\n        priority: 'Low',\n        checklists: [\n            { id: 1, title: 'Find out the old contract documents', completed: false },\n            {\n                id: 2,\n                title: 'Organize meeting sales associates to understand need in detail',\n                completed: false,\n            },\n            {\n                id: 3,\n                title: 'Make sure to cover every small details',\n                completed: false,\n            },\n        ],\n        description:\n            // tslint:disable-next-line: max-line-length\n            '<p>This is a task description with markup support</p><ul><li>Select a text to reveal the toolbar.</li><li>Edit rich document on-the-fly, so elastic!</li></ul><p>End of air-mode area</p>',\n        attachments: [\n            { id: 1, filename: 'sales-assets.zip', size: '2.3 MB' },\n            { id: 2, filename: 'new-contarcts.docx', size: '1.3 MB' },\n        ],\n        comments: [\n            {\n                id: 1,\n                author: 'Arya Stark',\n                text: 'Should I review the last 3 years legal documents as well?',\n                posted_on: '4:30am',\n                author_avatar: avatarImg2,\n            },\n            {\n                id: 2,\n                author: 'Gary Somya',\n                text: '@Arya FYI..I have created some general guidelines last year.',\n                posted_on: '3:30am',\n                author_avatar: avatarImg3,\n            },\n        ],\n    },\n    {\n        id: 6,\n        title: 'Code HTML email template',\n        assigned_to: 'Kevin C',\n        assignee_avatar: avatarImg6,\n        due_date: 'No Due Date',\n        completed: false,\n        stage: 'Review',\n        priority: 'Medium',\n        checklists: [\n            { id: 1, title: 'Find out the old contract documents', completed: false },\n            {\n                id: 2,\n                title: 'Organize meeting sales associates to understand need in detail',\n                completed: false,\n            },\n            {\n                id: 3,\n                title: 'Make sure to cover every small details',\n                completed: false,\n            },\n        ],\n        description:\n            // tslint:disable-next-line: max-line-length\n            '<p>This is a task description with markup support</p><ul><li>Select a text to reveal the toolbar.</li><li>Edit rich document on-the-fly, so elastic!</li></ul><p>End of air-mode area</p>',\n        attachments: [\n            { id: 1, filename: 'sales-assets.zip', size: '2.3 MB' },\n            { id: 2, filename: 'new-contarcts.docx', size: '1.3 MB' },\n        ],\n        comments: [\n            {\n                id: 1,\n                author: 'Arya Stark',\n                text: 'Should I review the last 3 years legal documents as well?',\n                posted_on: '4:30am',\n                author_avatar: avatarImg2,\n            },\n            {\n                id: 2,\n                author: 'Gary Somya',\n                text: '@Arya FYI..I have created some general guidelines last year.',\n                posted_on: '3:30am',\n                author_avatar: avatarImg3,\n            },\n        ],\n    },\n];\n\nconst otherTasks = [\n    {\n        id: 7,\n        title: 'Coordinate with business development',\n        assigned_to: 'Arya Stark',\n        assignee_avatar: avatarImg2,\n        due_date: 'No Due Date',\n        stage: 'Todo',\n        completed: false,\n        priority: 'High',\n        checklists: [\n            { id: 1, title: 'Find out the old contract documents', completed: false },\n            {\n                id: 2,\n                title: 'Organize meeting sales associates to understand need in detail',\n                completed: false,\n            },\n            {\n                id: 3,\n                title: 'Make sure to cover every small details',\n                completed: false,\n            },\n        ],\n        description:\n            // tslint:disable-next-line: max-line-length\n            '<p>This is a task description with markup support</p><ul><li>Select a text to reveal the toolbar.</li><li>Edit rich document on-the-fly, so elastic!</li></ul><p>End of air-mode area</p>',\n        attachments: [\n            { id: 1, filename: 'sales-assets.zip', size: '2.3 MB' },\n            { id: 2, filename: 'new-contarcts.docx', size: '1.3 MB' },\n        ],\n        comments: [\n            {\n                id: 1,\n                author: 'Arya Stark',\n                text: 'Should I review the last 3 years legal documents as well?',\n                posted_on: '4:30am',\n                author_avatar: avatarImg2,\n            },\n            {\n                id: 2,\n                author: 'Gary Somya',\n                text: '@Arya FYI..I have created some general guidelines last year.',\n                posted_on: '3:30am',\n                author_avatar: avatarImg3,\n            },\n        ],\n    },\n    {\n        id: 8,\n        title: 'Kanban board design',\n        assigned_to: 'James B',\n        assignee_avatar: avatarImg5,\n        stage: 'Review',\n        due_date: '30 Aug 10am',\n        completed: false,\n        priority: 'Low',\n        checklists: [\n            { id: 1, title: 'Find out the old contract documents', completed: false },\n            {\n                id: 2,\n                title: 'Organize meeting sales associates to understand need in detail',\n                completed: false,\n            },\n            {\n                id: 3,\n                title: 'Make sure to cover every small details',\n                completed: false,\n            },\n        ],\n        description:\n            // tslint:disable-next-line: max-line-length\n            '<p>This is a task description with markup support</p><ul><li>Select a text to reveal the toolbar.</li><li>Edit rich document on-the-fly, so elastic!</li></ul><p>End of air-mode area</p>',\n        attachments: [\n            { id: 1, filename: 'sales-assets.zip', size: '2.3 MB' },\n            { id: 2, filename: 'new-contarcts.docx', size: '1.3 MB' },\n        ],\n        comments: [\n            {\n                id: 1,\n                author: 'Arya Stark',\n                text: 'Should I review the last 3 years legal documents as well?',\n                posted_on: '4:30am',\n                author_avatar: avatarImg2,\n            },\n            {\n                id: 2,\n                author: 'Gary Somya',\n                text: '@Arya FYI..I have created some general guidelines last year.',\n                posted_on: '3:30am',\n                author_avatar: avatarImg3,\n            },\n        ],\n    },\n    {\n        id: 9,\n        title: 'Draft the new contract document for sales team',\n        assigned_to: 'Kevin C',\n        assignee_avatar: avatarImg6,\n        due_date: 'No Due Date',\n        stage: 'Done',\n        completed: false,\n        priority: 'Medium',\n        checklists: [\n            { id: 1, title: 'Find out the old contract documents', completed: false },\n            {\n                id: 2,\n                title: 'Organize meeting sales associates to understand need in detail',\n                completed: false,\n            },\n            {\n                id: 3,\n                title: 'Make sure to cover every small details',\n                completed: false,\n            },\n        ],\n        description:\n            // tslint:disable-next-line: max-line-length\n            '<p>This is a task description with markup support</p><ul><li>Select a text to reveal the toolbar.</li><li>Edit rich document on-the-fly, so elastic!</li></ul><p>End of air-mode area</p>',\n        attachments: [\n            { id: 1, filename: 'sales-assets.zip', size: '2.3 MB' },\n            { id: 2, filename: 'new-contarcts.docx', size: '1.3 MB' },\n        ],\n        comments: [\n            {\n                id: 1,\n                author: 'Arya Stark',\n                text: 'Should I review the last 3 years legal documents as well?',\n                posted_on: '4:30am',\n                author_avatar: avatarImg2,\n            },\n            {\n                id: 2,\n                author: 'Gary Somya',\n                text: '@Arya FYI..I have created some general guidelines last year.',\n                posted_on: '3:30am',\n                author_avatar: avatarImg3,\n            },\n        ],\n    },\n    {\n        id: 10,\n        title: 'Draft the new contract document for vendor Abc',\n        assigned_to: 'Kevin C',\n        assignee_avatar: avatarImg6,\n        due_date: '2 Sep 10am',\n        completed: false,\n        stage: 'Done',\n        priority: 'Medium',\n        checklists: [\n            { id: 1, title: 'Find out the old contract documents', completed: false },\n            {\n                id: 2,\n                title: 'Organize meeting sales associates to understand need in detail',\n                completed: false,\n            },\n            {\n                id: 3,\n                title: 'Make sure to cover every small details',\n                completed: false,\n            },\n        ],\n        description:\n            // tslint:disable-next-line: max-line-length\n            '<p>This is a task description with markup support</p><ul><li>Select a text to reveal the toolbar.</li><li>Edit rich document on-the-fly, so elastic!</li></ul><p>End of air-mode area</p>',\n        attachments: [\n            { id: 1, filename: 'sales-assets.zip', size: '2.3 MB' },\n            { id: 2, filename: 'new-contarcts.docx', size: '1.3 MB' },\n        ],\n        comments: [\n            {\n                id: 1,\n                author: 'Arya Stark',\n                text: 'Should I review the last 3 years legal documents as well?',\n                posted_on: '4:30am',\n                author_avatar: avatarImg2,\n            },\n            {\n                id: 2,\n                author: 'Gary Somya',\n                text: '@Arya FYI..I have created some general guidelines last year.',\n                posted_on: '3:30am',\n                author_avatar: avatarImg3,\n            },\n        ],\n    },\n];\n\nconst allTasks = [...todayTasks, ...upcomingTasks, ...otherTasks];\n\nexport { todayTasks, upcomingTasks, otherTasks, allTasks };\n","// @flow\nimport React, { useState } from 'react';\nimport { Row, Col, Dropdown, InputGroup, Form } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\n// components\nimport TaskSection from './Section';\nimport Task from './Task';\n\n// dummy data\nimport { todayTasks, upcomingTasks, otherTasks } from './Data';\n\ntype ChecklistsItems = {\n    id: number,\n    title: string,\n    completed: boolean,\n};\n\ntype AttachmentsItems = {\n    id: number,\n    filename: string,\n    size: string,\n};\n\ntype CommentsItems = {\n    id: number,\n    author: string,\n    text: string,\n    posted_on: string,\n    author_avatar: string,\n};\n\ntype TaskItems = {\n    id: number,\n    title: string,\n    assigned_to: string,\n    assignee_avatar: string,\n    due_date: string,\n    completed: boolean,\n    priority: string,\n    stage: string,\n    checklists: Array<ChecklistsItems>,\n    description: string,\n    attachments: Array<AttachmentsItems>,\n    comments: Array<CommentsItems>,\n};\n\ntype TaskSectionState = {\n    isSortDropdownOpen: boolean,\n    otherTasks: Array<TaskItems>,\n    selectedTask: TaskItems,\n    todayTasks: Array<TaskItems>,\n    upcomingTasks: Array<TaskItems>,\n};\n// Task List\nconst TaskList = (state: TaskSectionState): React$Element<React$FragmentType> => {\n    const [todayTask] = useState([...todayTasks]);\n    const [upcomingTask] = useState([...upcomingTasks]);\n    const [otherTask] = useState([...otherTasks]);\n    const [isSortDropdownOpen, setIsSortDropdownOpen] = useState(false);\n    const [selectedTask, setSelectedTask] = useState(todayTasks[0]);\n\n    /**\n     * Toggle sort\n     */\n    const toggleSortDropDown = () => {\n        setIsSortDropdownOpen(!isSortDropdownOpen);\n    };\n    /**\n     * Selects the task\n     * @param {*} taks\n     */\n    const selectTask = (task) => {\n        setSelectedTask(task);\n    };\n\n    return (\n        <>\n            <Row>\n                <Col xl={8}>\n                    <div className=\"page-title-box\">\n                        <div className=\"page-title-right\">\n                            <div className=\"app-search\">\n                                <InputGroup>\n                                    <Form.Control placeholder=\"Search...\" />\n                                    <span className=\"mdi mdi-magnify search-icon\"></span>\n                                    <Dropdown\n                                        addonType=\"append\"\n                                        isOpen={isSortDropdownOpen}\n                                        toggle={toggleSortDropDown}\n                                        align=\"end\">\n                                        <Dropdown.Toggle variant=\"secondary\">\n                                            <i className=\"uil uil-sort-amount-down\"></i>\n                                        </Dropdown.Toggle>\n                                        <Dropdown.Menu>\n                                            <Dropdown.Item>Due Date</Dropdown.Item>\n                                            <Dropdown.Item>Added Date</Dropdown.Item>\n                                            <Dropdown.Item>Assignee</Dropdown.Item>\n                                        </Dropdown.Menu>\n                                    </Dropdown>\n                                </InputGroup>\n                            </div>\n                        </div>\n                        <h4 className=\"page-title\">\n                            Tasks{' '}\n                            <Link to=\"#\" className=\"btn btn-success btn-sm ms-3\">\n                                Add New\n                            </Link>\n                        </h4>\n                    </div>\n\n                    {/* tasks */}\n                    <div className=\"mt-2\">\n                        <TaskSection title=\"Today\" tasks={todayTask} selectTask={selectTask}></TaskSection>\n                    </div>\n                    <div className=\"mt-4\">\n                        <TaskSection title=\"Upcoming\" tasks={upcomingTask} selectTask={selectTask}></TaskSection>\n                    </div>\n                    <div className=\"mt-4 mb-4\">\n                        <TaskSection title=\"Other\" tasks={otherTask} selectTask={selectTask}></TaskSection>\n                    </div>\n                </Col>\n\n                <Col>\n                    <Task {...selectedTask} />\n                </Col>\n            </Row>\n        </>\n    );\n};\n\nexport default TaskList;\n"],"names":["_ref","title","containerClass","icon","menuItems","_jsxs","className","classNames","children","_jsx","Dropdown","Toggle","as","Link","to","Menu","align","map","item","index","React","hasDivider","Divider","Item","variant","label","Task","props","task","selectTask","_useState","useState","stage","_useState2","_slicedToArray","completed","setCompleted","Row","Col","sm","type","id","concat","checked","onChange","e","target","htmlFor","onClick","OverlayTrigger","placement","overlay","Tooltip","assigned_to","src","assignee_avatar","alt","due_date","checklists","filter","t","length","comments","priority","tasks","_useState3","_useState4","collapse","setCollapse","_useState5","taskList","_Fragment","Collapse","in","Card","Body","idx","editorState","setEditorState","useEffect","contentBlock","htmlToDraft","contentState","ContentState","createFromBlockArray","contentBlocks","EditorState","createWithContent","CardTitle","height","Editor","toolbarHidden","toolbarClassName","wrapperClassName","editorStyle","minHeight","onEditorStateChange","editorStates","checklist","defaultChecked","strikethrough","attachments","f","ext","filename","substr","lastIndexOf","size","comment","author_avatar","author","posted_on","text","action","rows","placeholder","todayTasks","avatarImg2","description","avatarImg3","avatarImg4","upcomingTasks","avatarImg5","avatarImg6","otherTasks","state","_toConsumableArray","todayTask","upcomingTask","otherTask","_useState7","_useState8","isSortDropdownOpen","setIsSortDropdownOpen","_useState9","_useState10","selectedTask","setSelectedTask","xl","InputGroup","Form","Control","addonType","isOpen","toggle","TaskSection","_objectSpread"],"sourceRoot":""}