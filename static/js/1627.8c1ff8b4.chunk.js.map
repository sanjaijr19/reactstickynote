{"version":3,"file":"static/js/1627.8c1ff8b4.chunk.js","mappings":"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","sources":["components/PageTitle.js","pages/uikit/Offcanvas.js","../node_modules/@restart/hooks/esm/useMergedRefs.js","../node_modules/react-bootstrap/esm/Button.js","../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/CardHeader.js","../node_modules/react-bootstrap/esm/Card.js","../node_modules/react-bootstrap/esm/CardHeaderContext.js","../node_modules/react-bootstrap/esm/divWithClassName.js","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/@babel/runtime/helpers/esm/superPropBase.js"],"sourcesContent":["// @flow\nimport React from 'react';\nimport { Row, Col, Breadcrumb } from 'react-bootstrap';\n\ntype BreadcrumbItems = {\n    label: string,\n    path: string,\n    active?: boolean,\n};\n\ntype PageTitleProps = {\n    breadCrumbItems: Array<BreadcrumbItems>,\n    title: string,\n};\n\n/**\n * PageTitle\n */\nconst PageTitle = (props: PageTitleProps): React$Element<any> => {\n    return (\n        <Row>\n            <Col>\n                <div className=\"page-title-box\">\n                    <div className=\"page-title-right\">\n                        <Breadcrumb listProps={{ className: 'm-0' }}>\n                            <Breadcrumb.Item href=\"/\">Stickynote</Breadcrumb.Item>\n\n                            {props.breadCrumbItems.map((item, index) => {\n                                return item.active ? (\n                                    <Breadcrumb.Item active key={index}>\n                                        {item.label}\n                                    </Breadcrumb.Item>\n                                ) : (\n                                    <Breadcrumb.Item key={index} href={item.path}>\n                                        {item.label}\n                                    </Breadcrumb.Item>\n                                );\n                            })}\n                        </Breadcrumb>\n                    </div>\n                    <h4 className=\"page-title\">{props.title}</h4>\n                </div>\n            </Col>\n        </Row>\n    );\n};\n\nexport default PageTitle;\n","// @flow\nimport React, { useState } from 'react';\nimport { Row, Col, Card, Offcanvas, Button } from 'react-bootstrap';\n\n// components\nimport PageTitle from '../../components/PageTitle';\n\nconst OffCanvasWithBackdrop = ({ name, ...props }) => {\n    const [show, setShow] = useState(false);\n\n    const toggle = () => {\n        setShow((prevState) => !prevState);\n    };\n\n    return (\n        <>\n            <Button variant=\"primary\" onClick={toggle} className=\"me-1\">\n                {name}\n            </Button>\n            <Offcanvas show={show} onHide={toggle} {...props}>\n                <Offcanvas.Header closeButton>\n                    <Offcanvas.Title>Offcanvas</Offcanvas.Title>\n                </Offcanvas.Header>\n                <Offcanvas.Body>\n                    Some text as placeholder. In real life you can have the elements you have chosen. Like, text,\n                    images, lists, etc.\n                </Offcanvas.Body>\n            </Offcanvas>\n        </>\n    );\n};\n\nconst OffcanvasPlacement = ({ name, ...props }) => {\n    const [show, setShow] = useState(false);\n\n    const toggle = () => {\n        setShow((prevState) => !prevState);\n    };\n\n    return (\n        <>\n            <Button variant=\"primary\" onClick={toggle}>\n                Toggle {name} offcanvas\n            </Button>\n            <Offcanvas show={show} onHide={toggle} {...props}>\n                <Offcanvas.Header closeButton>\n                    <Offcanvas.Title>Offcanvas {name}</Offcanvas.Title>\n                </Offcanvas.Header>\n                <Offcanvas.Body>\n                    Content for the offcanvas goes here. You can place just about any Bootstrap component or custom\n                    elements here.\n                </Offcanvas.Body>\n            </Offcanvas>\n        </>\n    );\n};\n\nconst DefaultOffcanvas = () => {\n    const [show, setShow] = useState(false);\n\n    const toggle = () => {\n        setShow((prevState) => !prevState);\n    };\n\n    return (\n        <>\n            <Card>\n                <Card.Body>\n                    <h4 className=\"header-title\">Offcanvas</h4>\n                    <p className=\"text-muted font-13\">\n                        <code>Offcanvas</code> includes support for a header with a close button and an optional body\n                        class for some initial padding. We suggest that you include offcanvas headers with dismiss\n                        actions whenever possible, or provide an explicit dismiss action.\n                    </p>\n                    <Button variant=\"primary\" onClick={toggle}>\n                        Launch\n                    </Button>\n\n                    <Offcanvas show={show} onHide={toggle}>\n                        <Offcanvas.Header closeButton>\n                            <Offcanvas.Title>Offcanvas</Offcanvas.Title>\n                        </Offcanvas.Header>\n                        <Offcanvas.Body>\n                            Some text as placeholder. In real life you can have the elements you have chosen. Like,\n                            text, images, lists, etc.\n                            <h5 className=\"mt-3\">List</h5>\n                            <ul className=\"ps-3\">\n                                <li className=\"\">Nemo enim ipsam voluptatem quia aspernatur</li>\n                                <li className=\"\">Neque porro quisquam est, qui dolorem</li>\n                                <li className=\"\">Quis autem vel eum iure qui in ea</li>\n                            </ul>\n                            <ul className=\"ps-3\">\n                                <li className=\"\">At vero eos et accusamus et iusto odio dignissimos</li>\n                                <li className=\"\">Et harum quidem rerum facilis</li>\n                                <li className=\"\">Temporibus autem quibusdam et aut officiis</li>\n                            </ul>\n                        </Offcanvas.Body>\n                    </Offcanvas>\n                </Card.Body>\n            </Card>\n        </>\n    );\n};\n\nconst Offcanvases = (): React$Element<React$FragmentType> => {\n    const options = [\n        {\n            name: 'Enable body scrolling',\n            scroll: true,\n            backdrop: false,\n        },\n        {\n            name: 'Enable backdrop (default)',\n            scroll: false,\n            backdrop: true,\n        },\n        {\n            name: 'Enable both scrolling & backdrop',\n            scroll: true,\n            backdrop: true,\n        },\n    ];\n\n    const placementOptions = [\n        {\n            name: 'top',\n            placement: 'top',\n        },\n        {\n            name: 'right',\n            placement: 'end',\n        },\n        {\n            name: 'bottom',\n            placement: 'bottom',\n        },\n        {\n            name: 'left',\n            placement: 'start',\n        },\n    ];\n    return (\n        <>\n            <PageTitle\n                breadCrumbItems={[\n                    { label: 'Base UI', path: '/ui/offcanvas' },\n                    { label: 'Offcanvas', path: '/ui/offcanvas', active: true },\n                ]}\n                title={'Offcanvas'}\n            />\n\n            <Row>\n                <Col className=\"col-6\">\n                    <DefaultOffcanvas />\n\n                    <Card>\n                        <Card.Body>\n                            <h4 className=\"header-title\">Offcanvas Placement</h4>\n                            <p className=\"text-muted font-13\">Try the right and bottom examples out below.</p>\n                            <ul>\n                                <li>\n                                    <code>start</code> places offcanvas on the left of the viewport\n                                </li>\n                                <li>\n                                    <code>end</code> places offcanvas on the right of the viewport\n                                </li>\n                                <li>\n                                    <code>bottom</code> places offcanvas on the bottom of the viewport\n                                </li>\n                            </ul>\n                            <div className=\"button-list\">\n                                {placementOptions.map((option, index) => (\n                                    <OffcanvasPlacement key={index} placement={option.placement} name={option.name} />\n                                ))}\n                            </div>\n                        </Card.Body>\n                    </Card>\n                </Col>\n\n                <Col className=\"col-6\">\n                    <Card>\n                        <Card.Body>\n                            <h4 className=\"header-title\">Offcanvas Backdrop</h4>\n                            <p className=\"text-muted font-13\">\n                                Scrolling the <code>&lt;body&gt;</code> element is disabled when an offcanvas and its\n                                backdrop are visible. Use the <code>scroll</code> prop to toggle{' '}\n                                <code>&lt;body&gt;</code> scrolling and <code>backdrop</code> prop to toggle the\n                                backdrop.\n                            </p>\n\n                            {options.map((props, idx) => (\n                                <OffCanvasWithBackdrop key={idx} {...props} />\n                            ))}\n                        </Card.Body>\n                    </Card>\n                </Col>\n            </Row>\n        </>\n    );\n};\n\nexport default Offcanvases;\n","import { useMemo } from 'react';\n\nvar toFnRef = function toFnRef(ref) {\n  return !ref || typeof ref === 'function' ? ref : function (value) {\n    ref.current = value;\n  };\n};\n\nexport function mergeRefs(refA, refB) {\n  var a = toFnRef(refA);\n  var b = toFnRef(refB);\n  return function (value) {\n    if (a) a(value);\n    if (b) b(value);\n  };\n}\n/**\n * Create and returns a single callback ref composed from two other Refs.\n *\n * ```tsx\n * const Button = React.forwardRef((props, ref) => {\n *   const [element, attachRef] = useCallbackRef<HTMLButtonElement>();\n *   const mergedRef = useMergedRefs(ref, attachRef);\n *\n *   return <button ref={mergedRef} {...props}/>\n * })\n * ```\n *\n * @param refA A Callback or mutable Ref\n * @param refB A Callback or mutable Ref\n * @category refs\n */\n\nfunction useMergedRefs(refA, refB) {\n  return useMemo(function () {\n    return mergeRefs(refA, refB);\n  }, [refA, refB]);\n}\n\nexport default useMergedRefs;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useButtonProps } from '@restart/ui/Button';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Button = /*#__PURE__*/React.forwardRef(({\n  as,\n  bsPrefix,\n  variant = 'primary',\n  size,\n  active = false,\n  disabled = false,\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'btn');\n  const [buttonProps, {\n    tagName\n  }] = useButtonProps({\n    tagName: as,\n    disabled,\n    ...props\n  });\n  const Component = tagName;\n  return /*#__PURE__*/_jsx(Component, {\n    ...buttonProps,\n    ...props,\n    ref: ref,\n    disabled: disabled,\n    className: classNames(className, prefix, active && 'active', variant && `${prefix}-${variant}`, size && `${prefix}-${size}`, props.href && disabled && 'disabled')\n  });\n});\nButton.displayName = 'Button';\nexport default Button;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImg = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  variant,\n  as: Component = 'img',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(variant ? `${prefix}-${variant}` : prefix, className),\n    ...props\n  });\n});\nCardImg.displayName = 'CardImg';\nexport default CardImg;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardHeaderContext from './CardHeaderContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-header');\n  const contextValue = useMemo(() => ({\n    cardHeaderBsPrefix: prefix\n  }), [prefix]);\n  return /*#__PURE__*/_jsx(CardHeaderContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, prefix)\n    })\n  });\n});\nCardHeader.displayName = 'CardHeader';\nexport default CardHeader;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardImg from './CardImg';\nimport CardHeader from './CardHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst DivStyledAsH6 = divWithClassName('h6');\nconst CardBody = createWithBsPrefix('card-body');\nconst CardTitle = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nconst CardSubtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nconst CardLink = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nconst CardText = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nconst CardFooter = createWithBsPrefix('card-footer');\nconst CardImgOverlay = createWithBsPrefix('card-img-overlay');\nconst Card = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  bg,\n  text,\n  border,\n  body = false,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, bg && `bg-${bg}`, text && `text-${text}`, border && `border-${border}`),\n    children: body ? /*#__PURE__*/_jsx(CardBody, {\n      children: children\n    }) : children\n  });\n});\nCard.displayName = 'Card';\nexport default Object.assign(Card, {\n  Img: CardImg,\n  Title: CardTitle,\n  Subtitle: CardSubtitle,\n  Body: CardBody,\n  Link: CardLink,\n  Text: CardText,\n  Header: CardHeader,\n  Footer: CardFooter,\n  ImgOverlay: CardImgOverlay\n});","import * as React from 'react';\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'CardHeaderContext';\nexport default context;","import * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default (className => /*#__PURE__*/React.forwardRef((p, ref) => /*#__PURE__*/_jsx(\"div\", {\n  ...p,\n  ref: ref,\n  className: classNames(p.className, className)\n})));","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}"],"names":["props","_jsx","Row","children","Col","_jsxs","className","Breadcrumb","listProps","Item","href","breadCrumbItems","map","item","index","active","label","path","title","OffCanvasWithBackdrop","_ref","name","_objectWithoutProperties","_excluded","_useState","useState","_useState2","_slicedToArray","show","setShow","toggle","prevState","_Fragment","Button","variant","onClick","Offcanvas","_objectSpread","onHide","Header","closeButton","Title","Body","OffcanvasPlacement","_ref2","_excluded2","_useState3","_useState4","DefaultOffcanvas","_useState5","_useState6","Card","PageTitle","placement","option","scroll","backdrop","idx","toFnRef","ref","value","current","refA","refB","useMemo","a","b","mergeRefs","React","as","bsPrefix","_ref$variant","size","_ref$active","_ref$disabled","disabled","prefix","useBootstrapPrefix","_useButtonProps","useButtonProps","tagName","_useButtonProps2","buttonProps","Component","classNames","concat","displayName","CardImg","_ref$as","CardHeader","contextValue","cardHeaderBsPrefix","CardHeaderContext","Provider","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","createWithBsPrefix","CardTitle","CardSubtitle","CardLink","CardText","CardFooter","CardImgOverlay","bg","text","border","_ref$body","body","Object","assign","Img","Subtitle","Link","Text","Footer","ImgOverlay","context","p","_get","Reflect","get","bind","target","property","receiver","base","object","prototype","hasOwnProperty","call","getPrototypeOf","desc","getOwnPropertyDescriptor","arguments","length","apply","this"],"sourceRoot":""}