{"version":3,"file":"static/js/3408.7e316689.chunk.js","mappings":"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","sources":["components/PageTitle.js","../node_modules/react-bootstrap/esm/PageItem.js","../node_modules/react-bootstrap/esm/Pagination.js","pages/uikit/Paginations.js","../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/CardHeader.js","../node_modules/react-bootstrap/esm/Card.js","../node_modules/react-bootstrap/esm/CardHeaderContext.js","../node_modules/react-bootstrap/esm/divWithClassName.js"],"sourcesContent":["// @flow\nimport React from 'react';\nimport { Row, Col, Breadcrumb } from 'react-bootstrap';\n\ntype BreadcrumbItems = {\n    label: string,\n    path: string,\n    active?: boolean,\n};\n\ntype PageTitleProps = {\n    breadCrumbItems: Array<BreadcrumbItems>,\n    title: string,\n};\n\n/**\n * PageTitle\n */\nconst PageTitle = (props: PageTitleProps): React$Element<any> => {\n    return (\n        <Row>\n            <Col>\n                <div className=\"page-title-box\">\n                    <div className=\"page-title-right\">\n                        <Breadcrumb listProps={{ className: 'm-0' }}>\n                            <Breadcrumb.Item href=\"/\">Stickynote</Breadcrumb.Item>\n\n                            {props.breadCrumbItems.map((item, index) => {\n                                return item.active ? (\n                                    <Breadcrumb.Item active key={index}>\n                                        {item.label}\n                                    </Breadcrumb.Item>\n                                ) : (\n                                    <Breadcrumb.Item key={index} href={item.path}>\n                                        {item.label}\n                                    </Breadcrumb.Item>\n                                );\n                            })}\n                        </Breadcrumb>\n                    </div>\n                    <h4 className=\"page-title\">{props.title}</h4>\n                </div>\n            </Col>\n        </Row>\n    );\n};\n\nexport default PageTitle;\n","/* eslint-disable react/no-multi-comp */\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport Anchor from '@restart/ui/Anchor';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst PageItem = /*#__PURE__*/React.forwardRef(({\n  active = false,\n  disabled = false,\n  className,\n  style,\n  activeLabel = '(current)',\n  children,\n  ...props\n}, ref) => {\n  const Component = active || disabled ? 'span' : Anchor;\n  return /*#__PURE__*/_jsx(\"li\", {\n    ref: ref,\n    style: style,\n    className: classNames(className, 'page-item', {\n      active,\n      disabled\n    }),\n    children: /*#__PURE__*/_jsxs(Component, {\n      className: \"page-link\",\n      ...props,\n      children: [children, active && activeLabel && /*#__PURE__*/_jsx(\"span\", {\n        className: \"visually-hidden\",\n        children: activeLabel\n      })]\n    })\n  });\n});\nPageItem.displayName = 'PageItem';\nexport default PageItem;\nfunction createButton(name, defaultValue, label = name) {\n  const Button = /*#__PURE__*/React.forwardRef(({\n    children,\n    ...props\n  }, ref) => /*#__PURE__*/_jsxs(PageItem, {\n    ...props,\n    ref: ref,\n    children: [/*#__PURE__*/_jsx(\"span\", {\n      \"aria-hidden\": \"true\",\n      children: children || defaultValue\n    }), /*#__PURE__*/_jsx(\"span\", {\n      className: \"visually-hidden\",\n      children: label\n    })]\n  }));\n  Button.displayName = name;\n  return Button;\n}\nexport const First = createButton('First', '«');\nexport const Prev = createButton('Prev', '‹', 'Previous');\nexport const Ellipsis = createButton('Ellipsis', '…', 'More');\nexport const Next = createButton('Next', '›');\nexport const Last = createButton('Last', '»');","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport PageItem, { Ellipsis, First, Last, Next, Prev } from './PageItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Pagination = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  size,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'pagination');\n  return /*#__PURE__*/_jsx(\"ul\", {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, size && `${decoratedBsPrefix}-${size}`)\n  });\n});\nPagination.displayName = 'Pagination';\nexport default Object.assign(Pagination, {\n  First,\n  Prev,\n  Ellipsis,\n  Item: PageItem,\n  Next,\n  Last\n});","// @flow\nimport React from 'react';\nimport { Row, Col, Card, Pagination } from 'react-bootstrap';\n\n// components\nimport PageTitle from '../../components/PageTitle';\n\nconst DefaultPagination = () => {\n    let items = [];\n    for (let number = 1; number <= 5; number++) {\n        items.push(<Pagination.Item key={number}>{number}</Pagination.Item>);\n    }\n\n    return (\n        <>\n            <Card>\n                <Card.Body>\n                    <h4 className=\"header-title\">Default Pagination</h4>\n                    <p className=\"text-muted font-14\">\n                        Simple pagination inspired by Rdio, great for apps and search results.\n                    </p>\n                    <Pagination>\n                        <Pagination.Prev />\n                        {items}\n                        <Pagination.Next />\n                    </Pagination>\n                </Card.Body>\n            </Card>\n        </>\n    );\n};\n\nconst PaginationWithStates = () => {\n    return (\n        <>\n            <Card>\n                <Card.Body>\n                    <h4 className=\"header-title\">Disabled and active states</h4>\n                    <p className=\"text-muted font-14\">\n                        PageItem are customizable for different circumstances. Use <code>disabled</code> prop for links\n                        that appear un-clickable and <code>active</code> prop to indicate the current page.\n                    </p>\n                    <Pagination>\n                        <Pagination.Prev disabled>Previous</Pagination.Prev>\n                        <Pagination.Item>{1}</Pagination.Item>\n                        <Pagination.Item active>{2}</Pagination.Item>\n                        <Pagination.Item>{3}</Pagination.Item>\n                        <Pagination.Next>Next</Pagination.Next>\n                    </Pagination>\n                </Card.Body>\n            </Card>\n        </>\n    );\n};\n\nconst RoundedPagination = () => {\n    let items = [];\n    for (let number = 1; number <= 5; number++) {\n        items.push(\n            <Pagination.Item key={number} active={number === 2}>\n                {number}\n            </Pagination.Item>\n        );\n    }\n    return (\n        <>\n            <Card>\n                <Card.Body>\n                    <h4 className=\"header-title\">Rounded Pagination</h4>\n                    <p className=\"text-muted font-14\">\n                        Add <code> .pagination-rounded</code> for rounded pagination.\n                    </p>\n                    <Pagination className=\"pagination-rounded\">\n                        <Pagination.Prev />\n                        {items}\n                        <Pagination.Next />\n                    </Pagination>\n                </Card.Body>\n            </Card>\n        </>\n    );\n};\n\nconst PaginationSizes = () => {\n    let items = [];\n    for (let number = 1; number <= 3; number++) {\n        items.push(<Pagination.Item key={number}>{number}</Pagination.Item>);\n    }\n    return (\n        <>\n            <Card>\n                <Card.Body>\n                    <h4 className=\"header-title\">Sizing</h4>\n                    <p className=\"text-muted font-14\">\n                        Add <code>lg</code> or <code>sm</code> type to <code>size</code> prop for additional sizes.\n                    </p>\n\n                    <Pagination size=\"lg\">\n                        <Pagination.Prev />\n                        {items}\n                        <Pagination.Next />\n                    </Pagination>\n\n                    <Pagination size=\"sm\">\n                        <Pagination.Prev />\n                        {items}\n                        <Pagination.Next />\n                    </Pagination>\n                </Card.Body>\n            </Card>\n        </>\n    );\n};\n\nconst PaginationWithEllipsis = () => {\n    return (\n        <>\n            <Card>\n                <Card.Body>\n                    <h4 className=\"header-title\">More options</h4>\n                    <p className=\"text-muted font-14\">\n                        For building more complex pagination UI, there are few convenient sub-components for adding\n                        \"First\", \"Previous\", \"Next\", and \"Last\" buttons, as well as an <code>Ellipsis</code> item for\n                        indicating previous or continuing results.\n                    </p>\n\n                    <Pagination>\n                        <Pagination.First />\n                        <Pagination.Prev />\n                        <Pagination.Item>{1}</Pagination.Item>\n                        <Pagination.Ellipsis />\n\n                        <Pagination.Item>{10}</Pagination.Item>\n                        <Pagination.Item>{11}</Pagination.Item>\n                        <Pagination.Item active>{12}</Pagination.Item>\n                        <Pagination.Item>{13}</Pagination.Item>\n                        <Pagination.Item disabled>{14}</Pagination.Item>\n\n                        <Pagination.Ellipsis />\n                        <Pagination.Item>{20}</Pagination.Item>\n                        <Pagination.Next />\n                        <Pagination.Last />\n                    </Pagination>\n                </Card.Body>\n            </Card>\n        </>\n    );\n};\n\nconst Paginations = (): React$Element<React$FragmentType> => {\n    return (\n        <>\n            <PageTitle\n                breadCrumbItems={[\n                    { label: 'Base UI', path: '/ui/offcanvas' },\n                    { label: 'Paginations', path: '/ui/paginations', active: true },\n                ]}\n                title={'Paginations'}\n            />\n\n            <Row>\n                <Col xl={6}>\n                    <DefaultPagination />\n                    <PaginationWithStates />\n                    <PaginationWithEllipsis />\n                </Col>\n                <Col xl={6}>\n                    <RoundedPagination />\n                    <PaginationSizes />\n                </Col>\n            </Row>\n        </>\n    );\n};\n\nexport default Paginations;\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImg = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  variant,\n  as: Component = 'img',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(variant ? `${prefix}-${variant}` : prefix, className),\n    ...props\n  });\n});\nCardImg.displayName = 'CardImg';\nexport default CardImg;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardHeaderContext from './CardHeaderContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-header');\n  const contextValue = useMemo(() => ({\n    cardHeaderBsPrefix: prefix\n  }), [prefix]);\n  return /*#__PURE__*/_jsx(CardHeaderContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, prefix)\n    })\n  });\n});\nCardHeader.displayName = 'CardHeader';\nexport default CardHeader;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardImg from './CardImg';\nimport CardHeader from './CardHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst DivStyledAsH6 = divWithClassName('h6');\nconst CardBody = createWithBsPrefix('card-body');\nconst CardTitle = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nconst CardSubtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nconst CardLink = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nconst CardText = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nconst CardFooter = createWithBsPrefix('card-footer');\nconst CardImgOverlay = createWithBsPrefix('card-img-overlay');\nconst Card = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  bg,\n  text,\n  border,\n  body = false,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, bg && `bg-${bg}`, text && `text-${text}`, border && `border-${border}`),\n    children: body ? /*#__PURE__*/_jsx(CardBody, {\n      children: children\n    }) : children\n  });\n});\nCard.displayName = 'Card';\nexport default Object.assign(Card, {\n  Img: CardImg,\n  Title: CardTitle,\n  Subtitle: CardSubtitle,\n  Body: CardBody,\n  Link: CardLink,\n  Text: CardText,\n  Header: CardHeader,\n  Footer: CardFooter,\n  ImgOverlay: CardImgOverlay\n});","import * as React from 'react';\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'CardHeaderContext';\nexport default context;","import * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default (className => /*#__PURE__*/React.forwardRef((p, ref) => /*#__PURE__*/_jsx(\"div\", {\n  ...p,\n  ref: ref,\n  className: classNames(p.className, className)\n})));"],"names":["props","_jsx","Row","children","Col","_jsxs","className","Breadcrumb","listProps","Item","href","breadCrumbItems","map","item","index","active","label","path","title","PageItem","React","_ref","ref","_ref$active","_ref$disabled","disabled","style","_ref$activeLabel","activeLabel","_objectWithoutProperties","_excluded","Component","Anchor","classNames","_objectSpread","displayName","createButton","name","defaultValue","arguments","length","undefined","Button","_ref2","_excluded2","First","Prev","Ellipsis","Next","Last","Pagination","bsPrefix","size","decoratedBsPrefix","useBootstrapPrefix","concat","Object","assign","DefaultPagination","items","number","push","_Fragment","Card","Body","PaginationWithStates","RoundedPagination","PaginationSizes","PaginationWithEllipsis","PageTitle","xl","CardImg","variant","_ref$as","as","prefix","CardHeader","contextValue","useMemo","cardHeaderBsPrefix","CardHeaderContext","Provider","value","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","createWithBsPrefix","CardTitle","CardSubtitle","CardLink","CardText","CardFooter","CardImgOverlay","bg","text","border","_ref$body","body","Img","Title","Subtitle","Link","Text","Header","Footer","ImgOverlay","context","p"],"sourceRoot":""}