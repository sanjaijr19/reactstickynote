{"version":3,"file":"static/js/5112.4ededefa.chunk.js","mappings":"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","sources":["components/PageTitle.js","components/VectorMap/BaseVectorMap.js","components/VectorMap/WorldMap.js","components/VectorMap/CanadaMap.js","components/VectorMap/RussiaMap.js","components/VectorMap/SpainMap.js","components/VectorMap/UsaVectorMap.js","components/VectorMap/ItalyVectorMap.js","components/VectorMap/IraqVectorMap.js","pages/maps/VectorMaps.js","../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/CardHeader.js","../node_modules/react-bootstrap/esm/Card.js","../node_modules/react-bootstrap/esm/CardHeaderContext.js","../node_modules/react-bootstrap/esm/divWithClassName.js"],"sourcesContent":["// @flow\nimport React from 'react';\nimport { Row, Col, Breadcrumb } from 'react-bootstrap';\n\ntype BreadcrumbItems = {\n    label: string,\n    path: string,\n    active?: boolean,\n};\n\ntype PageTitleProps = {\n    breadCrumbItems: Array<BreadcrumbItems>,\n    title: string,\n};\n\n/**\n * PageTitle\n */\nconst PageTitle = (props: PageTitleProps): React$Element<any> => {\n    return (\n        <Row>\n            <Col>\n                <div className=\"page-title-box\">\n                    <div className=\"page-title-right\">\n                        <Breadcrumb listProps={{ className: 'm-0' }}>\n                            <Breadcrumb.Item href=\"/\">Stickynote</Breadcrumb.Item>\n\n                            {props.breadCrumbItems.map((item, index) => {\n                                return item.active ? (\n                                    <Breadcrumb.Item active key={index}>\n                                        {item.label}\n                                    </Breadcrumb.Item>\n                                ) : (\n                                    <Breadcrumb.Item key={index} href={item.path}>\n                                        {item.label}\n                                    </Breadcrumb.Item>\n                                );\n                            })}\n                        </Breadcrumb>\n                    </div>\n                    <h4 className=\"page-title\">{props.title}</h4>\n                </div>\n            </Col>\n        </Row>\n    );\n};\n\nexport default PageTitle;\n","// @flow\nimport React, { useEffect, useState } from 'react';\n\ntype BaseVectorMapProps = {\n    width?: string,\n    height?: string,\n    options?: any,\n    type: string,\n};\n\nconst BaseVectorMap = ({ width, height, options, type }: BaseVectorMapProps): React$Element<React$FragmentType> => {\n    const selectorId = type + new Date().getTime();\n    const [map, setMap] = useState();\n\n    useEffect(() => {\n        if (!map) {\n            // create jsvectormap\n            const map = new window['jsVectorMap']({\n                selector: '#' + selectorId,\n                map: type,\n                ...options,\n            });\n\n            setMap(map);\n        }\n    }, [selectorId, map, options, type]);\n    return (\n        <>\n            <div id={selectorId} style={{ width: width, height: height }}></div>\n        </>\n    );\n};\n\nexport default BaseVectorMap;\n","// @flow\nimport React from 'react';\nimport 'jsvectormap';\nimport 'jsvectormap/dist/maps/world.js';\n\n//components\nimport BaseVectorMap from './BaseVectorMap';\n\ntype WorldVectorMapProps = {\n    width?: string,\n    height?: string,\n    options?: any,\n};\n\nconst WorldVectorMap = ({ width, height, options }: WorldVectorMapProps): React$Element<React$FragmentType> => {\n    return (\n        <>\n            <BaseVectorMap width={width} height={height} options={options} type=\"world\" />\n        </>\n    );\n};\n\nexport default WorldVectorMap;\n","// @flow\nimport React from 'react';\nimport 'jsvectormap';\nimport 'jsvectormap/dist/maps/canada.js';\n\n//components\nimport BaseVectorMap from './BaseVectorMap';\n\ntype CanadaVectorMapProps = {\n    width?: string,\n    height?: string,\n    options?: any,\n};\n\nconst CanadaVectorMap = ({ width, height, options }: CanadaVectorMapProps): React$Element<React$FragmentType> => {\n    return (\n        <>\n            <BaseVectorMap width={width} height={height} options={options} type=\"canada\" />\n        </>\n    );\n};\n\nexport default CanadaVectorMap;\n","// @flow\nimport React from 'react';\nimport 'jsvectormap';\nimport 'jsvectormap/dist/maps/russia.js';\n\n//components\nimport BaseVectorMap from './BaseVectorMap';\n\ntype RussiaVectorMapProps = {\n    width?: string,\n    height?: string,\n    options?: any,\n};\n\nconst RussiaVectorMap = ({ width, height, options }: RussiaVectorMapProps): React$Element<React$FragmentType> => {\n    return (\n        <>\n            <BaseVectorMap width={width} height={height} options={options} type=\"russia\" />\n        </>\n    );\n};\n\nexport default RussiaVectorMap;\n","// @flow\nimport React from 'react';\nimport 'jsvectormap';\nimport 'jsvectormap/dist/maps/spain.js';\n\n//components\nimport BaseVectorMap from './BaseVectorMap';\n\ntype SpainVectorMapProps = {\n    width?: string,\n    height?: string,\n    options?: any,\n};\n\nconst SpainVectorMap = ({ width, height, options }: SpainVectorMapProps): React$Element<React$FragmentType> => {\n    return (\n        <>\n            <BaseVectorMap width={width} height={height} options={options} type=\"spain\" />\n        </>\n    );\n};\n\nexport default SpainVectorMap;\n","// @flow\nimport React from 'react';\nimport 'jsvectormap';\nimport 'jsvectormap/dist/maps/us-merc-en.js';\n\n//components\nimport BaseVectorMap from './BaseVectorMap';\n\ntype UsaVectorMapProps = {\n    width?: string,\n    height?: string,\n    options?: any,\n};\n\nconst UsaVectorMap = ({ width, height, options }: UsaVectorMapProps): React$Element<React$FragmentType> => {\n    return (\n        <>\n            <BaseVectorMap width={width} height={height} options={options} type=\"us_merc_en\" />\n        </>\n    );\n};\n\nexport default UsaVectorMap;\n","// @flow\nimport React from 'react';\nimport 'jsvectormap';\nimport 'jsvectormap/dist/maps/italy.js';\n\n//components\nimport BaseVectorMap from './BaseVectorMap';\n\ntype ItalyVectorMapProps = {\n    width?: string,\n    height?: string,\n    options?: any,\n};\n\nconst ItalyVectorMap = ({ width, height, options }: ItalyVectorMapProps): React$Element<React$FragmentType> => {\n    return (\n        <>\n            <BaseVectorMap width={width} height={height} options={options} type=\"italy\" />\n        </>\n    );\n};\n\nexport default ItalyVectorMap;\n","// @flow\nimport React from 'react';\nimport 'jsvectormap';\nimport 'jsvectormap/dist/maps/iraq.js';\n\n//components\nimport BaseVectorMap from './BaseVectorMap';\n\ntype IraqVectorMapProps = {\n    width?: string,\n    height?: string,\n    options?: any,\n};\n\nconst IraqVectorMap = ({ width, height, options }: IraqVectorMapProps): React$Element<React$FragmentType> => {\n    return (\n        <>\n            <BaseVectorMap width={width} height={height} options={options} type=\"iraq\" />\n        </>\n    );\n};\n\nexport default IraqVectorMap;\n","// @flow\nimport React from 'react';\nimport { Row, Col, Card } from 'react-bootstrap';\n\n// components\nimport PageTitle from '../../components/PageTitle';\n\n// react plugin for creating vector maps\nimport { WorldVectorMap } from '../../components/VectorMap';\nimport { RussiaVectorMap } from '../../components/VectorMap';\nimport { SpainVectorMap } from '../../components/VectorMap';\nimport { CanadaVectorMap } from '../../components/VectorMap';\nimport { UsaVectorMap } from '../../components/VectorMap';\nimport { ItalyVectorMap } from '../../components/VectorMap';\nimport { IraqVectorMap } from '../../components/VectorMap';\n\nconst VectorMaps = (): React$Element<React$FragmentType> => {\n    // vector map config\n    const worldMapOptions = {\n        backgroundColor: 'transparent',\n        regionStyle: {\n            initial: {\n                fill: '#e3eaef',\n            },\n        },\n        markers: [\n            { coords: [41.9, 12.45], name: 'Vatican City' },\n            { coords: [43.73, 7.41], name: 'Monaco' },\n            { coords: [-0.52, 166.93], name: 'Nauru' },\n            { coords: [-8.51, 179.21], name: 'Tuvalu' },\n            { coords: [43.93, 12.46], name: 'San Marino' },\n            { coords: [47.14, 9.52], name: 'Liechtenstein' },\n            { coords: [7.11, 171.06], name: 'Marshall Islands' },\n            { coords: [17.3, -62.73], name: 'Saint Kitts and Nevis' },\n            { coords: [3.2, 73.22], name: 'Maldives' },\n            { coords: [35.88, 14.5], name: 'Malta' },\n            { coords: [12.05, -61.75], name: 'Grenada' },\n            { coords: [13.16, -61.23], name: 'Saint Vincent and the Grenadines' },\n            { coords: [13.16, -59.55], name: 'Barbados' },\n            { coords: [17.11, -61.85], name: 'Antigua and Barbuda' },\n            { coords: [-4.61, 55.45], name: 'Seychelles' },\n            { coords: [7.35, 134.46], name: 'Palau' },\n            { coords: [42.5, 1.51], name: 'Andorra' },\n            { coords: [14.01, -60.98], name: 'Saint Lucia' },\n            { coords: [6.91, 158.18], name: 'Federated States of Micronesia' },\n            { coords: [1.3, 103.8], name: 'Singapore' },\n            { coords: [0.33, 6.73], name: 'SÃ£o TomÃ© and PrÃncipe' },\n        ],\n        markerStyle: {\n            initial: {\n                r: 9,\n                fill: '#727cf5',\n                'fill-opacity': 0.9,\n                stroke: '#fff',\n                'stroke-width': 7,\n                'stroke-opacity': 0.4,\n            },\n            hover: {\n                fill: '#727cf5',\n                stroke: '#fff',\n                'fill-opacity': 1,\n                'stroke-width': 1.5,\n            },\n        },\n    };\n\n    return (\n        <>\n            <PageTitle\n                breadCrumbItems={[\n                    { label: 'Maps', path: '/ui/vectormaps' },\n                    { label: 'Vector Maps', path: '/ui/vectormaps', active: true },\n                ]}\n                title={'Vector Maps'}\n            />\n\n            <Row>\n                <Col>\n                    <Card>\n                        <Card.Body>\n                            <h4 className=\"header-title mb-3\">World Vector Map</h4>\n                            <WorldVectorMap height=\"360px\" width=\"100%\" options={worldMapOptions} />\n                        </Card.Body>\n                    </Card>\n                </Col>\n            </Row>\n\n            <Row>\n                <Col xl={6}>\n                    <Card>\n                        <Card.Body>\n                            <h4 className=\"header-title mb-3\">Russia Vector Map</h4>\n                            <RussiaVectorMap\n                                height=\"300px\"\n                                width=\"100%\"\n                                options={{\n                                    zoomOnScroll: false,\n                                    regionStyle: {\n                                        initial: {\n                                            fill: '#727cf5',\n                                        },\n                                    },\n                                }}\n                            />\n                        </Card.Body>\n                    </Card>\n                </Col>\n                <Col xl={6}>\n                    <Card>\n                        <Card.Body>\n                            <h4 className=\"header-title mb-3\">Spain Vector Map</h4>\n                            <SpainVectorMap\n                                height=\"300px\"\n                                width=\"100%\"\n                                options={{\n                                    zoomOnScroll: false,\n                                    backgroundColor: 'transparent',\n                                    regionStyle: {\n                                        initial: {\n                                            fill: '#6c757d',\n                                        },\n                                    },\n                                }}\n                            />\n                        </Card.Body>\n                    </Card>\n                </Col>\n            </Row>\n\n            <Row>\n                <Col xl={6}>\n                    <Card>\n                        <Card.Body>\n                            <h4 className=\"header-title mb-3\">Canada Vector Map</h4>\n                            <CanadaVectorMap\n                                height=\"300px\"\n                                width=\"100%\"\n                                options={{\n                                    zoomOnScroll: false,\n                                    backgroundColor: 'transparent',\n                                    regionStyle: {\n                                        initial: {\n                                            fill: '#0acf97',\n                                        },\n                                    },\n                                }}\n                            />\n                        </Card.Body>\n                    </Card>\n                </Col>\n                <Col xl={6}>\n                    <Card>\n                        <Card.Body>\n                            <h4 className=\"header-title mb-3\">USA Vector Map</h4>\n                            <UsaVectorMap\n                                height=\"300px\"\n                                width=\"100%\"\n                                options={{\n                                    zoomOnScroll: false,\n                                    backgroundColor: 'transparent',\n                                    regionStyle: {\n                                        initial: {\n                                            fill: '#39afd1',\n                                        },\n                                    },\n                                }}\n                            />\n                        </Card.Body>\n                    </Card>\n                </Col>\n            </Row>\n\n            <Row>\n                <Col xl={6}>\n                    <Card>\n                        <Card.Body>\n                            <h4 className=\"header-title mb-3\">Italy Vector Map</h4>\n                            <ItalyVectorMap\n                                height=\"300px\"\n                                width=\"100%\"\n                                options={{\n                                    zoomOnScroll: false,\n                                    backgroundColor: 'transparent',\n                                    regionStyle: {\n                                        initial: {\n                                            fill: '#fa5c7c',\n                                        },\n                                    },\n                                }}\n                            />\n                        </Card.Body>\n                    </Card>\n                </Col>\n                <Col xl={6}>\n                    <Card>\n                        <Card.Body>\n                            <h4 className=\"header-title mb-3\">Iraq Vector Map</h4>\n                            <IraqVectorMap\n                                height=\"300px\"\n                                width=\"100%\"\n                                options={{\n                                    zoomOnScroll: false,\n                                    backgroundColor: 'transparent',\n                                    regionStyle: {\n                                        initial: {\n                                            fill: '#ffbc00',\n                                        },\n                                    },\n                                }}\n                            />\n                        </Card.Body>\n                    </Card>\n                </Col>\n            </Row>\n        </>\n    );\n};\n\nexport default VectorMaps;\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImg = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  variant,\n  as: Component = 'img',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(variant ? `${prefix}-${variant}` : prefix, className),\n    ...props\n  });\n});\nCardImg.displayName = 'CardImg';\nexport default CardImg;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardHeaderContext from './CardHeaderContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-header');\n  const contextValue = useMemo(() => ({\n    cardHeaderBsPrefix: prefix\n  }), [prefix]);\n  return /*#__PURE__*/_jsx(CardHeaderContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, prefix)\n    })\n  });\n});\nCardHeader.displayName = 'CardHeader';\nexport default CardHeader;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardImg from './CardImg';\nimport CardHeader from './CardHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst DivStyledAsH6 = divWithClassName('h6');\nconst CardBody = createWithBsPrefix('card-body');\nconst CardTitle = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nconst CardSubtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nconst CardLink = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nconst CardText = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nconst CardFooter = createWithBsPrefix('card-footer');\nconst CardImgOverlay = createWithBsPrefix('card-img-overlay');\nconst Card = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  bg,\n  text,\n  border,\n  body = false,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, bg && `bg-${bg}`, text && `text-${text}`, border && `border-${border}`),\n    children: body ? /*#__PURE__*/_jsx(CardBody, {\n      children: children\n    }) : children\n  });\n});\nCard.displayName = 'Card';\nexport default Object.assign(Card, {\n  Img: CardImg,\n  Title: CardTitle,\n  Subtitle: CardSubtitle,\n  Body: CardBody,\n  Link: CardLink,\n  Text: CardText,\n  Header: CardHeader,\n  Footer: CardFooter,\n  ImgOverlay: CardImgOverlay\n});","import * as React from 'react';\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'CardHeaderContext';\nexport default context;","import * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default (className => /*#__PURE__*/React.forwardRef((p, ref) => /*#__PURE__*/_jsx(\"div\", {\n  ...p,\n  ref: ref,\n  className: classNames(p.className, className)\n})));"],"names":["props","_jsx","Row","children","Col","_jsxs","className","Breadcrumb","listProps","Item","href","breadCrumbItems","map","item","index","active","label","path","title","_ref","width","height","options","type","selectorId","Date","getTime","_useState","useState","_useState2","_slicedToArray","setMap","useEffect","window","_objectSpread","selector","_Fragment","id","style","BaseVectorMap","PageTitle","Card","Body","WorldVectorMap","backgroundColor","regionStyle","initial","fill","markers","coords","name","markerStyle","r","stroke","hover","xl","RussiaVectorMap","zoomOnScroll","SpainVectorMap","CanadaVectorMap","UsaVectorMap","ItalyVectorMap","IraqVectorMap","CardImg","React","ref","bsPrefix","variant","_ref$as","as","Component","_objectWithoutProperties","_excluded","prefix","useBootstrapPrefix","classNames","concat","displayName","CardHeader","contextValue","useMemo","cardHeaderBsPrefix","CardHeaderContext","Provider","value","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","createWithBsPrefix","CardTitle","CardSubtitle","CardLink","CardText","CardFooter","CardImgOverlay","bg","text","border","_ref$body","body","Object","assign","Img","Title","Subtitle","Link","Text","Header","Footer","ImgOverlay","context","p"],"sourceRoot":""}