{"version":3,"file":"static/js/5016.b2d4ea3a.chunk.js","mappings":"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","sources":["pages/apps/CRM/Clients/ClientDetails.js","pages/apps/CRM/Clients/data.js","pages/apps/CRM/Clients/index.js","../node_modules/react-bootstrap/esm/InputGroupContext.js","../node_modules/react-bootstrap/esm/Tooltip.js"],"sourcesContent":["// @flow\nimport React from 'react';\nimport { Card, Col, Dropdown, OverlayTrigger, Row, Tooltip } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\ntype ClientDetailsItems = {\n    avatar: string,\n    varifiedClient: Boolean,\n    name: string,\n    emailId: string,\n    completedProject: string,\n};\n\ntype ClientDetailsProps = {\n    clientsData: Array<ClientDetailsItems>,\n};\n\nconst ClientDetails = ({ clientsData }: ClientDetailsProps): React$Element<React$FragmentType> => {\n    return (\n        <>\n            <Row>\n                {(clientsData || []).map((client, i) => {\n                    return (\n                        <Col xxl={3} md={6} key={i}>\n                            <Card>\n                                <Card.Body>\n                                    <Dropdown align=\"end\" className=\"float-end\">\n                                        <Dropdown.Toggle variant=\"link\" className=\"arrow-none card-drop p-0\">\n                                            <i className=\"mdi mdi-dots-horizontal\"></i>\n                                        </Dropdown.Toggle>\n                                        <Dropdown.Menu>\n                                            <Dropdown.Item>View Profile</Dropdown.Item>\n                                            <Dropdown.Item>Project Info</Dropdown.Item>\n                                        </Dropdown.Menu>\n                                    </Dropdown>\n                                    <div className=\"text-center\">\n                                        <img\n                                            src={client.avatar}\n                                            alt=\"\"\n                                            className=\"rounded-circle avatar-md img-thumbnail\"\n                                        />\n                                        <h4 className=\"mt-3 my-1\">\n                                            {client.name}{' '}\n                                            {client.varifiedClient && (\n                                                <i className=\"mdi mdi-check-decagram text-primary\"></i>\n                                            )}\n                                        </h4>\n                                        <p className=\"mb-0 text-muted\">\n                                            <i className=\"mdi mdi-email-outline me-1\"></i>\n                                            {client.emailId}\n                                        </p>\n                                        <hr className=\"bg-dark-lighten my-3\" />\n                                        <h5 className=\"mt-3 fw-semibold text-muted\">\n                                            Complete Total <b>{client.completedProject}</b> Project\n                                        </h5>\n\n                                        <Row className=\"mt-3\">\n                                            <Col xs={4}>\n                                                <OverlayTrigger placement=\"top\" overlay={<Tooltip>Message</Tooltip>}>\n                                                    <Link to=\"#\" className=\"btn btn-light w-100\">\n                                                        <i className=\"mdi mdi-message-processing-outline\"></i>\n                                                    </Link>\n                                                </OverlayTrigger>\n                                            </Col>\n                                            <Col xs={4}>\n                                                <OverlayTrigger placement=\"top\" overlay={<Tooltip>Call</Tooltip>}>\n                                                    <Link to=\"#\" className=\"btn btn-light w-100\">\n                                                        <i className=\"mdi mdi-phone\"></i>\n                                                    </Link>\n                                                </OverlayTrigger>\n                                            </Col>\n                                            <Col xs={4}>\n                                                <OverlayTrigger placement=\"top\" overlay={<Tooltip>Email</Tooltip>}>\n                                                    <Link to=\"#\" className=\"btn btn-light w-100\">\n                                                        <i className=\"mdi mdi-email-outline\"></i>\n                                                    </Link>\n                                                </OverlayTrigger>\n                                            </Col>\n                                        </Row>\n                                    </div>\n                                </Card.Body>\n                            </Card>\n                        </Col>\n                    );\n                })}\n            </Row>\n            <Row>\n                <Col xs={12} className=\"text-center\">\n                    <i className=\"mdi mdi-dots-circle mdi-spin font-24 text-muted\"></i>\n                </Col>\n            </Row>\n        </>\n    );\n};\n\nexport default ClientDetails;\n","// images\nimport avatar1 from '../../../../assets/images/users/avatar-1.jpg';\nimport avatar2 from '../../../../assets/images/users/avatar-2.jpg';\nimport avatar3 from '../../../../assets/images/users/avatar-3.jpg';\nimport avatar4 from '../../../../assets/images/users/avatar-4.jpg';\nimport avatar5 from '../../../../assets/images/users/avatar-5.jpg';\nimport avatar6 from '../../../../assets/images/users/avatar-6.jpg';\nimport avatar7 from '../../../../assets/images/users/avatar-7.jpg';\nimport avatar8 from '../../../../assets/images/users/avatar-8.jpg';\n\nconst clientsData = [\n    {\n        avatar: avatar1,\n        varifiedClient: true,\n        name: 'Louise Coleman',\n        emailId: 'LouiseMColeman@dayrep.com',\n        completedProject: 18,\n    },\n    {\n        avatar: avatar2,\n        varifiedClient: true,\n        name: 'Robert Kent',\n        emailId: 'RobertSKent@jourrapide.com',\n        completedProject: 24,\n    },\n    {\n        avatar: avatar3,\n        varifiedClient: false,\n        name: 'Arthur Childress',\n        emailId: 'ArthurEChildress@teleworm.us',\n        completedProject: 11,\n    },\n    {\n        avatar: avatar4,\n        varifiedClient: true,\n        name: 'Ronald McGehee',\n        emailId: 'MartinDJordan@armyspy.com',\n        completedProject: 6,\n    },\n    {\n        avatar: avatar5,\n        varifiedClient: true,\n        name: 'Martin Jordan',\n        emailId: 'artinDJordan@armyspy.com',\n        completedProject: 12,\n    },\n    {\n        avatar: avatar6,\n        varifiedClient: false,\n        name: 'Dewayne Murphy',\n        emailId: 'DewayneBMurphy@armyspy.com',\n        completedProject: 15,\n    },\n    {\n        avatar: avatar7,\n        varifiedClient: true,\n        name: 'Russel Sanchez',\n        emailId: 'RusselHSanchez@rhyta.com',\n        completedProject: 22,\n    },\n    {\n        avatar: avatar8,\n        name: 'Alvin Middleton',\n        emailId: 'AlvinSMiddleton@armyspy.com',\n        completedProject: 7,\n    },\n];\n\nexport { clientsData };\n","// @flow\nimport React from 'react';\n\n// component\nimport PageTitle from '../../../../components/PageTitle';\n\nimport ClientDetails from './ClientDetails';\n\n// dummy data\nimport { clientsData } from './data';\n\nconst Clients = (): React$Element<any> => {\n    return (\n        <>\n            <PageTitle\n                breadCrumbItems={[\n                    { label: 'CRM', path: '/apps/crm/clients' },\n                    { label: 'Clients List', path: '/apps/crm/clients', active: true },\n                ]}\n                title={'Clients List'}\n            />\n\n            <ClientDetails clientsData={clientsData} />\n        </>\n    );\n};\n\nexport default Clients;\n","import * as React from 'react';\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'InputGroupContext';\nexport default context;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useIsRTL } from './ThemeProvider';\nimport { getOverlayDirection } from './helpers';\nimport getInitialPopperStyles from './getInitialPopperStyles';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst Tooltip = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  placement = 'right',\n  className,\n  style,\n  children,\n  arrowProps,\n  hasDoneInitialMeasure,\n  popper,\n  show,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'tooltip');\n  const isRTL = useIsRTL();\n  const [primaryPlacement] = (placement == null ? void 0 : placement.split('-')) || [];\n  const bsDirection = getOverlayDirection(primaryPlacement, isRTL);\n  let computedStyle = style;\n  if (show && !hasDoneInitialMeasure) {\n    computedStyle = {\n      ...style,\n      ...getInitialPopperStyles(popper == null ? void 0 : popper.strategy)\n    };\n  }\n  return /*#__PURE__*/_jsxs(\"div\", {\n    ref: ref,\n    style: computedStyle,\n    role: \"tooltip\",\n    \"x-placement\": primaryPlacement,\n    className: classNames(className, bsPrefix, `bs-tooltip-${bsDirection}`),\n    ...props,\n    children: [/*#__PURE__*/_jsx(\"div\", {\n      className: \"tooltip-arrow\",\n      ...arrowProps\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: `${bsPrefix}-inner`,\n      children: children\n    })]\n  });\n});\nTooltip.displayName = 'Tooltip';\nexport default Tooltip;"],"names":["_ref","clientsData","_jsxs","_Fragment","children","_jsx","Row","map","client","i","Col","xxl","md","Card","Body","Dropdown","align","className","Toggle","variant","Menu","Item","src","avatar","alt","name","varifiedClient","emailId","completedProject","xs","OverlayTrigger","placement","overlay","Tooltip","Link","to","PageTitle","breadCrumbItems","label","path","active","title","ClientDetails","context","React","displayName","ref","bsPrefix","_ref$placement","style","arrowProps","hasDoneInitialMeasure","popper","show","props","_objectWithoutProperties","_excluded","useBootstrapPrefix","isRTL","useIsRTL","_ref2","split","primaryPlacement","_slicedToArray","bsDirection","getOverlayDirection","computedStyle","_objectSpread","getInitialPopperStyles","strategy","role","classNames","concat"],"sourceRoot":""}