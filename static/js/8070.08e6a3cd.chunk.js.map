{"version":3,"file":"static/js/8070.08e6a3cd.chunk.js","mappings":"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","sources":["components/PageTitle.js","pages/uikit/Ribbons.js","../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/CardHeader.js","../node_modules/react-bootstrap/esm/Card.js","../node_modules/react-bootstrap/esm/CardHeaderContext.js","../node_modules/react-bootstrap/esm/divWithClassName.js"],"sourcesContent":["// @flow\nimport React from 'react';\nimport { Row, Col, Breadcrumb } from 'react-bootstrap';\n\ntype BreadcrumbItems = {\n    label: string,\n    path: string,\n    active?: boolean,\n};\n\ntype PageTitleProps = {\n    breadCrumbItems: Array<BreadcrumbItems>,\n    title: string,\n};\n\n/**\n * PageTitle\n */\nconst PageTitle = (props: PageTitleProps): React$Element<any> => {\n    return (\n        <Row>\n            <Col>\n                <div className=\"page-title-box\">\n                    <div className=\"page-title-right\">\n                        <Breadcrumb listProps={{ className: 'm-0' }}>\n                            <Breadcrumb.Item href=\"/\">Stickynote</Breadcrumb.Item>\n\n                            {props.breadCrumbItems.map((item, index) => {\n                                return item.active ? (\n                                    <Breadcrumb.Item active key={index}>\n                                        {item.label}\n                                    </Breadcrumb.Item>\n                                ) : (\n                                    <Breadcrumb.Item key={index} href={item.path}>\n                                        {item.label}\n                                    </Breadcrumb.Item>\n                                );\n                            })}\n                        </Breadcrumb>\n                    </div>\n                    <h4 className=\"page-title\">{props.title}</h4>\n                </div>\n            </Col>\n        </Row>\n    );\n};\n\nexport default PageTitle;\n","// @flow\nimport React from 'react';\nimport { Row, Col, Card } from 'react-bootstrap';\nimport classNames from 'classnames';\n\n// components\nimport PageTitle from '../../components/PageTitle';\n\nconst Ribbon1 = ({ label, color, direction }) => {\n    return (\n        <Card className=\"ribbon-box\">\n            <Card.Body>\n                <div\n                    className={classNames(\n                        'ribbon',\n                        'ribbon-' + color,\n                        { 'bg-dark text-light': color === 'dark' },\n                        direction === 'left' ? 'float-start' : 'float-end'\n                    )}>\n                    <i className=\"mdi mdi-access-point me-1\"></i> {label}\n                </div>\n                <h5 className={classNames('text-' + color, 'mt-0', direction === 'left' ? 'float-end' : 'float-start')}>\n                    {label} Header\n                </h5>\n                <div className=\"ribbon-content\">\n                    <p className=\"mb-0\">\n                        Quisque nec turpis at urna dictum luctus. Suspendisse convallis dignissim eros at volutpat. In\n                        egestas mattis dui. Aliquam mattis dictum aliquet. Nulla sapien mauris, eleifend et sem ac,\n                        commodo dapibus odio.\n                    </p>\n                </div>\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst Ribbon2 = ({ label, color }) => {\n    return (\n        <Card className=\"ribbon-box\">\n            <Card.Body>\n                <div className={classNames('ribbon-two', 'ribbon-two-' + color)}>\n                    <span className={classNames(color === 'dark' ? 'text-light bg-dark' : null)}>{label}</span>\n                </div>\n                <p className=\"mb-0\">\n                    Quisque nec turpis at urna dictum luctus. Suspendisse convallis dignissim eros at volutpat. In\n                    egestas mattis dui. Aliquam mattis dictum aliquet. Nulla sapien mauris, eleifend et sem ac, commodo\n                    dapibus odio. Vivamus pretium nec odio cursus elementum. Suspendisse molestie ullamcorper ornare.\n                </p>\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst Ribbons = (): React$Element<React$FragmentType> => {\n    return (\n        <>\n            <PageTitle\n                breadCrumbItems={[\n                    { label: 'UI', path: '/ui/ribbons' },\n                    { label: 'Base UI', path: '/ui/ribbons' },\n                    { label: 'Ribbons', path: '/ui/ribbons', active: true },\n                ]}\n                title={'Ribbons'}\n            />\n\n            <Row>\n                <Col xxl={4} md={6}>\n                    <Ribbon1 label=\"Primary\" color=\"primary\" direction=\"left\" />\n                </Col>\n                <Col xxl={4} md={6}>\n                    <Ribbon1 label=\"Success\" color=\"success\" direction=\"right\" />\n                </Col>\n                <Col xxl={4} md={6}>\n                    <Ribbon1 label=\"Info\" color=\"info\" direction=\"right\" />\n                </Col>\n            </Row>\n\n            <Row>\n                <Col xxl={4} md={6}>\n                    <Ribbon1 label=\"Warning\" color=\"warning\" direction=\"left\" />\n                </Col>\n                <Col xxl={4} md={6}>\n                    <Ribbon1 label=\"Danger\" color=\"danger\" direction=\"right\" />\n                </Col>\n                <Col xxl={4} md={6}>\n                    <Ribbon1 label=\"Dark\" color=\"dark\" direction=\"right\" />\n                </Col>\n            </Row>\n\n            <Row>\n                <Col xxl={4} md={6}>\n                    <Ribbon1 label=\"Secondary\" color=\"secondary\" direction=\"left\" />\n                </Col>\n                <Col xxl={4} md={6}>\n                    <Ribbon2 label=\"Primary\" color=\"primary\" />\n                </Col>\n                <Col xxl={4} md={6}>\n                    <Ribbon2 label=\"Success\" color=\"success\" />\n                </Col>\n            </Row>\n\n            <Row>\n                <Col xxl={4} md={6}>\n                    <Ribbon2 label=\"Info\" color=\"info\" />\n                </Col>\n                <Col xxl={4} md={6}>\n                    <Ribbon2 label=\"Warning\" color=\"warning\" />\n                </Col>\n                <Col xxl={4} md={6}>\n                    <Ribbon2 label=\"Dark\" color=\"dark\" />\n                </Col>\n            </Row>\n\n            <Row>\n                <Col xxl={4} md={6}>\n                    <Ribbon2 label=\"Danger\" color=\"danger\" />\n                </Col>\n                <Col xxl={4} md={6}>\n                    <Ribbon2 label=\"Secondary\" color=\"secondary\" />\n                </Col>\n            </Row>\n        </>\n    );\n};\n\nexport default Ribbons;\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImg = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  variant,\n  as: Component = 'img',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(variant ? `${prefix}-${variant}` : prefix, className),\n    ...props\n  });\n});\nCardImg.displayName = 'CardImg';\nexport default CardImg;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardHeaderContext from './CardHeaderContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-header');\n  const contextValue = useMemo(() => ({\n    cardHeaderBsPrefix: prefix\n  }), [prefix]);\n  return /*#__PURE__*/_jsx(CardHeaderContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, prefix)\n    })\n  });\n});\nCardHeader.displayName = 'CardHeader';\nexport default CardHeader;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardImg from './CardImg';\nimport CardHeader from './CardHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst DivStyledAsH6 = divWithClassName('h6');\nconst CardBody = createWithBsPrefix('card-body');\nconst CardTitle = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nconst CardSubtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nconst CardLink = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nconst CardText = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nconst CardFooter = createWithBsPrefix('card-footer');\nconst CardImgOverlay = createWithBsPrefix('card-img-overlay');\nconst Card = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  bg,\n  text,\n  border,\n  body = false,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, bg && `bg-${bg}`, text && `text-${text}`, border && `border-${border}`),\n    children: body ? /*#__PURE__*/_jsx(CardBody, {\n      children: children\n    }) : children\n  });\n});\nCard.displayName = 'Card';\nexport default Object.assign(Card, {\n  Img: CardImg,\n  Title: CardTitle,\n  Subtitle: CardSubtitle,\n  Body: CardBody,\n  Link: CardLink,\n  Text: CardText,\n  Header: CardHeader,\n  Footer: CardFooter,\n  ImgOverlay: CardImgOverlay\n});","import * as React from 'react';\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'CardHeaderContext';\nexport default context;","import * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default (className => /*#__PURE__*/React.forwardRef((p, ref) => /*#__PURE__*/_jsx(\"div\", {\n  ...p,\n  ref: ref,\n  className: classNames(p.className, className)\n})));"],"names":["props","_jsx","Row","children","Col","_jsxs","className","Breadcrumb","listProps","Item","href","breadCrumbItems","map","item","index","active","label","path","title","Ribbon1","_ref","color","direction","Card","Body","classNames","Ribbon2","_ref2","_Fragment","PageTitle","xxl","md","CardImg","React","ref","bsPrefix","variant","_ref$as","as","Component","_objectWithoutProperties","_excluded","prefix","useBootstrapPrefix","_objectSpread","concat","displayName","CardHeader","contextValue","useMemo","cardHeaderBsPrefix","CardHeaderContext","Provider","value","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","createWithBsPrefix","CardTitle","CardSubtitle","CardLink","CardText","CardFooter","CardImgOverlay","bg","text","border","_ref$body","body","Object","assign","Img","Title","Subtitle","Link","Text","Header","Footer","ImgOverlay","context","p"],"sourceRoot":""}