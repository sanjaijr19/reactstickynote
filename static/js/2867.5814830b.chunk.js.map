{"version":3,"file":"static/js/2867.5814830b.chunk.js","mappings":"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","sources":["pages/uikit/Avatars.js","../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/CardHeader.js","../node_modules/react-bootstrap/esm/Card.js","../node_modules/react-bootstrap/esm/CardHeaderContext.js","../node_modules/react-bootstrap/esm/divWithClassName.js"],"sourcesContent":["// @flow\nimport React from 'react';\nimport { Row, Col, Card } from 'react-bootstrap';\nimport classNames from 'classnames';\n\n// components\nimport PageTitle from '../../components/PageTitle';\n\n// images\nimport avatar2 from '../../assets/images/users/avatar-2.jpg';\nimport avatar3 from '../../assets/images/users/avatar-3.jpg';\nimport avatar4 from '../../assets/images/users/avatar-4.jpg';\nimport avatar5 from '../../assets/images/users/avatar-5.jpg';\nimport avatar6 from '../../assets/images/users/avatar-6.jpg';\nimport avatar7 from '../../assets/images/users/avatar-7.jpg';\nimport avatar8 from '../../assets/images/users/avatar-8.jpg';\n\nimport img1 from '../../assets/images/small/small-2.jpg';\nimport img2 from '../../assets/images/small/small-3.jpg';\n\nconst RoundedCircle = ({ size }) => {\n    return (\n        <>\n            <Col md={4}>\n                <img src={avatar3} alt=\"\" className={classNames('img-fluid', 'rounded-circle', 'avatar-' + size)} />\n                <p>\n                    <code>.avatar-{size} .rounded-circle</code>\n                </p>\n            </Col>\n        </>\n    );\n};\n\nconst Avatars = (): React$Element<React$FragmentType> => {\n    return (\n        <>\n            <PageTitle\n                breadCrumbItems={[\n                    { label: 'Base UI', path: '/ui/avatars' },\n                    { label: 'Avatars', path: '/ui/avatars', active: true },\n                ]}\n                title={'Avatars'}\n            />\n\n            <Row>\n                <Col xxl={6}>\n                    <Card>\n                        <Card.Body>\n                            <h4 className=\"header-title\">Sizing - Images</h4>\n                            <p className=\"text-muted font-14 mb-3\">\n                                Create and group avatars of different sizes and shapes with the css classes. Using\n                                Bootstrap's naming convention, you can control size of avatar including standard avatar,\n                                or scale it up to different sizes.\n                            </p>\n\n                            <Row>\n                                <Col md={3}>\n                                    <img src={avatar2} alt=\"\" className=\"img-fluid avatar-xs rounded\" />\n                                    <p>\n                                        <code>.avatar-xs</code>\n                                    </p>\n                                    <img src={avatar3} alt=\"\" className=\"img-fluid avatar-sm rounded mt-2\" />\n                                    <p className=\"mb-2 mb-sm-0\">\n                                        <code>.avatar-sm</code>\n                                    </p>\n                                </Col>\n\n                                <Col md={3}>\n                                    <img src={avatar4} alt=\"\" className=\"img-fluid avatar-md rounded\" />\n                                    <p>\n                                        <code>.avatar-md</code>\n                                    </p>\n                                </Col>\n\n                                <Col md={3}>\n                                    <img src={avatar5} alt=\"\" className=\"img-fluid avatar-lg rounded\" />\n                                    <p>\n                                        <code>.avatar-lg</code>\n                                    </p>\n                                </Col>\n\n                                <Col md={3}>\n                                    <img src={avatar6} alt=\"\" className=\"img-fluid avatar-xl rounded\" />\n                                    <p className=\"mb-0\">\n                                        <code>.avatar-xl</code>\n                                    </p>\n                                </Col>\n                            </Row>\n                        </Card.Body>\n                    </Card>\n                </Col>\n                <Col xxl={6}>\n                    <Card>\n                        <Card.Body>\n                            <h4 className=\"header-title\">Rounded Circle</h4>\n                            <p className=\"text-muted font-14 mb-3\">\n                                Using an additional class <code>.rounded-circle</code> in <code>&lt;img /&gt;</code>{' '}\n                                element creates the rounded avatar.\n                            </p>\n\n                            <Row>\n                                {['md', 'lg', 'xl'].map((size, index) => {\n                                    return <RoundedCircle key={index} size={size} />;\n                                })}\n                            </Row>\n                        </Card.Body>\n                    </Card>\n                </Col>\n            </Row>\n\n            <Row>\n                <Col xxl={6}>\n                    <Card>\n                        <Card.Body>\n                            <h4 className=\"header-title\">Sizing - Background Color</h4>\n                            <p className=\"text-muted font-14 mb-3\">\n                                Using utilities classes of background e.g. <code>bg-*</code> allows you to have any\n                                background color as well.\n                            </p>\n\n                            <Row>\n                                <Col md={3}>\n                                    <div className=\"avatar-xs\">\n                                        <span className=\"avatar-title rounded\">xs</span>\n                                    </div>\n                                    <p className=\"mb-2 font-14 mt-1\">\n                                        Using <code>.avatar-xs</code>\n                                    </p>\n\n                                    <div className=\"avatar-sm mt-3\">\n                                        <span className=\"avatar-title bg-success rounded\">sm</span>\n                                    </div>\n\n                                    <p className=\"mb-0 font-14 mt-1\">\n                                        Using <code>.avatar-sm</code>\n                                    </p>\n                                </Col>\n\n                                <Col md={3}>\n                                    <div className=\"avatar-md\">\n                                        <span className=\"avatar-title bg-info-lighten text-info font-20 rounded\">\n                                            MD\n                                        </span>\n                                    </div>\n\n                                    <p className=\"mb-0 font-14 mt-1\">\n                                        Using <code>.avatar-md</code>\n                                    </p>\n                                </Col>\n\n                                <Col md={3}>\n                                    <div className=\"avatar-lg\">\n                                        <span className=\"avatar-title bg-danger font-22 rounded\">LG</span>\n                                    </div>\n\n                                    <p className=\"mb-0 font-14 mt-1\">\n                                        Using <code>.avatar-lg</code>\n                                    </p>\n                                </Col>\n\n                                <Col md={3}>\n                                    <div className=\"avatar-xl\">\n                                        <span className=\"avatar-title bg-warning-lighten text-warning font-24 rounded\">\n                                            XL\n                                        </span>\n                                    </div>\n\n                                    <p className=\"mb-0 font-14 mt-1\">\n                                        Using <code>.avatar-xl</code>\n                                    </p>\n                                </Col>\n                            </Row>\n                        </Card.Body>\n                    </Card>\n                </Col>\n                <Col xxl={6}>\n                    <Card>\n                        <Card.Body>\n                            <h4 className=\"header-title\">Rounded Circle Background</h4>\n                            <p className=\"text-muted font-14 mb-3\">\n                                Using an additional class <code>.rounded-circle</code> in <code>&lt;img /&gt;</code>{' '}\n                                element creates the rounded avatar.\n                            </p>\n\n                            <Row>\n                                <Col md={4}>\n                                    <div className=\"avatar-md\">\n                                        <span className=\"avatar-title bg-secondary-lighten text-secondary font-20 rounded-circle\">\n                                            MD\n                                        </span>\n                                    </div>\n\n                                    <p className=\"mb-0 font-14 mt-1\">\n                                        Using <code>.avatar-md .rounded-circle</code>\n                                    </p>\n                                </Col>\n                                <Col md={4}>\n                                    <div className=\"avatar-lg\">\n                                        <span className=\"avatar-title bg-light text-dark font-22 rounded-circle\">\n                                            LG\n                                        </span>\n                                    </div>\n\n                                    <p className=\"mb-0 font-14 mt-1\">\n                                        Using <code>.avatar-lg .rounded-circle</code>\n                                    </p>\n                                </Col>\n                                <Col md={4}>\n                                    <div className=\"avatar-xl\">\n                                        <span className=\"avatar-title bg-primary-lighten text-primary font-24 rounded-circle\">\n                                            XL\n                                        </span>\n                                    </div>\n\n                                    <p className=\"mb-0 font-14 mt-1\">\n                                        Using <code>.avatar-xl .rounded-circle</code>\n                                    </p>\n                                </Col>\n                            </Row>\n                        </Card.Body>\n                    </Card>\n                </Col>\n            </Row>\n            <Row>\n                <Col>\n                    <Card>\n                        <Card.Body>\n                            <h4 className=\"header-title\">Images shapes</h4>\n                            <p className=\"text-muted font-14 mb-3\">Avatars with different sizes and shapes.</p>\n\n                            <Row>\n                                <Col sm={2}>\n                                    <img src={img1} alt=\"\" className=\"img-fluid rounded\" width=\"200\" />\n                                    <p className=\"mb-0\">\n                                        <code>.rounded</code>\n                                    </p>\n                                </Col>\n\n                                <Col sm={2} className=\"text-center\">\n                                    <img src={avatar6} alt=\"\" className=\"img-fluid rounded\" width=\"120\" />\n                                    <p className=\"mb-0\">\n                                        <code>.rounded</code>\n                                    </p>\n                                </Col>\n\n                                <Col sm={2} className=\"text-center\">\n                                    <img src={avatar7} alt=\"\" className=\"img-fluid rounded-circle\" width=\"120\" />\n                                    <p className=\"mb-0\">\n                                        <code>.rounded-circle</code>\n                                    </p>\n                                </Col>\n\n                                <Col sm={2}>\n                                    <img src={img2} alt=\"\" className=\"img-fluid img-thumbnail\" width=\"200\" />\n                                    <p className=\"mb-0\">\n                                        <code>.img-thumbnail</code>\n                                    </p>\n                                </Col>\n\n                                <Col sm={2}>\n                                    <img\n                                        src={avatar8}\n                                        alt=\"\"\n                                        className=\"img-fluid rounded-circle img-thumbnail\"\n                                        width=\"120\"\n                                    />\n                                    <p className=\"mb-0\">\n                                        <code>.rounded-circle .img-thumbnail</code>\n                                    </p>\n                                </Col>\n                            </Row>\n                        </Card.Body>\n                    </Card>\n                </Col>\n            </Row>\n        </>\n    );\n};\n\nexport default Avatars;\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImg = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  variant,\n  as: Component = 'img',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(variant ? `${prefix}-${variant}` : prefix, className),\n    ...props\n  });\n});\nCardImg.displayName = 'CardImg';\nexport default CardImg;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardHeaderContext from './CardHeaderContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-header');\n  const contextValue = useMemo(() => ({\n    cardHeaderBsPrefix: prefix\n  }), [prefix]);\n  return /*#__PURE__*/_jsx(CardHeaderContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, prefix)\n    })\n  });\n});\nCardHeader.displayName = 'CardHeader';\nexport default CardHeader;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardImg from './CardImg';\nimport CardHeader from './CardHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst DivStyledAsH6 = divWithClassName('h6');\nconst CardBody = createWithBsPrefix('card-body');\nconst CardTitle = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nconst CardSubtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nconst CardLink = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nconst CardText = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nconst CardFooter = createWithBsPrefix('card-footer');\nconst CardImgOverlay = createWithBsPrefix('card-img-overlay');\nconst Card = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  bg,\n  text,\n  border,\n  body = false,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, bg && `bg-${bg}`, text && `text-${text}`, border && `border-${border}`),\n    children: body ? /*#__PURE__*/_jsx(CardBody, {\n      children: children\n    }) : children\n  });\n});\nCard.displayName = 'Card';\nexport default Object.assign(Card, {\n  Img: CardImg,\n  Title: CardTitle,\n  Subtitle: CardSubtitle,\n  Body: CardBody,\n  Link: CardLink,\n  Text: CardText,\n  Header: CardHeader,\n  Footer: CardFooter,\n  ImgOverlay: CardImgOverlay\n});","import * as React from 'react';\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'CardHeaderContext';\nexport default context;","import * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default (className => /*#__PURE__*/React.forwardRef((p, ref) => /*#__PURE__*/_jsx(\"div\", {\n  ...p,\n  ref: ref,\n  className: classNames(p.className, className)\n})));"],"names":["RoundedCircle","_ref","size","_jsx","_Fragment","children","_jsxs","Col","md","src","avatar3","alt","className","classNames","PageTitle","breadCrumbItems","label","path","active","title","Row","xxl","Card","Body","avatar2","avatar4","avatar5","avatar6","map","index","sm","img1","width","avatar7","img2","avatar8","CardImg","React","ref","bsPrefix","variant","_ref$as","as","Component","props","_objectWithoutProperties","_excluded","prefix","useBootstrapPrefix","_objectSpread","concat","displayName","CardHeader","contextValue","useMemo","cardHeaderBsPrefix","CardHeaderContext","Provider","value","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","createWithBsPrefix","CardTitle","CardSubtitle","CardLink","CardText","CardFooter","CardImgOverlay","bg","text","border","_ref$body","body","Object","assign","Img","Title","Subtitle","Link","Text","Header","Footer","ImgOverlay","context","p"],"sourceRoot":""}