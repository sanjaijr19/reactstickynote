{"version":3,"file":"static/js/2250.aff89b9a.chunk.js","mappings":"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","sources":["components/PageTitle.js","components/PricingCard.js","pages/other/Pricing.js","../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/CardHeader.js","../node_modules/react-bootstrap/esm/Card.js","../node_modules/react-bootstrap/esm/CardHeaderContext.js","../node_modules/react-bootstrap/esm/divWithClassName.js"],"sourcesContent":["// @flow\nimport React from 'react';\nimport { Row, Col, Breadcrumb } from 'react-bootstrap';\n\ntype BreadcrumbItems = {\n    label: string,\n    path: string,\n    active?: boolean,\n};\n\ntype PageTitleProps = {\n    breadCrumbItems: Array<BreadcrumbItems>,\n    title: string,\n};\n\n/**\n * PageTitle\n */\nconst PageTitle = (props: PageTitleProps): React$Element<any> => {\n    return (\n        <Row>\n            <Col>\n                <div className=\"page-title-box\">\n                    <div className=\"page-title-right\">\n                        <Breadcrumb listProps={{ className: 'm-0' }}>\n                            <Breadcrumb.Item href=\"/\">Stickynote</Breadcrumb.Item>\n\n                            {props.breadCrumbItems.map((item, index) => {\n                                return item.active ? (\n                                    <Breadcrumb.Item active key={index}>\n                                        {item.label}\n                                    </Breadcrumb.Item>\n                                ) : (\n                                    <Breadcrumb.Item key={index} href={item.path}>\n                                        {item.label}\n                                    </Breadcrumb.Item>\n                                );\n                            })}\n                        </Breadcrumb>\n                    </div>\n                    <h4 className=\"page-title\">{props.title}</h4>\n                </div>\n            </Col>\n        </Row>\n    );\n};\n\nexport default PageTitle;\n","// @flow\nimport React from 'react';\nimport { Row, Col, Card } from 'react-bootstrap';\nimport classNames from 'classnames';\n\ntype PlansItems = {\n    id: number,\n    name: string,\n    icon: string,\n    price: string,\n    duration: string,\n    features: Array<string>,\n    isRecommended: boolean,\n};\n\ntype PricingCardProps = {\n    plans: Array<PlansItems>,\n    containerClass?: string,\n};\n\nconst PricingCard = ({ plans, containerClass }: PricingCardProps): React$Element<any> => {\n    return (\n        <>\n            <Row className={containerClass}>\n                {plans.map((plan, idx) => {\n                    return (\n                        <Col md={4} key={idx}>\n                            <Card\n                                className={classNames('card-pricing', {\n                                    'card-pricing-recommended': plan.isRecommended,\n                                })}>\n                                <Card.Body className=\"text-center\">\n                                    {plan.isRecommended && <div className=\"card-pricing-plan-tag\">Recommended</div>}\n                                    <p className=\"card-pricing-plan-name fw-bold text-uppercase\">{plan.name}</p>\n                                    <i className={classNames('card-pricing-icon', plan.icon, 'text-primary')}></i>\n                                    <h2 className=\"card-pricing-price\">\n                                        {plan.price} <span>/ {plan.duration}</span>\n                                    </h2>\n                                    <ul className=\"card-pricing-features\">\n                                        {plan.features.map((feature, idx1) => {\n                                            return <li key={idx1}>{feature}</li>;\n                                        })}\n                                    </ul>\n                                    <button className=\"btn btn-primary mt-4 mb-2 btn-rounded\">Choose Plan</button>\n                                </Card.Body>\n                            </Card>\n                        </Col>\n                    );\n                })}\n            </Row>\n        </>\n    );\n};\n\nexport default PricingCard;\n","// @flow\nimport React from 'react';\nimport { Row, Col } from 'react-bootstrap';\n\n// components\nimport PageTitle from '../../components/PageTitle';\nimport PricingCard from '../../components/PricingCard';\n\n// Pricing component\nconst Pricing = (): React$Element<React$FragmentType> => {\n    const plans = [\n        {\n            id: 1,\n            name: 'Professional Pack',\n            icon: 'dripicons-user',\n            price: '$19',\n            duration: 'Month',\n            features: ['10 GB Storage', '500 GB Bandwidth', 'No Domain', '1 User', 'Email Support', '24x7 Support'],\n            isRecommended: false,\n        },\n        {\n            id: 2,\n            name: 'Business Pack',\n            icon: 'dripicons-briefcase',\n            price: '$29',\n            duration: 'Month',\n            features: ['50 GB Storage', '900 GB Bandwidth', '2 Domain', '10 User', 'Email Support', '24x7 Support'],\n            isRecommended: true,\n        },\n        {\n            id: 3,\n            name: 'Enterprise Pack',\n            icon: 'dripicons-store',\n            price: '$39',\n            duration: 'Month',\n            features: [\n                '100 GB Storage',\n                'Unlimited Bandwidth',\n                '10 Domain',\n                'Unlimited Users',\n                'Email Support',\n                '24x7 Support',\n            ],\n            isRecommended: false,\n        },\n    ];\n\n    return (\n        <>\n            <PageTitle\n                breadCrumbItems={[\n                    { label: 'Pages', path: '/pages/pricing' },\n                    { label: 'Pricing', path: '/pages/pricing', active: true },\n                ]}\n                title={'Pricing'}\n            />\n\n            <Row className=\"justify-content-center\">\n                <Col xl={10}>\n                    <div className=\"text-center\">\n                        <h3 className=\"mb-2\">Our Plans and Pricing</h3>\n                        <p className=\"text-muted w-50 m-auto\">\n                            We have plans and prices that fit your business perfectly. Make your client site a success\n                            with our products.\n                        </p>\n                    </div>\n\n                    {/* pricing cards */}\n                    <PricingCard plans={plans} containerClass={'mt-sm-5 mt-3 mb-3'} />\n                </Col>\n            </Row>\n        </>\n    );\n};\n\nexport default Pricing;\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImg = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  variant,\n  as: Component = 'img',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(variant ? `${prefix}-${variant}` : prefix, className),\n    ...props\n  });\n});\nCardImg.displayName = 'CardImg';\nexport default CardImg;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardHeaderContext from './CardHeaderContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-header');\n  const contextValue = useMemo(() => ({\n    cardHeaderBsPrefix: prefix\n  }), [prefix]);\n  return /*#__PURE__*/_jsx(CardHeaderContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, prefix)\n    })\n  });\n});\nCardHeader.displayName = 'CardHeader';\nexport default CardHeader;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardImg from './CardImg';\nimport CardHeader from './CardHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst DivStyledAsH6 = divWithClassName('h6');\nconst CardBody = createWithBsPrefix('card-body');\nconst CardTitle = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nconst CardSubtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nconst CardLink = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nconst CardText = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nconst CardFooter = createWithBsPrefix('card-footer');\nconst CardImgOverlay = createWithBsPrefix('card-img-overlay');\nconst Card = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  bg,\n  text,\n  border,\n  body = false,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, bg && `bg-${bg}`, text && `text-${text}`, border && `border-${border}`),\n    children: body ? /*#__PURE__*/_jsx(CardBody, {\n      children: children\n    }) : children\n  });\n});\nCard.displayName = 'Card';\nexport default Object.assign(Card, {\n  Img: CardImg,\n  Title: CardTitle,\n  Subtitle: CardSubtitle,\n  Body: CardBody,\n  Link: CardLink,\n  Text: CardText,\n  Header: CardHeader,\n  Footer: CardFooter,\n  ImgOverlay: CardImgOverlay\n});","import * as React from 'react';\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'CardHeaderContext';\nexport default context;","import * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default (className => /*#__PURE__*/React.forwardRef((p, ref) => /*#__PURE__*/_jsx(\"div\", {\n  ...p,\n  ref: ref,\n  className: classNames(p.className, className)\n})));"],"names":["props","_jsx","Row","children","Col","_jsxs","className","Breadcrumb","listProps","Item","href","breadCrumbItems","map","item","index","active","label","path","title","_ref","plans","containerClass","_Fragment","plan","idx","md","Card","classNames","isRecommended","Body","name","icon","price","duration","features","feature","idx1","PageTitle","xl","PricingCard","id","CardImg","React","ref","bsPrefix","variant","_ref$as","as","Component","_objectWithoutProperties","_excluded","prefix","useBootstrapPrefix","_objectSpread","concat","displayName","CardHeader","contextValue","useMemo","cardHeaderBsPrefix","CardHeaderContext","Provider","value","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","createWithBsPrefix","CardTitle","CardSubtitle","CardLink","CardText","CardFooter","CardImgOverlay","bg","text","border","_ref$body","body","Object","assign","Img","Title","Subtitle","Link","Text","Header","Footer","ImgOverlay","context","p"],"sourceRoot":""}