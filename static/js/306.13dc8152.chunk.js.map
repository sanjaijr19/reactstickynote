{"version":3,"file":"static/js/306.13dc8152.chunk.js","mappings":"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","sources":["components/PageTitle.js","pages/uikit/DragDrop.js","../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/CardHeader.js","../node_modules/react-bootstrap/esm/Card.js","../node_modules/react-bootstrap/esm/CardHeaderContext.js","../node_modules/react-bootstrap/esm/divWithClassName.js","../node_modules/@babel/runtime/helpers/esm/inheritsLoose.js"],"sourcesContent":["// @flow\nimport React from 'react';\nimport { Row, Col, Breadcrumb } from 'react-bootstrap';\n\ntype BreadcrumbItems = {\n    label: string,\n    path: string,\n    active?: boolean,\n};\n\ntype PageTitleProps = {\n    breadCrumbItems: Array<BreadcrumbItems>,\n    title: string,\n};\n\n/**\n * PageTitle\n */\nconst PageTitle = (props: PageTitleProps): React$Element<any> => {\n    return (\n        <Row>\n            <Col>\n                <div className=\"page-title-box\">\n                    <div className=\"page-title-right\">\n                        <Breadcrumb listProps={{ className: 'm-0' }}>\n                            <Breadcrumb.Item href=\"/\">Stickynote</Breadcrumb.Item>\n\n                            {props.breadCrumbItems.map((item, index) => {\n                                return item.active ? (\n                                    <Breadcrumb.Item active key={index}>\n                                        {item.label}\n                                    </Breadcrumb.Item>\n                                ) : (\n                                    <Breadcrumb.Item key={index} href={item.path}>\n                                        {item.label}\n                                    </Breadcrumb.Item>\n                                );\n                            })}\n                        </Breadcrumb>\n                    </div>\n                    <h4 className=\"page-title\">{props.title}</h4>\n                </div>\n            </Col>\n        </Row>\n    );\n};\n\nexport default PageTitle;\n","// @flow\nimport React, { useState } from 'react';\nimport { Row, Col, Card } from 'react-bootstrap';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport classNames from 'classnames';\n\n// components\nimport PageTitle from '../../components/PageTitle';\n\nconst Item = ({ color }) => {\n    return (\n        <Card className={classNames('mb-0', 'mt-3', 'text-white', 'bg-' + color)}>\n            <Card.Body>\n                <blockquote className=\"card-bodyquote mb-0\">\n                    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante.</p>\n                    <footer>\n                        Someone famous in <cite title=\"Source Title\">Source Title</cite>\n                    </footer>\n                </blockquote>\n            </Card.Body>\n        </Card>\n    );\n};\n\n/**\n * Reorders the list\n * @param {*} list\n * @param {*} startIndex\n * @param {*} endIndex\n */\nconst reorder = (list, startIndex, endIndex) => {\n    const result = Array.from(list);\n    const [removed] = result.splice(startIndex, 1);\n    result.splice(endIndex, 0, removed);\n\n    return result;\n};\n\n// DragDrop\nconst DragDrop = (): React$Element<React$FragmentType> => {\n    const [items, setItems] = useState(['primary', 'success', 'info', 'danger']);\n\n    /**\n     * On drag ends\n     * @param {3} result\n     */\n    const onDragEnd = (result) => {\n        // dropped outside the list\n        if (!result.destination) {\n            return;\n        }\n\n        const localItems = reorder(items, result.source.index, result.destination.index);\n        setItems(localItems);\n    };\n    return (\n        <>\n            <PageTitle\n                breadCrumbItems={[\n                    { label: 'Extended UI', path: '/ui/dragdrop' },\n                    { label: 'Drag and Drop', path: '/ui/dragdrop', active: true },\n                ]}\n                title={'Drag and Drop'}\n            />\n\n            <Row>\n                <Col>\n                    <DragDropContext onDragEnd={onDragEnd}>\n                        <Row>\n                            <Col>\n                                <Card>\n                                    <Card.Body>\n                                        <Droppable droppableId=\"droppable\" direction=\"horizontal\">\n                                            {(provided, snapshot) => (\n                                                <div {...provided.droppableProps} ref={provided.innerRef}>\n                                                    <h4 className=\"header-title\">Simple Drag and Drop Example</h4>\n                                                    <p className=\"text-muted font-14\">Drag and drop cards in a list</p>\n                                                    <div className=\"d-flex\">\n                                                        {items.map((color, index) => (\n                                                            <Draggable key={color} draggableId={color} index={index}>\n                                                                {(provided, snapshot) => (\n                                                                    <div\n                                                                        className=\"me-2\"\n                                                                        ref={provided.innerRef}\n                                                                        {...provided.draggableProps}\n                                                                        {...provided.dragHandleProps}>\n                                                                        <Item color={color} />\n                                                                    </div>\n                                                                )}\n                                                            </Draggable>\n                                                        ))}\n                                                        {provided.placeholder}\n                                                    </div>\n                                                </div>\n                                            )}\n                                        </Droppable>\n                                    </Card.Body>\n                                </Card>\n                            </Col>\n                        </Row>\n                    </DragDropContext>\n                </Col>\n            </Row>\n        </>\n    );\n};\n\nexport default DragDrop;\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImg = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  variant,\n  as: Component = 'img',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(variant ? `${prefix}-${variant}` : prefix, className),\n    ...props\n  });\n});\nCardImg.displayName = 'CardImg';\nexport default CardImg;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardHeaderContext from './CardHeaderContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-header');\n  const contextValue = useMemo(() => ({\n    cardHeaderBsPrefix: prefix\n  }), [prefix]);\n  return /*#__PURE__*/_jsx(CardHeaderContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, prefix)\n    })\n  });\n});\nCardHeader.displayName = 'CardHeader';\nexport default CardHeader;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardImg from './CardImg';\nimport CardHeader from './CardHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst DivStyledAsH6 = divWithClassName('h6');\nconst CardBody = createWithBsPrefix('card-body');\nconst CardTitle = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nconst CardSubtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nconst CardLink = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nconst CardText = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nconst CardFooter = createWithBsPrefix('card-footer');\nconst CardImgOverlay = createWithBsPrefix('card-img-overlay');\nconst Card = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  bg,\n  text,\n  border,\n  body = false,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, bg && `bg-${bg}`, text && `text-${text}`, border && `border-${border}`),\n    children: body ? /*#__PURE__*/_jsx(CardBody, {\n      children: children\n    }) : children\n  });\n});\nCard.displayName = 'Card';\nexport default Object.assign(Card, {\n  Img: CardImg,\n  Title: CardTitle,\n  Subtitle: CardSubtitle,\n  Body: CardBody,\n  Link: CardLink,\n  Text: CardText,\n  Header: CardHeader,\n  Footer: CardFooter,\n  ImgOverlay: CardImgOverlay\n});","import * as React from 'react';\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'CardHeaderContext';\nexport default context;","import * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default (className => /*#__PURE__*/React.forwardRef((p, ref) => /*#__PURE__*/_jsx(\"div\", {\n  ...p,\n  ref: ref,\n  className: classNames(p.className, className)\n})));","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}"],"names":["props","_jsx","Row","children","Col","_jsxs","className","Breadcrumb","listProps","Item","href","breadCrumbItems","map","item","index","active","label","path","title","_ref","color","Card","classNames","Body","_useState","useState","_useState2","_slicedToArray","items","setItems","_Fragment","PageTitle","DragDropContext","onDragEnd","result","destination","localItems","list","startIndex","endIndex","Array","from","_result$splice","splice","removed","reorder","source","Droppable","droppableId","direction","provided","snapshot","_objectSpread","droppableProps","ref","innerRef","Draggable","draggableId","draggableProps","dragHandleProps","placeholder","CardImg","React","bsPrefix","variant","_ref$as","as","Component","_objectWithoutProperties","_excluded","prefix","useBootstrapPrefix","concat","displayName","CardHeader","contextValue","useMemo","cardHeaderBsPrefix","CardHeaderContext","Provider","value","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","createWithBsPrefix","CardTitle","CardSubtitle","CardLink","CardText","CardFooter","CardImgOverlay","bg","text","border","_ref$body","body","Object","assign","Img","Title","Subtitle","Link","Text","Header","Footer","ImgOverlay","context","p","_inheritsLoose","subClass","superClass","prototype","create","constructor"],"sourceRoot":""}